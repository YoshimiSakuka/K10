###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     09/Dec/2014  15:48:26 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\2012115206\hxb\common\spe #
#                    ed.c                                                     #
#    Command line =  C:\Users\Administrator\Desktop\2012115206\hxb\common\spe #
#                    ed.c -D DEBUG -lCN C:\Users\Administrator\Desktop\201211 #
#                    5206\hxb\Debug\List\ -lB C:\Users\Administrator\Desktop\ #
#                    2012115206\hxb\Debug\List\ -o                            #
#                    C:\Users\Administrator\Desktop\2012115206\hxb\Debug\Obj\ #
#                     --no_cse --no_unroll --no_inline --no_code_motion       #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -Ol --use_c++_inline                              #
#    List file    =  C:\Users\Administrator\Desktop\2012115206\hxb\Debug\List #
#                    \speed.lst                                               #
#    Object file  =  C:\Users\Administrator\Desktop\2012115206\hxb\Debug\Obj\ #
#                    speed.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\2012115206\hxb\common\speed.c
      1          //#include "includes.h"
      2          //#include "gpio.h" 
      3          //#include "speed.h" 
      4          #include "speed.h"
      5          #include "math.h"
      6          
      7          //*******************************速度环*******************
      8          
      9          float speed;
     10          float  ExV=0;
     11          float  ExV1=0;
     12          float  LSV=0;
     13          float  LSV1=0;
     14          int out=2750;
     15          float  Vin=0; 
     16          float ExV_cun[10];
     17          byte speed_flag;
     18          
     19          
     20          //************************速度控制*****************888*
     21           void Speedcontrol()
     22              {
     23               
     24                   Vin=motorspeed;
     25                   speed=(speed*6+Vin*4)/10;
     26                   ExV = speedset-speed;
     27                   
     28                   /*if(ExV>10)
     29                    ExV=10;
     30                  if(ExV<-10)
     31                    ExV=-10; 
     32                   */
     33                   LSV=ExV-ExV1;
     34                   
     35                   
     36             /*     for(c=9;c>0;c--)
     37                   {ExV_cun[c]=ExV_cun[c-1];}    //存储前10次速度进行积分 
     38                   ExV_cun[0] = ExV;
     39                 */ 
     40             if(ramp_flag==0)
     41             if(speed_flag==1)
     42             if(finally==0)  
     43             if(motorspeed>0&&motorspeed<150)
     44            {//Enable_Speed=2;
     45              Enable_Speed=0;
     46            }//speed_flag=0;
     47            
     48          
     49             
     50              if(Enable_Speed==1)
     51              out += (int)(S_I *ExV + S_P*LSV + S_D*LSV1); //
     52              //速度限幅，4000需要根据实际情况修改
     53          
     54                    if(out > 5500)
     55                     out = 5500;
     56                    if(out <0)
     57                     out = 0;  /**/
     58           
     59             if(motorspeed>200)
     60             {speed_flag=1;}   
     61             
     62          
     63              /* */
     64                   
     65                    ExV1= ExV;                          //上一时刻的偏差  
     66                    LSV1=LSV;
     67              }
     68           
     69           
     70          /*
     71          void filtering(int data)
     72           {
     73             
     74           save[4]=save[3];
     75           save[3]=save[2];
     76           save[2]=save[1];
     77           save[1]=save[0];
     78           save[0]=data;
     79           
     80           //average=save[0]*0.2+save[1]*0.2+save[2]*0.2+save[3]*0.2+save[4]*0.2;
     81           average= save[4];
     82           
     83          if(save[4]>save[3]&&save[3]>save[2])
     84              average=save[3];
     85          if(save[2]>save[3]&&save[3]>save[4])
     86              average=save[3];
     87           
     88          if(save[3]>save[4]&&save[4]>save[2])
     89              average=save[4];
     90          if(save[2]>save[4]&&save[4]>save[3])
     91              average=save[4];
     92           
     93          if(save[3]>save[2]&&save[2]>save[4])
     94              average=save[2];  
     95          if(save[4]>save[2]&&save[2]>save[3])
     96              average=save[2];  
     97          
     98           if(save[1]>save[0]&&save[0]>average)
     99               average=save[0];   
    100           if(average>save[0]&&save[0]>save[1])
    101               average=save[0]; 
    102           
    103           if(save[0]>save[1]&&save[1]>average)
    104               average=save[0];   
    105           if(average>save[1]&&save[1]>save[0])
    106               average=save[1]; 
    107           
    108          }*/
    109          
    110           
    111           
    112          //int abs(int x)
    113          //{if(x<0)
    114          //  x=-x;
    115          //return x;}
    116          //
    117          
    118           
    119           
    120           
    121           
    122           
    123           
    124           
    125           
    126          
    127             

Errors: 1
Warnings: none
