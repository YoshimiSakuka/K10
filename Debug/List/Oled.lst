###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        27/May/2016  20:27:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\ye\Desktop\K10\common\Oled.c
#    Command line =  
#        C:\Users\ye\Desktop\K10\common\Oled.c -D DEBUG -lCN
#        C:\Users\ye\Desktop\K10\Debug\List\ -lB
#        C:\Users\ye\Desktop\K10\Debug\List\ -o
#        C:\Users\ye\Desktop\K10\Debug\Obj\ --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -Ol --use_c++_inline
#    List file    =  C:\Users\ye\Desktop\K10\Debug\List\Oled.lst
#    Object file  =  C:\Users\ye\Desktop\K10\Debug\Obj\Oled.o
#
###############################################################################

C:\Users\ye\Desktop\K10\common\Oled.c
      1          #include"Oled.h"
      2          
      3          /********************************************
      4          龙丘MC9S12XS128多功能开发板 
      5          Designed by Chiu Sir
      6          E-mail:chiusir@yahoo.cn
      7          软件版本:V1.1
      8          最后更新:2011年9月18日
      9          相关信息参考下列地址：
     10          网站：  http://www.lqist.cn
     11          淘宝店：http://shop36265907.taobao.com
     12          ------------------------------------
     13          Code Warrior 5.0/1
     14          Target : MC9S12XS128
     15          Crystal: 16.000Mhz
     16          busclock:16.000MHz
     17          pllclock:32.000MHz    
     18           
     19          使用说明：
     20          OLED电源使用3.3V。   
     21          ----------------
     22          G    电源地
     23          3.3V 接3.3V电源
     24          D0   PORTC_PC12  
     25          D1   PORTC_PC13
     26          RST  PORTC_PC14 
     27          DC   PORTC_PC15
     28          CS   已接地，不用接
     29          ============================================
     30          OLED电源使用5V。   
     31          ----------------
     32          G    电源地
     33          3.3V 接5V电源，电源跟模块之间串接100欧姆电阻，并加3.3V钳位二极管
     34          D0   PORTC_PC12 单片机跟模块之间串接1k-2k电阻 PD1
     35          D1   PORTC_PC13 单片机跟模块之间串接1k-2k电阻 PD0  
     36          RST  PORTC_PC14 单片机跟模块之间串接1k-2k电阻 PD3
     37          DC   PORTC_PC15 单片机跟模块之间串接1k-2k电阻 PD2
     38          CS   已接地，不用接     
     39          ============================================     
     40          如果用户使用的是5V单片机，请看用户手册，切勿烧毁模块！  
     41          ============================================*/
     42          
     43          #define XLevelL		0x00
     44          #define XLevelH		0x10
     45          #define XLevel		((XLevelH&0x0F)*16+XLevelL)
     46          #define Max_Column	128
     47          #define Max_Row		  64
     48          #define	Brightness	0xCF 
     49          
     50          /*
     51          4线SPI使用说明：
     52          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
     53          VCC 供内部逻辑电压 1.8~6V   
     54          GND 地
     55          
     56          BS0 低电平
     57          BS1 低电平
     58          BS2 低电平
     59          
     60          CS  片选管脚
     61          DC  命令数据选择管脚
     62          RES 模块复位管脚 
     63          D0（SCLK） ，时钟脚，由MCU控制
     64          D1（MOSI） ，主输出从输入数据脚，由MCU控制
     65          
     66          D2 悬空      
     67          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
     68          RD  低电平 ，也可悬空，但最好设为低电平
     69          RW  低电平 ，也可悬空，但最好设为低电平
     70          RD  低电平 ，也可悬空，但最好设为低电平   
     71          */
     72          
     73          
     74          #define X_WIDTH 128
     75          #define Y_WIDTH 64
     76          
     77          
     78          //======================================

   \                                 In section .rodata, align 4
     79          const u8 F6x8[][6] =//------------------------------------------------------------------------
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     80          {
     81              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     82              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     83              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     84              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     85              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     86              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     87              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     88              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     89              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     90              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     91              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     92              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     93              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     94              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     95              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     96              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     97              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     98              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     99              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
    100              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
    101              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
    102              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
    103              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
    104              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
    105              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
    106              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
    107              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
    108              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
    109              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
    110              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
    111              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
    112              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
    113              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
    114              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    115              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    116              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    117              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    118              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    119              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    120              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    121              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    122              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    123              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    124              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    125              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    126              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    127              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    128              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    129              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    130              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    131              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    132              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    133              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    134              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    135              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    136              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    137              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    138              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    139              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    140              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    141              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    142              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    143              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    144              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    145              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    146              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    147              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    148              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    149              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    150              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    151              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    152              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    153              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    154              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    155              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    156              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    157              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    158              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    159              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    160              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    161              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    162              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    163              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    164              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    165              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    166              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    167              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    168              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    169              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    170              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    171              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    172              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    173          };
    174          

   \                                 In section .rodata, align 4
    175          const u8 F14x16[] = {  
   \                     F14x16:
   \   00000000   0x20 0x20          DC8 32, 32, 32, 32, 255, 0, 0, 0, 255, 64, 32, 48, 24, 16, 48, 24, 8, 4
   \              0x20 0x20    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0xFF 0x40    
   \              0x20 0x30    
   \              0x18 0x10    
   \              0x30 0x18    
   \              0x08 0x04    
   \   00000012   0x7F 0x00          DC8 127, 0, 0, 0, 63, 64, 64, 64, 64, 120, 4, 4, 228, 36, 36, 37, 38
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x40 0x78    
   \              0x04 0x04    
   \              0xE4 0x24    
   \              0x24 0x25    
   \              0x26         
   \   00000023   0x24 0x24          DC8 36, 36, 36, 228, 6, 4, 0, 32, 16, 25, 13, 65, 129, 127, 1, 1, 5, 13
   \              0x24 0xE4    
   \              0x06 0x04    
   \              0x00 0x20    
   \              0x10 0x19    
   \              0x0D 0x41    
   \              0x81 0x7F    
   \              0x01 0x01    
   \              0x05 0x0D    
   \   00000035   0x38 0x10          DC8 56, 16, 0, 16, 16, 16, 16, 16, 255, 16, 240, 18, 28, 208, 16, 16
   \              0x00 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0xFF 0x10    
   \              0xF0 0x12    
   \              0x1C 0xD0    
   \              0x10 0x10    
   \   00000045   0x10 0x40          DC8 16, 64, 32, 16, 12, 3, 16, 8, 63, 66, 65, 64, 64, 64, 112, 0, 0
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x10 0x08    
   \              0x3F 0x42    
   \              0x41 0x40    
   \              0x40 0x40    
   \              0x70 0x00    
   \              0x00         
   \   00000056   0xFE 0x84          DC8 254, 132, 132, 132, 132, 130, 130, 130, 130, 192, 128, 0, 32, 32
   \              0x84 0x84    
   \              0x84 0x82    
   \              0x82 0x82    
   \              0x82 0xC0    
   \              0x80 0x00    
   \              0x20 0x20    
   \   00000064   0x3F 0x20          DC8 63, 32, 32, 32, 32, 32, 63, 32, 32, 32, 48, 32, 0, 252, 36, 36, 226
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \              0x30 0x20    
   \              0x00 0xFC    
   \              0x24 0x24    
   \              0xE2         
   \   00000075   0x22 0x22          DC8 34, 34, 0, 254, 2, 34, 82, 142, 2, 16, 31, 16, 8, 15, 8, 8, 0, 255
   \              0x00 0xFE    
   \              0x02 0x22    
   \              0x52 0x8E    
   \              0x02 0x10    
   \              0x1F 0x10    
   \              0x08 0x0F    
   \              0x08 0x08    
   \              0x00 0xFF    
   \   00000087   0x00 0x08          DC8 0, 8, 8, 16, 15, 18, 146, 114, 254, 81, 145, 0, 34, 204, 0, 0, 255
   \              0x08 0x10    
   \              0x0F 0x12    
   \              0x92 0x72    
   \              0xFE 0x51    
   \              0x91 0x00    
   \              0x22 0xCC    
   \              0x00 0x00    
   \              0xFF         
   \   00000098   0x00 0x00          DC8 0, 0, 2, 1, 0, 255, 0, 4, 4, 4, 2, 2, 2, 255, 1, 1, 8, 136, 255, 72
   \              0x02 0x01    
   \              0x00 0xFF    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x02 0x02    
   \              0x02 0xFF    
   \              0x01 0x01    
   \              0x08 0x88    
   \              0xFF 0x48    
   \   000000AC   0x28 0x00          DC8 40, 0, 200, 72, 72, 127, 72, 200, 72, 8, 65, 128, 127, 0, 64, 64
   \              0xC8 0x48    
   \              0x48 0x7F    
   \              0x48 0xC8    
   \              0x48 0x08    
   \              0x41 0x80    
   \              0x7F 0x00    
   \              0x40 0x40    
   \   000000BC   0x20 0x13          DC8 32, 19, 12, 12, 18, 33, 96, 32, 66, 66, 66, 66, 254, 66, 66, 66, 66
   \              0x0C 0x0C    
   \              0x12 0x21    
   \              0x60 0x20    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0xFE 0x42    
   \              0x42 0x42    
   \              0x42         
   \   000000CD   0xFE 0x42          DC8 254, 66, 66, 66, 66, 64, 32, 16, 12, 3, 0, 0, 0, 0, 127, 0, 0, 0, 0
   \              0x42 0x42    
   \              0x42 0x40    
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E0   0x10 0x3E          DC8 16, 62, 16, 16, 240, 159, 144, 144, 146, 148, 28, 16, 16, 16, 32
   \              0x10 0x10    
   \              0xF0 0x9F    
   \              0x90 0x90    
   \              0x92 0x94    
   \              0x1C 0x10    
   \              0x10 0x10    
   \              0x20         
   \   000000EF   0x10 0x88          DC8 16, 136, 135, 65, 70, 40, 16, 40, 39, 64, 192, 64, 0, 16, 208, 255
   \              0x87 0x41    
   \              0x46 0x28    
   \              0x10 0x28    
   \              0x27 0x40    
   \              0xC0 0x40    
   \              0x00 0x10    
   \              0xD0 0xFF    
   \   000000FF   0x50 0x90          DC8 80, 144, 0, 254, 98, 162, 34, 33, 161, 97, 0, 3, 0, 127, 0, 17, 14
   \              0x00 0xFE    
   \              0x62 0xA2    
   \              0x22 0x21    
   \              0xA1 0x61    
   \              0x00 0x03    
   \              0x00 0x7F    
   \              0x00 0x11    
   \              0x0E         
   \   00000110   0x41 0x20          DC8 65, 32, 17, 10, 14, 49, 96, 32, 20, 19, 146, 126, 50, 82, 146, 0
   \              0x11 0x0A    
   \              0x0E 0x31    
   \              0x60 0x20    
   \              0x14 0x13    
   \              0x92 0x7E    
   \              0x32 0x52    
   \              0x92 0x00    
   \   00000120   0x7C 0x44          DC8 124, 68, 68, 68, 124, 0, 1, 1, 0, 255, 73, 73, 73, 73, 73, 73, 255
   \              0x44 0x44    
   \              0x7C 0x00    
   \              0x01 0x01    
   \              0x00 0xFF    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0xFF         
   \   00000131   0x00 0x00          DC8 0, 0, 0, 184, 151, 146, 144, 148, 184, 16, 0, 127, 72, 72, 68, 116
   \              0x00 0xB8    
   \              0x97 0x92    
   \              0x90 0x94    
   \              0xB8 0x10    
   \              0x00 0x7F    
   \              0x48 0x48    
   \              0x44 0x74    
   \   00000141   0x20 0xFF          DC8 32, 255, 10, 10, 74, 138, 127, 0, 0, 63, 68, 68, 66, 114, 32, 4
   \              0x0A 0x0A    
   \              0x4A 0x8A    
   \              0x7F 0x00    
   \              0x00 0x3F    
   \              0x44 0x44    
   \              0x42 0x72    
   \              0x20 0x04    
   \   00000151   0x84 0xC4          DC8 132, 196, 164, 156, 135, 132, 244, 132, 132, 132, 132, 132, 0, 4, 4
   \              0xA4 0x9C    
   \              0x87 0x84    
   \              0xF4 0x84    
   \              0x84 0x84    
   \              0x84 0x84    
   \              0x00 0x04    
   \              0x04         
   \   00000160   0x04 0x04          DC8 4, 4, 4, 4, 4, 255, 4, 4, 4, 4, 4, 4, 4, 4, 228, 37, 38, 52, 44, 36
   \              0x04 0x04    
   \              0x04 0xFF    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0xE4 0x25    
   \              0x26 0x34    
   \              0x2C 0x24    
   \   00000174   0x24 0x26          DC8 36, 38, 229, 4, 4, 4, 0, 0, 127, 37, 37, 37, 37, 37, 37, 37, 127, 0
   \              0xE5 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x7F 0x25    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x7F 0x00    
   \   00000186   0x00 0x00          DC8 0, 0, 64, 66, 204, 0, 80, 78, 200, 72, 127, 200, 72, 72, 64, 0, 64
   \              0x40 0x42    
   \              0xCC 0x00    
   \              0x50 0x4E    
   \              0xC8 0x48    
   \              0x7F 0xC8    
   \              0x48 0x48    
   \              0x40 0x00    
   \              0x40         
   \   00000197   0x20 0x1F          DC8 32, 31, 32, 72, 70, 65, 64, 64, 71, 72, 72, 78, 64, 97, 6, 224, 24
   \              0x20 0x48    
   \              0x46 0x41    
   \              0x40 0x40    
   \              0x47 0x48    
   \              0x48 0x4E    
   \              0x40 0x61    
   \              0x06 0xE0    
   \              0x18         
   \   000001A8   0x84 0xE4          DC8 132, 228, 28, 132, 101, 190, 36, 164, 100, 4, 4, 255, 0, 1, 0, 255
   \              0x1C 0x84    
   \              0x65 0xBE    
   \              0x24 0xA4    
   \              0x64 0x04    
   \              0x04 0xFF    
   \              0x00 0x01    
   \              0x00 0xFF    
   \   000001B8   0x41 0x21          DC8 65, 33, 18, 12, 27, 97, 192, 64, 0, 0, 0, 126, 42, 42, 42, 42, 42
   \              0x12 0x0C    
   \              0x1B 0x61    
   \              0xC0 0x40    
   \              0x00 0x00    
   \              0x00 0x7E    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A         
   \   000001C9   0x2A 0x7E          DC8 42, 126, 0, 0, 0, 127, 37, 37, 37, 37, 127, 0, 0, 127, 37, 37, 37
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x7F 0x00    
   \              0x00 0x7F    
   \              0x25 0x25    
   \              0x25         
   \   000001DA   0x25 0x7F          DC8 37, 127, 16, 44, 36, 164, 100, 37, 38, 36, 36, 164, 36, 52, 44, 4
   \              0x10 0x2C    
   \              0x24 0xA4    
   \              0x64 0x25    
   \              0x26 0x24    
   \              0x24 0xA4    
   \              0x24 0x34    
   \              0x2C 0x04    
   \   000001EA   0x40 0x48          DC8 64, 72, 73, 73, 73, 73, 127, 73, 73, 73, 75, 72, 64, 64, 33, 134
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x7F 0x49    
   \              0x49 0x49    
   \              0x4B 0x48    
   \              0x40 0x40    
   \              0x21 0x86    
   \   000001FA   0x70 0x00          DC8 112, 0, 126, 74, 74, 74, 74, 74, 126, 0, 0, 0, 254, 1, 64, 127, 65
   \              0x7E 0x4A    
   \              0x4A 0x4A    
   \              0x4A 0x4A    
   \              0x7E 0x00    
   \              0x00 0x00    
   \              0xFE 0x01    
   \              0x40 0x7F    
   \              0x41         
   \   0000020B   0x41 0x7F          DC8 65, 127, 65, 65, 127, 65, 65, 127, 64, 0, 252, 4, 36, 36, 252, 165
   \              0x41 0x41    
   \              0x7F 0x41    
   \              0x41 0x7F    
   \              0x40 0x00    
   \              0xFC 0x04    
   \              0x24 0x24    
   \              0xFC 0xA5    
   \   0000021B   0xA6 0xA4          DC8 166, 164, 252, 36, 36, 36, 4, 96, 31, 128, 128, 66, 70, 42, 18, 18
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x04 0x60    
   \              0x1F 0x80    
   \              0x80 0x42    
   \              0x46 0x2A    
   \              0x12 0x12    
   \   0000022B   0x2A 0x26          DC8 42, 38, 66, 192, 64, 16, 16, 255, 144, 80, 152, 136, 136, 233, 142
   \              0x42 0xC0    
   \              0x40 0x10    
   \              0x10 0xFF    
   \              0x90 0x50    
   \              0x98 0x88    
   \              0x88 0xE9    
   \              0x8E         
   \   0000023A   0x88 0x88          DC8 136, 136, 152, 136, 66, 129, 127, 0, 64, 64, 38, 37, 24, 8, 22, 49
   \              0x98 0x88    
   \              0x42 0x81    
   \              0x7F 0x00    
   \              0x40 0x40    
   \              0x26 0x25    
   \              0x18 0x08    
   \              0x16 0x31    
   \   0000024A   0x60 0x20          DC8 96, 32, 48, 239, 40, 40, 68, 100, 220, 16, 84, 255, 84, 84, 124, 16
   \              0x30 0xEF    
   \              0x28 0x28    
   \              0x44 0x64    
   \              0xDC 0x10    
   \              0x54 0xFF    
   \              0x54 0x54    
   \              0x7C 0x10    
   \   0000025A   0x01 0x7F          DC8 1, 127, 33, 81, 34, 20, 15, 20, 37, 63, 69, 69, 69, 68, 2, 28, 192
   \              0x21 0x51    
   \              0x22 0x14    
   \              0x0F 0x14    
   \              0x25 0x3F    
   \              0x45 0x45    
   \              0x45 0x44    
   \              0x02 0x1C    
   \              0xC0         
   \   0000026B   0x30 0x4C          DC8 48, 76, 48, 15, 8, 248, 8, 8, 40, 24, 8, 94, 67, 32, 32, 16, 8, 4
   \              0x30 0x0F    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x28 0x18    
   \              0x08 0x5E    
   \              0x43 0x20    
   \              0x20 0x10    
   \              0x08 0x04    
   \   0000027D   0x03 0x01          DC8 3, 1, 6, 8, 48, 96, 32, 0, 248, 72, 72, 72, 72, 255, 72, 72, 72, 72
   \              0x06 0x08    
   \              0x30 0x60    
   \              0x20 0x00    
   \              0xF8 0x48    
   \              0x48 0x48    
   \              0x48 0xFF    
   \              0x48 0x48    
   \              0x48 0x48    
   \   0000028F   0xF8 0x00          DC8 248, 0, 0, 0, 15, 4, 4, 4, 4, 63, 68, 68, 68, 68, 79, 64, 112, 0
   \              0x00 0x00    
   \              0x0F 0x04    
   \              0x04 0x04    
   \              0x04 0x3F    
   \              0x44 0x44    
   \              0x44 0x44    
   \              0x4F 0x40    
   \              0x70 0x00    
   \   000002A1   0xFE 0x02          DC8 254, 2, 66, 66, 66, 66, 250, 66, 66, 66, 98, 66, 2, 24, 39, 32, 32
   \              0x42 0x42    
   \              0x42 0x42    
   \              0xFA 0x42    
   \              0x42 0x42    
   \              0x62 0x42    
   \              0x02 0x18    
   \              0x27 0x20    
   \              0x20         
   \   000002B2   0x20 0x20          DC8 32, 32, 32, 63, 32, 33, 46, 36, 32, 32
   \              0x20 0x3F    
   \              0x20 0x21    
   \              0x2E 0x24    
   \              0x20 0x20    
    176          0x20,0x20,0x20,0x20,0xFF,0x00,0x00,0x00,0xFF,0x40,0x20,0x30,0x18,0x10,
    177          0x30,0x18,0x08,0x04,0x7F,0x00,0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x78,//北0
    178          0x04,0x04,0xE4,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0xE4,0x06,0x04,0x00,
    179          0x20,0x10,0x19,0x0D,0x41,0x81,0x7F,0x01,0x01,0x05,0x0D,0x38,0x10,0x00,//京1
    180          0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
    181          0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙2
    182          0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
    183          0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘3
    184          0x00,0xFC,0x24,0x24,0xE2,0x22,0x22,0x00,0xFE,0x02,0x22,0x52,0x8E,0x02,
    185          0x10,0x1F,0x10,0x08,0x0F,0x08,0x08,0x00,0xFF,0x00,0x08,0x08,0x10,0x0F,//邱4
    186          0x12,0x92,0x72,0xFE,0x51,0x91,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,
    187          0x02,0x01,0x00,0xFF,0x00,0x04,0x04,0x04,0x02,0x02,0x02,0xFF,0x01,0x01,//科5
    188          0x08,0x88,0xFF,0x48,0x28,0x00,0xC8,0x48,0x48,0x7F,0x48,0xC8,0x48,0x08,
    189          0x41,0x80,0x7F,0x00,0x40,0x40,0x20,0x13,0x0C,0x0C,0x12,0x21,0x60,0x20,//技6
    190          0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,
    191          0x40,0x20,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,//开7
    192          0x10,0x3E,0x10,0x10,0xF0,0x9F,0x90,0x90,0x92,0x94,0x1C,0x10,0x10,0x10,
    193          0x20,0x10,0x88,0x87,0x41,0x46,0x28,0x10,0x28,0x27,0x40,0xC0,0x40,0x00,//发8
    194          0x10,0xD0,0xFF,0x50,0x90,0x00,0xFE,0x62,0xA2,0x22,0x21,0xA1,0x61,0x00,
    195          0x03,0x00,0x7F,0x00,0x11,0x0E,0x41,0x20,0x11,0x0A,0x0E,0x31,0x60,0x20,//板9
    196          0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
    197          0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智10
    198          0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
    199          0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能11
    200          0x04,0x84,0xC4,0xA4,0x9C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x84,0x00,
    201          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,//车12
    202          0x04,0x04,0xE4,0x25,0x26,0x34,0x2C,0x24,0x24,0x26,0xE5,0x04,0x04,0x04,
    203          0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x00,//首13
    204          0x40,0x42,0xCC,0x00,0x50,0x4E,0xC8,0x48,0x7F,0xC8,0x48,0x48,0x40,0x00,
    205          0x40,0x20,0x1F,0x20,0x48,0x46,0x41,0x40,0x40,0x47,0x48,0x48,0x4E,0x40,//选14
    206          0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,
    207          0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,//液15
    208          0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,
    209          0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,//晶16
    210          0x10,0x2C,0x24,0xA4,0x64,0x25,0x26,0x24,0x24,0xA4,0x24,0x34,0x2C,0x04,
    211          0x40,0x48,0x49,0x49,0x49,0x49,0x7F,0x49,0x49,0x49,0x4B,0x48,0x40,0x40,//室17
    212          0x21,0x86,0x70,0x00,0x7E,0x4A,0x4A,0x4A,0x4A,0x4A,0x7E,0x00,0x00,0x00,
    213          0xFE,0x01,0x40,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x40,//温18
    214          0x00,0xFC,0x04,0x24,0x24,0xFC,0xA5,0xA6,0xA4,0xFC,0x24,0x24,0x24,0x04,
    215          0x60,0x1F,0x80,0x80,0x42,0x46,0x2A,0x12,0x12,0x2A,0x26,0x42,0xC0,0x40,//度19
    216          0x10,0x10,0xFF,0x90,0x50,0x98,0x88,0x88,0xE9,0x8E,0x88,0x88,0x98,0x88,
    217          0x42,0x81,0x7F,0x00,0x40,0x40,0x26,0x25,0x18,0x08,0x16,0x31,0x60,0x20,//按20
    218          0x30,0xEF,0x28,0x28,0x44,0x64,0xDC,0x10,0x54,0xFF,0x54,0x54,0x7C,0x10,
    219          0x01,0x7F,0x21,0x51,0x22,0x14,0x0F,0x14,0x25,0x3F,0x45,0x45,0x45,0x44,//键21
    220          0x02,0x1C,0xC0,0x30,0x4C,0x30,0x0F,0x08,0xF8,0x08,0x08,0x28,0x18,0x08,
    221          0x5E,0x43,0x20,0x20,0x10,0x08,0x04,0x03,0x01,0x06,0x08,0x30,0x60,0x20,//次22
    222          0x00,0xF8,0x48,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0xF8,0x00,0x00,
    223          0x00,0x0F,0x04,0x04,0x04,0x04,0x3F,0x44,0x44,0x44,0x44,0x4F,0x40,0x70,//电23
    224          0x00,0xFE,0x02,0x42,0x42,0x42,0x42,0xFA,0x42,0x42,0x42,0x62,0x42,0x02,
    225          0x18,0x27,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x21,0x2E,0x24,0x20,0x20,//压24  
    226          };
    227          
    228          //======================================================
    229          // 128X64I液晶底层驱动[8X16]字体库
    230          // 设计者: powerint
    231          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
    232          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    233          //======================================================

   \                                 In section .rodata, align 4
    234          const u8 F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    235          {
    236          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    237            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    238            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    239            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    240            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    241            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    242            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    243            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    244            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    245            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    246            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    247            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    248            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    249            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    250            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    251            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    252            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    253            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    254            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    255            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    256            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    257            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    258            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    259            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    260            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    261            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    262            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    263            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    264            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    265            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    266            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    267            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    268            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    269            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    270            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    271            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    272            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    273            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    274            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    275            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    276            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    277            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    278            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    279            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    280            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    281            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    282            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    283            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    284            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    285            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    286            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    287            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    288            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    289            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    290            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    291            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    292            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    293            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    294            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    295            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    296            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    297            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    298            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    299            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    300            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    301            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    302            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    303            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    304            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    305            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    306            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    307            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    308            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    309            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    310            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    311            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    312            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    313            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    314            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    315            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    316            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    317            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    318            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    319            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    320            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    321            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    322            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    323            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    324            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    325            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    326            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    327            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    328            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    329            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    330            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    331          
    332          };
    333          //数据水平，字节垂直

   \                                 In section .data, align 4
    334          u8 longqiu96x64[768] = {
   \                     longqiu96x64:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xC0         
   \   00000015   0xC0 0xC0          DC8 192, 192, 96, 96, 96, 48, 48, 48, 56, 24, 24, 24, 24, 12, 12, 12
   \              0x60 0x60    
   \              0x60 0x30    
   \              0x30 0x30    
   \              0x38 0x18    
   \              0x18 0x18    
   \              0x18 0x0C    
   \              0x0C 0x0C    
   \   00000025   0x0C 0x0C          DC8 12, 12, 14, 14, 14, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14, 14
   \              0x0E 0x0E    
   \              0x0E 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x0E 0x0E    
   \   00000039   0x0C 0x0C          DC8 12, 12, 12, 12, 12, 28, 24, 24, 24, 24, 48, 48, 48, 112, 96, 96
   \              0x0C 0x0C    
   \              0x0C 0x1C    
   \              0x18 0x18    
   \              0x18 0x18    
   \              0x30 0x30    
   \              0x30 0x70    
   \              0x60 0x60    
   \   00000049   0xE0 0xC0          DC8 224, 192, 192, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xC0 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 224, 112, 48, 56, 28, 12
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xC0 0xE0    
   \              0x70 0x30    
   \              0x38 0x1C    
   \              0x0C         
   \   0000006F   0x06 0x07          DC8 6, 7, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x03 0x03    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000086   0x80 0x80          DC8 128, 128, 128, 0, 0, 0, 0, 0, 128, 128, 240, 248, 248, 240, 128, 0
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0xF8    
   \              0xF8 0xF0    
   \              0x80 0x00    
   \   00000096   0x00 0x80          DC8 0, 128, 224, 240, 248, 252, 60, 28, 12, 12, 28, 252, 248, 240, 224
   \              0xE0 0xF0    
   \              0xF8 0xFC    
   \              0x3C 0x1C    
   \              0x0C 0x0C    
   \              0x1C 0xFC    
   \              0xF8 0xF0    
   \              0xE0         
   \   000000A5   0x80 0x00          DC8 128, 0, 0, 0, 192, 192, 193, 1, 3, 3, 7, 6, 14, 12, 24, 56, 112, 96
   \              0x00 0x00    
   \              0xC0 0xC0    
   \              0xC1 0x01    
   \              0x03 0x03    
   \              0x07 0x06    
   \              0x0E 0x0C    
   \              0x18 0x38    
   \              0x70 0x60    
   \   000000B7   0xC0 0x80          DC8 192, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 192, 240, 120, 30, 7, 51, 49
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xF0 0x78    
   \              0x1E 0x07    
   \              0x33 0x31    
   \   000000C9   0x38 0x78          DC8 56, 120, 252, 254, 246, 192, 128, 0, 0, 0, 0, 192, 192, 128, 0, 248
   \              0xFC 0xFE    
   \              0xF6 0xC0    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x80    
   \              0x00 0xF8    
   \   000000D9   0xFC 0xDE          DC8 252, 222, 14, 15, 30, 190, 252, 240, 6, 255, 255, 255, 255, 3, 7
   \              0x0E 0x0F    
   \              0x1E 0xBE    
   \              0xFC 0xF0    
   \              0x06 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x07         
   \   000000E8   0xFF 0xFF          DC8 255, 255, 254, 128, 30, 63, 255, 255, 249, 249, 255, 255, 127, 31
   \              0xFE 0x80    
   \              0x1E 0x3F    
   \              0xFF 0xFF    
   \              0xF9 0xF9    
   \              0xFF 0xFF    
   \              0x7F 0x1F    
   \   000000F6   0x0E 0x7F          DC8 14, 127, 255, 255, 255, 193, 128, 206, 206, 198, 192, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xC1    
   \              0x80 0xCE    
   \              0xCE 0xC6    
   \              0xC0 0xFF    
   \              0xFF 0xFF    
   \   00000104   0xFF 0x3F          DC8 255, 63, 128, 252, 252, 253, 125, 1, 192, 248, 248, 240, 112, 0
   \              0x80 0xFC    
   \              0xFC 0xFD    
   \              0x7D 0x01    
   \              0xC0 0xF8    
   \              0xF8 0xF0    
   \              0x70 0x00    
   \   00000112   0xC0 0x80          DC8 192, 128, 128, 128, 0, 0, 1, 7, 14, 60, 248, 224, 128, 0, 0, 254
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x01 0x07    
   \              0x0E 0x3C    
   \              0xF8 0xE0    
   \              0x80 0x00    
   \              0x00 0xFE    
   \   00000122   0xFF 0x03          DC8 255, 3, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 127, 254, 252, 240, 240
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x0F    
   \              0x1F 0x7F    
   \              0xFE 0xFC    
   \              0xF0 0xF0    
   \   00000134   0xF0 0x7F          DC8 240, 127, 127, 62, 16, 3, 3, 15, 31, 31, 15, 15, 3, 4, 7, 7, 7, 7
   \              0x7F 0x3E    
   \              0x10 0x03    
   \              0x03 0x0F    
   \              0x1F 0x1F    
   \              0x0F 0x0F    
   \              0x03 0x04    
   \              0x07 0x07    
   \              0x07 0x07    
   \   00000146   0x06 0x00          DC8 6, 0, 7, 7, 7, 15, 30, 63, 127, 127, 127, 121, 115, 63, 63, 31, 14
   \              0x07 0x07    
   \              0x07 0x0F    
   \              0x1E 0x3F    
   \              0x7F 0x7F    
   \              0x7F 0x79    
   \              0x73 0x3F    
   \              0x3F 0x1F    
   \              0x0E         
   \   00000157   0x00 0x01          DC8 0, 1, 3, 3, 7, 7, 6, 14, 15, 15, 31, 63, 61, 8, 12, 31, 31, 31, 25
   \              0x03 0x03    
   \              0x07 0x07    
   \              0x06 0x0E    
   \              0x0F 0x0F    
   \              0x1F 0x3F    
   \              0x3D 0x08    
   \              0x0C 0x1F    
   \              0x1F 0x1F    
   \              0x19         
   \   0000016A   0x3C 0x7F          DC8 60, 127, 127, 127, 243, 240, 252, 254, 63, 31, 7, 1, 0, 0, 0, 0, 0
   \              0x7F 0x7F    
   \              0xF3 0xF0    
   \              0xFC 0xFE    
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017B   0x00 0x00          DC8 0, 0, 207, 255, 112, 0, 3, 31, 126, 240, 192, 0, 0, 0, 0, 0, 0, 0
   \              0xCF 0xFF    
   \              0x70 0x00    
   \              0x03 0x1F    
   \              0x7E 0xF0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000018D   0x00 0x00          DC8 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 192, 192, 64, 64, 64, 64, 248, 120
   \              0x00 0x03    
   \              0x03 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x40    
   \              0x40 0x40    
   \              0x40 0xF8    
   \              0x78         
   \   000001A0   0x40 0xC0          DC8 64, 192, 64, 88, 88, 64, 64, 64, 0, 0, 0, 0, 0, 128, 128, 128, 0, 0
   \              0x40 0x58    
   \              0x58 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 96, 240, 224, 32, 32, 32, 32, 48, 48, 56, 24, 16, 0, 0
   \              0x00 0x00    
   \              0x60 0xF0    
   \              0xE0 0x20    
   \              0x20 0x20    
   \              0x20 0x30    
   \              0x30 0x38    
   \              0x18 0x10    
   \              0x00 0x00    
   \   000001C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001DA   0x80 0xE0          DC8 128, 224, 248, 63, 15, 0, 0, 0, 0, 0, 0, 3, 7, 14, 28, 56, 48, 96
   \              0xF8 0x3F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x07 0x0E    
   \              0x1C 0x38    
   \              0x30 0x60    
   \   000001EC   0xE0 0xC0          DC8 224, 192, 128, 0, 0, 0, 0, 0, 0, 0, 64, 96, 96, 112, 48, 24, 12, 7
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x60    
   \              0x60 0x70    
   \              0x30 0x18    
   \              0x0C 0x07    
   \   000001FE   0x11 0x08          DC8 17, 8, 63, 125, 102, 231, 227, 192, 192, 192, 224, 96, 0, 0, 0, 3
   \              0x3F 0x7D    
   \              0x66 0xE7    
   \              0xE3 0xC0    
   \              0xC0 0xC0    
   \              0xE0 0x60    
   \              0x00 0x00    
   \              0x00 0x03    
   \   0000020E   0x03 0x03          DC8 3, 3, 0, 0, 96, 96, 96, 96, 96, 127, 127, 97, 97, 97, 97, 127, 127
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x60 0x60    
   \              0x60 0x7F    
   \              0x7F 0x61    
   \              0x61 0x61    
   \              0x61 0x7F    
   \              0x7F         
   \   0000021F   0x61 0x61          DC8 97, 97, 225, 224, 224, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xE1 0xE0    
   \              0xE0 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000231   0x80 0xC0          DC8 128, 192, 192, 224, 112, 56, 24, 12, 7, 3, 1, 0, 0, 0, 0, 0, 0, 0
   \              0xC0 0xE0    
   \              0x70 0x38    
   \              0x18 0x0C    
   \              0x07 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000243   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 6, 6, 12, 12, 24, 24, 56
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x03 0x03    
   \              0x06 0x06    
   \              0x0C 0x0C    
   \              0x18 0x18    
   \              0x38         
   \   00000258   0x30 0x30          DC8 48, 48, 112, 96, 96, 224, 192, 192, 192, 192, 192, 128, 128, 128
   \              0x70 0x60    
   \              0x60 0xE0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0x80    
   \              0x80 0x80    
   \   00000266   0x81 0x80          DC8 129, 128, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80         
   \   00000277   0x80 0x80          DC8 128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192, 96, 96
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0x60 0x60    
   \   00000285   0x60 0x30          DC8 96, 48, 48, 48, 24, 24, 28, 12, 14, 6, 7, 3, 3, 1, 0, 0, 0, 0, 0, 0
   \              0x30 0x30    
   \              0x18 0x18    
   \              0x1C 0x0C    
   \              0x0E 0x06    
   \              0x07 0x03    
   \              0x03 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000299   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01         
   \   000002C7   0x01 0x01          DC8 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01         
   \   000002DE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002F5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    335          /* 
    336            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    337            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0XC0,0XC0,0XC0,
    338            0XC0,0XC0,0X60,0X60,0X60,0X60,0X60,0X70,0X70,0X70,0X30,0X30,0X30,0X30,0X30,0X30,
    339            0X30,0X30,0X30,0X30,0X30,0X30,0X30,0X70,0X70,0X60,0X60,0X60,0X60,0X60,0XE0,0XC0,
    340            0XC0,0XC0,0XC0,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    341            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    342            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0XC0,0XE0,0X60,0X30,
    343            0X38,0X18,0X1C,0X0C,0X0E,0X06,0X06,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X00,0X00,
    344            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    345            0X80,0XC0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0XE0,0XE0,0X60,0X60,
    346            0XE0,0XE0,0XC0,0X81,0X01,0X01,0X03,0X03,0X03,0X07,0X06,0X0E,0X0C,0X1C,0X18,0X38,
    347            0X30,0X70,0X60,0XC0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    348            0X00,0X00,0X00,0X80,0XC0,0XF0,0X38,0X9C,0X8E,0XC7,0XC3,0XE1,0XF1,0XB0,0X00,0X00,
    349            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XE0,0XF0,0X70,0X78,0XF0,0XF0,0XE0,
    350            0X80,0X30,0XF8,0XF8,0XF8,0XF8,0X1C,0X3C,0XFC,0XF8,0XF0,0X00,0XF0,0XF8,0XFC,0XFC,
    351            0XCF,0XCF,0XFF,0XFF,0XFC,0XF8,0X70,0XFC,0XFF,0XFF,0XFF,0X0F,0X01,0X70,0X70,0X30,
    352            0X00,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0XE0,0XE0,0XEE,0XEE,0X0E,0X00,0XC0,0XC0,0X80,
    353            0X80,0X00,0X00,0X00,0X01,0X03,0X03,0X06,0X0C,0X3C,0X70,0XE0,0XC0,0X00,0X00,0X00,
    354            0X00,0XF0,0XFE,0X1F,0X03,0X00,0X00,0X01,0X01,0X01,0X03,0X0F,0X1F,0X7F,0XFE,0XFC,
    355            0XF0,0XE0,0X80,0X80,0X86,0XFE,0XFC,0XF0,0X87,0X1F,0X1E,0X78,0XF8,0XF8,0X7D,0X7F,
    356            0X1F,0X20,0X3F,0X3F,0X3F,0X3F,0X30,0X00,0X3F,0X3F,0X3F,0X7C,0XF0,0XF9,0XFF,0XFF,
    357            0XFF,0XCF,0X9F,0XFF,0XFB,0XF8,0X70,0X03,0X0F,0X1F,0X1F,0X3E,0X3C,0X36,0X76,0X7E,
    358            0X7E,0XFF,0XFF,0XEF,0X47,0X61,0XFC,0XFF,0XFF,0XCF,0XE3,0XF8,0XFE,0XFF,0X9F,0X87,
    359            0XE3,0XF0,0XFE,0XFC,0X3C,0X0C,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X7F,0XFC,0X80,
    360            0X00,0X1F,0XFF,0XF0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
    361            0X1F,0X1F,0X0F,0X0F,0X07,0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XC0,
    362            0X00,0X00,0X00,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X03,
    363            0X03,0X03,0X03,0X01,0X01,0X00,0X00,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0XC0,
    364            0XC0,0X80,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X03,0X03,0X07,0X0F,
    365            0X0F,0X0F,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XFE,0X7F,0X03,
    366            0X00,0X00,0X00,0X03,0X07,0X1E,0X38,0X70,0XE0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,
    367            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X06,0X86,0X82,0XC2,0X62,0X3A,0X8F,0X43,
    368            0XFA,0XEE,0X32,0X3A,0X1A,0X02,0X02,0X02,0X00,0X00,0X00,0X00,0X00,0X1C,0X1C,0X1C,
    369            0X00,0X00,0X00,0X00,0X00,0X00,0X03,0XFF,0XFF,0X09,0X09,0X09,0X09,0XF9,0XF9,0X09,
    370            0X08,0X08,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    371            0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XC0,0X60,0X38,0X1C,0X0F,0X07,0X01,0X00,0X00,
    372            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,0X07,0X0E,0X0C,0X18,
    373            0X18,0X30,0X30,0X60,0X60,0XC0,0XC2,0XC3,0X83,0X83,0X81,0X00,0X00,0X00,0X00,0X00,
    374            0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X06,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,
    375            0X00,0X00,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    376            0X03,0X07,0X07,0X07,0X06,0X06,0X80,0X80,0X80,0XC0,0XC0,0XE0,0X60,0X70,0X30,0X38,
    377            0X18,0X1C,0X0E,0X06,0X07,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    378            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    379            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X01,0X03,0X03,0X03,0X07,0X06,0X06,
    380            0X06,0X06,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X1C,0X1C,0X18,0X18,0X18,0X18,
    381            0X18,0X18,0X18,0X18,0X1C,0X1C,0X1C,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X06,0X06,
    382            0X06,0X06,0X06,0X03,0X03,0X03,0X01,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    383            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    384          */
    385          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    386          0X00,0X00,0X80,0X80,0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X38,0X18,0X18,
    387          0X18,0X18,0X0C,0X0C,0X0C,0X0C,0X0C,0X0E,0X0E,0X0E,0X06,0X06,0X06,0X06,0X06,0X06,
    388          0X06,0X06,0X06,0X06,0X06,0X06,0X06,0X0E,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X18,
    389          0X18,0X18,0X18,0X30,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,0X80,0X80,0X00,0X00,
    390          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    391          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0X70,0X30,0X38,0X1C,0X0C,0X06,
    392          0X07,0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    393          0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,
    394          0XF0,0XF8,0XF8,0XF0,0X80,0X00,0X00,0X80,0XE0,0XF0,0XF8,0XFC,0X3C,0X1C,0X0C,0X0C,
    395          0X1C,0XFC,0XF8,0XF0,0XE0,0X80,0X00,0X00,0X00,0XC0,0XC0,0XC1,0X01,0X03,0X03,0X07,
    396          0X06,0X0E,0X0C,0X18,0X38,0X70,0X60,0XC0,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,
    397          0X00,0X00,0XC0,0XF0,0X78,0X1E,0X07,0X33,0X31,0X38,0X78,0XFC,0XFE,0XF6,0XC0,0X80,
    398          0X00,0X00,0X00,0X00,0XC0,0XC0,0X80,0X00,0XF8,0XFC,0XDE,0X0E,0X0F,0X1E,0XBE,0XFC,
    399          0XF0,0X06,0XFF,0XFF,0XFF,0XFF,0X03,0X07,0XFF,0XFF,0XFE,0X80,0X1E,0X3F,0XFF,0XFF,
    400          0XF9,0XF9,0XFF,0XFF,0X7F,0X1F,0X0E,0X7F,0XFF,0XFF,0XFF,0XC1,0X80,0XCE,0XCE,0XC6,
    401          0XC0,0XFF,0XFF,0XFF,0XFF,0X3F,0X80,0XFC,0XFC,0XFD,0X7D,0X01,0XC0,0XF8,0XF8,0XF0,
    402          0X70,0X00,0XC0,0X80,0X80,0X80,0X00,0X00,0X01,0X07,0X0E,0X3C,0XF8,0XE0,0X80,0X00,
    403          0X00,0XFE,0XFF,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X7F,
    404          0XFE,0XFC,0XF0,0XF0,0XF0,0X7F,0X7F,0X3E,0X10,0X03,0X03,0X0F,0X1F,0X1F,0X0F,0X0F,
    405          0X03,0X04,0X07,0X07,0X07,0X07,0X06,0X00,0X07,0X07,0X07,0X0F,0X1E,0X3F,0X7F,0X7F,
    406          0X7F,0X79,0X73,0X3F,0X3F,0X1F,0X0E,0X00,0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X0F,
    407          0X0F,0X1F,0X3F,0X3D,0X08,0X0C,0X1F,0X1F,0X1F,0X19,0X3C,0X7F,0X7F,0X7F,0XF3,0XF0,
    408          0XFC,0XFE,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XCF,0XFF,0X70,
    409          0X00,0X03,0X1F,0X7E,0XF0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    410          0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0XC0,0XC0,0X40,0X40,0X40,0X40,0XF8,0X78,
    411          0X40,0XC0,0X40,0X58,0X58,0X40,0X40,0X40,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,
    412          0X00,0X00,0X00,0X00,0X00,0X00,0X60,0XF0,0XE0,0X20,0X20,0X20,0X20,0X30,0X30,0X38,
    413          0X18,0X10,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,
    414          0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XE0,0XF8,0X3F,0X0F,0X00,
    415          0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0E,0X1C,0X38,0X30,0X60,0XE0,0XC0,0X80,0X00,
    416          0X00,0X00,0X00,0X00,0X00,0X00,0X40,0X60,0X60,0X70,0X30,0X18,0X0C,0X07,0X11,0X08,
    417          0X3F,0X7D,0X66,0XE7,0XE3,0XC0,0XC0,0XC0,0XE0,0X60,0X00,0X00,0X00,0X03,0X03,0X03,
    418          0X00,0X00,0X60,0X60,0X60,0X60,0X60,0X7F,0X7F,0X61,0X61,0X61,0X61,0X7F,0X7F,0X61,
    419          0X61,0XE1,0XE0,0XE0,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    420          0X00,0X80,0XC0,0XC0,0XE0,0X70,0X38,0X18,0X0C,0X07,0X03,0X01,0X00,0X00,0X00,0X00,
    421          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,
    422          0X03,0X06,0X06,0X0C,0X0C,0X18,0X18,0X38,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,
    423          0XC0,0XC0,0XC0,0X80,0X80,0X80,0X81,0X80,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,
    424          0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0XC0,0XC0,
    425          0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X18,0X18,0X1C,0X0C,0X0E,0X06,0X07,
    426          0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    427          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    428          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    429          0X00,0X00,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    430          0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X00,0X00,
    431          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    432          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    433          
    434          };

   \                                 In section .rodata, align 4
    435          const u8 LIBLOGO60x58[480] = { 
   \                     LIBLOGO60x58:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0         
   \   00000043   0xE0 0xF8          DC8 224, 248, 252, 254, 127, 63, 15, 15, 7, 7, 7, 135, 199, 199, 199
   \              0xFC 0xFE    
   \              0x7F 0x3F    
   \              0x0F 0x0F    
   \              0x07 0x07    
   \              0x07 0x87    
   \              0xC7 0xC7    
   \              0xC7         
   \   00000052   0xE7 0xEF          DC8 231, 239, 255, 255, 255, 239, 231, 231, 231, 231, 231, 239, 255
   \              0xFF 0xFF    
   \              0xFF 0xEF    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xEF    
   \              0xFF         
   \   0000005F   0xFF 0xFF          DC8 255, 255, 239, 231, 231, 231, 231, 231, 247, 7, 15, 63, 127, 255
   \              0xEF 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xF7 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   0000006D   0xFE 0xFC          DC8 254, 252, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 220, 223
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xD8 0xDC    
   \              0xDF         
   \   0000007E   0xDF 0xDF          DC8 223, 223, 223, 215, 1, 0, 0, 0, 0, 0, 0, 62, 127, 255, 255, 227
   \              0xDF 0xD7    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3E    
   \              0x7F 0xFF    
   \              0xFF 0xE3    
   \   0000008E   0xE1 0xE1          DC8 225, 225, 255, 255, 255, 224, 224, 224, 224, 224, 224, 224, 255
   \              0xFF 0xFF    
   \              0xFF 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xFF         
   \   0000009B   0xFF 0xFF          DC8 255, 255, 224, 224, 224, 224, 193, 131, 7, 0, 0, 0, 0, 1, 215, 223
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xC1 0x83    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0xD7 0xDF    
   \   000000AB   0xDF 0xDF          DC8 223, 223, 223, 220, 216, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 63, 255
   \              0xDF 0xDC    
   \              0xD8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x0F 0x1F    
   \              0x3F 0xFF    
   \   000000BD   0xFF 0xFE          DC8 255, 254, 248, 240, 224, 192, 128, 0, 0, 248, 240, 224, 192, 192
   \              0xF8 0xF0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0xF8    
   \              0xF0 0xE0    
   \              0xC0 0xC0    
   \   000000CB   0xC0 0xFF          DC8 192, 255, 255, 255, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              0xFF 0xFF    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xFF    
   \              0xFF         
   \   000000D8   0xFF 0xC0          DC8 255, 192, 224, 225, 243, 255, 127, 63, 0, 192, 224, 248, 254, 255
   \              0xE0 0xE1    
   \              0xF3 0xFF    
   \              0x7F 0x3F    
   \              0x00 0xC0    
   \              0xE0 0xF8    
   \              0xFE 0xFF    
   \   000000E6   0xFF 0xFF          DC8 255, 255, 63, 31, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01         
   \   000000FB   0x07 0x0F          DC8 7, 15, 63, 127, 255, 254, 252, 249, 243, 193, 129, 1, 1, 255, 255
   \              0x3F 0x7F    
   \              0xFF 0xFE    
   \              0xFC 0xF9    
   \              0xF3 0xC1    
   \              0x81 0x01    
   \              0x01 0xFF    
   \              0xFF         
   \   0000010A   0xFF 0x01          DC8 255, 1, 1, 1, 1, 1, 1, 1, 255, 255, 255, 3, 1, 129, 192, 240, 252
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x01 0x81    
   \              0xC0 0xF0    
   \              0xFC         
   \   0000011B   0xFE 0xFF          DC8 254, 255, 255, 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x3F 0x0F    
   \              0x07 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000012E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 63, 127, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   00000142   0xFF 0xFF          DC8 255, 255, 251, 243, 227, 195, 3, 3, 3, 3, 3, 131, 195, 243, 243
   \              0xFB 0xF3    
   \              0xE3 0xC3    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x83    
   \              0xC3 0xF3    
   \              0xF3         
   \   00000151   0xFB 0xFF          DC8 251, 255, 255, 255, 127, 63, 15, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0x7F 0x3F    
   \              0x0F 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017B   0x00 0x00          DC8 0, 0, 0, 3, 7, 7, 31, 63, 127, 255, 254, 252, 252, 254, 255, 255
   \              0x00 0x03    
   \              0x07 0x07    
   \              0x1F 0x3F    
   \              0x7F 0xFF    
   \              0xFE 0xFC    
   \              0xFC 0xFE    
   \              0xFF 0xFF    
   \   0000018B   0x7F 0x3F          DC8 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0F 0x07    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 15, 7, 1, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x0F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001CD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    436            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    437            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    438            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    439            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    440            0X00,0X00,0XC0,0XE0,0XF8,0XFC,0XFE,0X7F,0X3F,0X0F,0X0F,0X07,0X07,0X07,0X87,0XC7,
    441            0XC7,0XC7,0XE7,0XEF,0XFF,0XFF,0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XEF,0XFF,0XFF,
    442            0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XF7,0X07,0X0F,0X3F,0X7F,0XFF,0XFE,0XFC,0XF0,
    443            0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XD8,0XDC,0XDF,0XDF,0XDF,
    444            0XDF,0XD7,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X3E,0X7F,0XFF,0XFF,0XE3,0XE1,0XE1,
    445            0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,
    446            0XE0,0XC1,0X83,0X07,0X00,0X00,0X00,0X00,0X01,0XD7,0XDF,0XDF,0XDF,0XDF,0XDC,0XD8,
    447            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X3F,0XFF,0XFF,0XFE,0XF8,
    448            0XF0,0XE0,0XC0,0X80,0X00,0X00,0XF8,0XF0,0XE0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,
    449            0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,0XE0,0XE1,0XF3,0XFF,0X7F,0X3F,
    450            0X00,0XC0,0XE0,0XF8,0XFE,0XFF,0XFF,0XFF,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,
    451            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X0F,0X3F,0X7F,0XFF,
    452            0XFE,0XFC,0XF9,0XF3,0XC1,0X81,0X01,0X01,0XFF,0XFF,0XFF,0X01,0X01,0X01,0X01,0X01,
    453            0X01,0X01,0XFF,0XFF,0XFF,0X03,0X01,0X81,0XC0,0XF0,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,
    454            0X0F,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    455            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0F,0X3F,
    456            0X7F,0XFF,0XFF,0XFF,0XFB,0XF3,0XE3,0XC3,0X03,0X03,0X03,0X03,0X03,0X83,0XC3,0XF3,
    457            0XF3,0XFB,0XFF,0XFF,0XFF,0X7F,0X3F,0X0F,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,
    458            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    459            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,
    460            0X07,0X1F,0X3F,0X7F,0XFF,0XFE,0XFC,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,0X0F,0X07,0X03,
    461            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    462            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    463            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    464            0X00,0X03,0X07,0X0F,0X0F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    465            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    466          }; 
    467          

   \                                 In section .rodata, align 4
    468          const u8 F14x16_Idx[] = 
   \                     F14x16_Idx:
   \   00000000   0xB1 0xB1          DC8 0B1H, 0B1H, 0BEH, 0A9H, 0C1H, 0FAH, 0C7H, 0F0H
   \              0xBE 0xA9    
   \              0xC1 0xFA    
   \              0xC7 0xF0    
   \   00000008   0xC7 0xF1          DC8 0C7H, 0F1H, 0BFH, 0C6H, 0BCH, 0BCH, 0BFH, 0AAH
   \              0xBF 0xC6    
   \              0xBC 0xBC    
   \              0xBF 0xAA    
   \   00000010   0xB7 0xA2          DC8 0B7H, 0A2H, 0B0H, 0E5H, 0D6H, 0C7H, 0C4H, 0DCH
   \              0xB0 0xE5    
   \              0xD6 0xC7    
   \              0xC4 0xDC    
   \   00000018   0xB3 0xB5          DC8 0B3H, 0B5H, 0CAH, 0D7H, 0D1H, 0A1H, 0D2H, 0BAH
   \              0xCA 0xD7    
   \              0xD1 0xA1    
   \              0xD2 0xBA    
   \   00000020   0xBE 0xA7          DC8 0BEH, 0A7H, 0CAH, 0D2H, 0CEH, 0C2H, 0B6H, 0C8H
   \              0xCA 0xD2    
   \              0xCE 0xC2    
   \              0xB6 0xC8    
   \   00000028   0xB0 0xB4          DC8 0B0H, 0B4H, 0BCH, 0FCH, 0B4H, 0CEH, 0B5H, 0E7H
   \              0xBC 0xFC    
   \              0xB4 0xCE    
   \              0xB5 0xE7    
   \   00000030   0xD1 0xB9          DC8 0D1H, 0B9H, 0
   \              0x00         
   \   00000033   0x00               DC8 0
    469          {
    470          	"北京龙丘邱科技开发板智能车首选液晶室温度按键次电压"
    471          };
    472          

   \                                 In section .text, align 4, keep-with-next
    473          void LCD_WrDat(u8 data)
    474          {
    475          	u8 i=8;
   \                     LCD_WrDat: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    476          	//LCD_CS=0;;
    477          //	GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(15));;;;
    478                  GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(16));;;;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable13  ;; 0x400ff000
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF452 0x3280      ORRS     R2,R2,#0x10000
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable13  ;; 0x400ff000
   \   00000010   0x601A             STR      R2,[R3, #+0]
    479                  asm("nop"); 
   \   00000012   0xBF00             nop
    480          //      GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(12));;;;
    481                  GPIOE_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(25));;;;
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   00000018   0x6812             LDR      R2,[R2, #+0]
   \   0000001A   0xF032 0x7200      BICS     R2,R2,#0x2000000
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000022   0x601A             STR      R2,[R3, #+0]
    482                asm("nop");    
   \   00000024   0xBF00             nop
   \   00000026   0xE019             B.N      ??LCD_WrDat_0
    483            while(i--)
    484            {
    485          //    if(data&0x80){GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(13));;;;}
    486              if(data&0x80){GPIOE_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(24));;;;}
    487          //    else{GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(13));;;;}
    488              else{GPIOE_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(24));;;;}
   \                     ??LCD_WrDat_1: (+1)
   \   00000028   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   0000002C   0x6812             LDR      R2,[R2, #+0]
   \   0000002E   0xF032 0x7280      BICS     R2,R2,#0x1000000
   \   00000032   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000036   0x601A             STR      R2,[R3, #+0]
    489          //    GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(12)); 
    490              GPIOE_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(25));
   \                     ??LCD_WrDat_2: (+1)
   \   00000038   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   0000003C   0x6812             LDR      R2,[R2, #+0]
   \   0000003E   0xF052 0x7200      ORRS     R2,R2,#0x2000000
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000046   0x601A             STR      R2,[R3, #+0]
    491              asm("nop");;;;
   \   00000048   0xBF00             nop
    492          		//asm("nop");            
    493          //    GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(12));;;;; 
    494              GPIOE_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(25));;;;;
   \   0000004A   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   0000004E   0x6812             LDR      R2,[R2, #+0]
   \   00000050   0xF032 0x7200      BICS     R2,R2,#0x2000000
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000058   0x601A             STR      R2,[R3, #+0]
    495              data<<=1;    
   \   0000005A   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrDat_0: (+1)
   \   0000005C   0x000A             MOVS     R2,R1
   \   0000005E   0x1E51             SUBS     R1,R2,#+1
   \   00000060   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000062   0x2A00             CMP      R2,#+0
   \   00000064   0xD00A             BEQ.N    ??LCD_WrDat_3
   \   00000066   0x0602             LSLS     R2,R0,#+24
   \   00000068   0xD5DE             BPL.N    ??LCD_WrDat_1
   \   0000006A   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   0000006E   0x6812             LDR      R2,[R2, #+0]
   \   00000070   0xF052 0x7280      ORRS     R2,R2,#0x1000000
   \   00000074   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000078   0x601A             STR      R2,[R3, #+0]
   \   0000007A   0xE7DD             B.N      ??LCD_WrDat_2
    496            }
    497          	//LCD_CS=1;
    498          }
   \                     ??LCD_WrDat_3: (+1)
   \   0000007C   0x4770             BX       LR               ;; return
    499          

   \                                 In section .text, align 4, keep-with-next
    500          void LCD_WrCmd(u8 cmd)
    501          {
    502          	u8 i=8;
   \                     LCD_WrCmd: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    503          	
    504          	//LCD_CS=0;;
    505          //  GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(15));;;;;
    506          //  GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(12));;;;;
    507            GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(16));;;;;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable13  ;; 0x400ff000
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF432 0x3280      BICS     R2,R2,#0x10000
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable13  ;; 0x400ff000
   \   00000010   0x601A             STR      R2,[R3, #+0]
    508            GPIOE_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(25));;;;;
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0xF032 0x7200      BICS     R2,R2,#0x2000000
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000020   0x601A             STR      R2,[R3, #+0]
   \   00000022   0xE019             B.N      ??LCD_WrCmd_0
    509            //asm("nop");   
    510            while(i--)
    511            {
    512          //    if(cmd&0x80){GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(13));;;;;}
    513              if(cmd&0x80){GPIOE_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(24));;;;;}
    514          //    else{GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(13));;;;;;}
    515              else{GPIOE_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(24));;;;;;}
   \                     ??LCD_WrCmd_1: (+1)
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   00000028   0x6812             LDR      R2,[R2, #+0]
   \   0000002A   0xF032 0x7280      BICS     R2,R2,#0x1000000
   \   0000002E   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000032   0x601A             STR      R2,[R3, #+0]
    516          //    GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(12));;;;;
    517              GPIOE_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(25));;;;;
   \                     ??LCD_WrCmd_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   00000038   0x6812             LDR      R2,[R2, #+0]
   \   0000003A   0xF052 0x7200      ORRS     R2,R2,#0x2000000
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000042   0x601A             STR      R2,[R3, #+0]
    518              asm("nop");;;;
   \   00000044   0xBF00             nop
    519          		//asm("nop");             
    520          //    GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(12));;;;;  
    521              GPIOE_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(25));;;;; 
   \   00000046   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0xF032 0x7200      BICS     R2,R2,#0x2000000
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000054   0x601A             STR      R2,[R3, #+0]
    522              cmd<<=1;;;;;   
   \   00000056   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrCmd_0: (+1)
   \   00000058   0x000A             MOVS     R2,R1
   \   0000005A   0x1E51             SUBS     R1,R2,#+1
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x2A00             CMP      R2,#+0
   \   00000060   0xD00A             BEQ.N    ??LCD_WrCmd_3
   \   00000062   0x0602             LSLS     R2,R0,#+24
   \   00000064   0xD5DE             BPL.N    ??LCD_WrCmd_1
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable13_1  ;; 0x400ff100
   \   0000006A   0x6812             LDR      R2,[R2, #+0]
   \   0000006C   0xF052 0x7280      ORRS     R2,R2,#0x1000000
   \   00000070   0x.... 0x....      LDR.W    R3,??DataTable13_1  ;; 0x400ff100
   \   00000074   0x601A             STR      R2,[R3, #+0]
   \   00000076   0xE7DD             B.N      ??LCD_WrCmd_2
    523            } 	
    524          	//LCD_CS=1;
    525          }
   \                     ??LCD_WrCmd_3: (+1)
   \   00000078   0x4770             BX       LR               ;; return
    526          

   \                                 In section .text, align 2, keep-with-next
    527          void LCD_Set_Pos(u8 x, u8 y)
    528          { 
   \                     LCD_Set_Pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    529            LCD_WrCmd(0xb0+y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    530            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    531            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
    532          } 
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    533          
    534          

   \                                 In section .text, align 2, keep-with-next
    535          void LCD_Fill(u8 bmp_data)
    536          {
   \                     LCD_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    537          	u8 y,x;
    538          	
    539          	for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??LCD_Fill_0
    540          	{
    541          		LCD_WrCmd(0xb0+y);
    542          		LCD_WrCmd(0x01);
    543          		LCD_WrCmd(0x10);
    544          		for(x=0;x<X_WIDTH;x++)
    545          			LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2: (+1)
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xDBF7             BLT.N    ??LCD_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xDA0C             BGE.N    ??LCD_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       LCD_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??LCD_Fill_2
    546          	}
    547          }
   \                     ??LCD_Fill_3: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    548          
    549          

   \                                 In section .text, align 2, keep-with-next
    550          void LCD_CLS(void)
    551          {
   \                     LCD_CLS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    552          	u8 y,x;	
    553          	for(y=0;y<8;y++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE007             B.N      ??LCD_CLS_0
    554          	{
    555          		LCD_WrCmd(0xb0+y);
    556          		LCD_WrCmd(0x01);
    557          		LCD_WrCmd(0x10); 
    558          		for(x=0;x<X_WIDTH;x++)
    559          			LCD_WrDat(0);
   \                     ??LCD_CLS_1: (+1)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       LCD_WrDat
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_CLS_2: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D80             CMP      R5,#+128
   \   00000012   0xDBF8             BLT.N    ??LCD_CLS_1
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_0: (+1)
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C08             CMP      R4,#+8
   \   0000001A   0xDA0C             BGE.N    ??LCD_CLS_3
   \   0000001C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
   \   0000002C   0x2010             MOVS     R0,#+16
   \   0000002E   0x.... 0x....      BL       LCD_WrCmd
   \   00000032   0x2500             MOVS     R5,#+0
   \   00000034   0xE7EB             B.N      ??LCD_CLS_2
    560          	}
    561          }
   \                     ??LCD_CLS_3: (+1)
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    562          
    563          

   \                                 In section .text, align 2, keep-with-next
    564          void LCD_DLY_ms(u16 ms)
    565          {                         
   \                     LCD_DLY_ms: (+1)
   \   00000000   0xE007             B.N      ??LCD_DLY_ms_0
    566            u16 a;
    567            while(ms)
    568            {
    569              a=13350;
   \                     ??LCD_DLY_ms_1: (+1)
   \   00000002   0xF243 0x4126      MOVW     R1,#+13350
    570              while(a--);
   \                     ??LCD_DLY_ms_2: (+1)
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x1E51             SUBS     R1,R2,#+1
   \   0000000A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD1FA             BNE.N    ??LCD_DLY_ms_2
    571              ms--;
   \   00000010   0x1E40             SUBS     R0,R0,#+1
    572            }
   \                     ??LCD_DLY_ms_0: (+1)
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??LCD_DLY_ms_1
    573            return;
   \   00000018   0x4770             BX       LR               ;; return
    574          }
    575          

   \                                 In section .text, align 2, keep-with-next
    576          void LCD_Init_Oled(void)        
    577          {
   \                     LCD_Init_Oled: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    578                  //设置PORTA pin14,pin15为GPIO口 
    579          //	PORTC_PCR12=(0|PORT_PCR_MUX(1));
    580          //	PORTC_PCR13=(0|PORT_PCR_MUX(1)); 
    581          //	PORTC_PCR14=(0|PORT_PCR_MUX(1));
    582          //	PORTC_PCR15=(0|PORT_PCR_MUX(1)); 
    583                  
    584                  PORTE_PCR24=(0|PORT_PCR_MUX(1));
   \   00000002   0xF44F 0x7080      MOV      R0,#+256
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable13_2  ;; 0x4004d060
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    585          	PORTA_PCR14=(0|PORT_PCR_MUX(1)); 
   \   0000000C   0xF44F 0x7080      MOV      R0,#+256
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable13_3  ;; 0x40049038
   \   00000014   0x6008             STR      R0,[R1, #+0]
    586          	PORTE_PCR25=(0|PORT_PCR_MUX(1));
   \   00000016   0xF44F 0x7080      MOV      R0,#+256
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable13_4  ;; 0x4004d064
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    587          	PORTA_PCR16=(0|PORT_PCR_MUX(1)); 
   \   00000020   0xF44F 0x7080      MOV      R0,#+256
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable13_5  ;; 0x40049040
   \   00000028   0x6008             STR      R0,[R1, #+0]
    588          	
    589          	//设置PORTA pin14,pin15为输出方向;pin16,pin17为输入方向
    590          //	GPIOC_PDDR=GPIO_PDDR_PDD(GPIO_PIN(12)|GPIO_PIN(13)|GPIO_PIN(14)|GPIO_PIN(15));
    591                  GPIOA_PDDR=GPIO_PDDR_PDD(GPIO_PIN(14)|GPIO_PIN(16));
   \   0000002A   0xF45F 0x30A0      MOVS     R0,#+81920
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable13_6  ;; 0x400ff014
   \   00000032   0x6008             STR      R0,[R1, #+0]
    592          	
    593                  GPIOE_PDDR=GPIO_PDDR_PDD(GPIO_PIN(24)|GPIO_PIN(25));
   \   00000034   0xF05F 0x7040      MOVS     R0,#+50331648
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable13_7  ;; 0x400ff114
   \   0000003C   0x6008             STR      R0,[R1, #+0]
    594          //	GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(12));
    595          //	//LCD_CS=1;	//预制SLK和SS为高电平   	
    596          //	
    597          //	GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));
    598          //	LCD_DLY_ms(50);
    599          //	GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));
    600                  GPIOE_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(25));
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable13_1  ;; 0x400ff100
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable13_1  ;; 0x400ff100
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    601          	//LCD_CS=1;	//预制SLK和SS为高电平   	
    602          	
    603          	GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable13  ;; 0x400ff000
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF430 0x4080      BICS     R0,R0,#0x4000
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable13  ;; 0x400ff000
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    604          	LCD_DLY_ms(50);
   \   0000005E   0x2032             MOVS     R0,#+50
   \   00000060   0x.... 0x....      BL       LCD_DLY_ms
    605          	GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable13  ;; 0x400ff000
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable13  ;; 0x400ff000
   \   00000072   0x6008             STR      R0,[R1, #+0]
    606          
    607            LCD_WrCmd(0xae);//--turn off oled panel
   \   00000074   0x20AE             MOVS     R0,#+174
   \   00000076   0x.... 0x....      BL       LCD_WrCmd
    608            LCD_WrCmd(0x00);//---set low column address
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       LCD_WrCmd
    609            LCD_WrCmd(0x10);//---set high column address
   \   00000080   0x2010             MOVS     R0,#+16
   \   00000082   0x.... 0x....      BL       LCD_WrCmd
    610            LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000086   0x2040             MOVS     R0,#+64
   \   00000088   0x.... 0x....      BL       LCD_WrCmd
    611            LCD_WrCmd(0x81);//--set contrast control register
   \   0000008C   0x2081             MOVS     R0,#+129
   \   0000008E   0x.... 0x....      BL       LCD_WrCmd
    612            LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   00000092   0x20CF             MOVS     R0,#+207
   \   00000094   0x.... 0x....      BL       LCD_WrCmd
    613            LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
   \   00000098   0x20A1             MOVS     R0,#+161
   \   0000009A   0x.... 0x....      BL       LCD_WrCmd
    614            LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
   \   0000009E   0x20C8             MOVS     R0,#+200
   \   000000A0   0x.... 0x....      BL       LCD_WrCmd
    615            LCD_WrCmd(0xa6);//--set normal display
   \   000000A4   0x20A6             MOVS     R0,#+166
   \   000000A6   0x.... 0x....      BL       LCD_WrCmd
    616            LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   000000AA   0x20A8             MOVS     R0,#+168
   \   000000AC   0x.... 0x....      BL       LCD_WrCmd
    617            LCD_WrCmd(0x3f);//--1/64 duty
   \   000000B0   0x203F             MOVS     R0,#+63
   \   000000B2   0x.... 0x....      BL       LCD_WrCmd
    618            LCD_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   000000B6   0x20D3             MOVS     R0,#+211
   \   000000B8   0x.... 0x....      BL       LCD_WrCmd
    619            LCD_WrCmd(0x00);//-not offset
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x.... 0x....      BL       LCD_WrCmd
    620            LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   000000C2   0x20D5             MOVS     R0,#+213
   \   000000C4   0x.... 0x....      BL       LCD_WrCmd
    621            LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   000000C8   0x2080             MOVS     R0,#+128
   \   000000CA   0x.... 0x....      BL       LCD_WrCmd
    622            LCD_WrCmd(0xd9);//--set pre-charge period
   \   000000CE   0x20D9             MOVS     R0,#+217
   \   000000D0   0x.... 0x....      BL       LCD_WrCmd
    623            LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   000000D4   0x20F1             MOVS     R0,#+241
   \   000000D6   0x.... 0x....      BL       LCD_WrCmd
    624            LCD_WrCmd(0xda);//--set com pins hardware configuration
   \   000000DA   0x20DA             MOVS     R0,#+218
   \   000000DC   0x.... 0x....      BL       LCD_WrCmd
    625            LCD_WrCmd(0x12);
   \   000000E0   0x2012             MOVS     R0,#+18
   \   000000E2   0x.... 0x....      BL       LCD_WrCmd
    626            LCD_WrCmd(0xdb);//--set vcomh
   \   000000E6   0x20DB             MOVS     R0,#+219
   \   000000E8   0x.... 0x....      BL       LCD_WrCmd
    627            LCD_WrCmd(0x40);//Set VCOM Deselect Level
   \   000000EC   0x2040             MOVS     R0,#+64
   \   000000EE   0x.... 0x....      BL       LCD_WrCmd
    628            LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   000000F2   0x2020             MOVS     R0,#+32
   \   000000F4   0x.... 0x....      BL       LCD_WrCmd
    629            LCD_WrCmd(0x02);//
   \   000000F8   0x2002             MOVS     R0,#+2
   \   000000FA   0x.... 0x....      BL       LCD_WrCmd
    630            LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   000000FE   0x208D             MOVS     R0,#+141
   \   00000100   0x.... 0x....      BL       LCD_WrCmd
    631            LCD_WrCmd(0x14);//--set(0x10) disable
   \   00000104   0x2014             MOVS     R0,#+20
   \   00000106   0x.... 0x....      BL       LCD_WrCmd
    632            LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   0000010A   0x20A4             MOVS     R0,#+164
   \   0000010C   0x.... 0x....      BL       LCD_WrCmd
    633            LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   00000110   0x20A6             MOVS     R0,#+166
   \   00000112   0x.... 0x....      BL       LCD_WrCmd
    634            LCD_WrCmd(0xaf);//--turn on oled panel
   \   00000116   0x20AF             MOVS     R0,#+175
   \   00000118   0x.... 0x....      BL       LCD_WrCmd
    635            LCD_Fill(0x00);  //初始清屏
   \   0000011C   0x2000             MOVS     R0,#+0
   \   0000011E   0x.... 0x....      BL       LCD_Fill
    636            LCD_Set_Pos(0,0);  
   \   00000122   0x2100             MOVS     R1,#+0
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x.... 0x....      BL       LCD_Set_Pos
    637          	
    638          } 
   \   0000012A   0xBD01             POP      {R0,PC}          ;; return
    639          
    640          //==============================================================
    641          //函数名： void LCD_PutPixel(byte x,byte y)
    642          //功能描述：绘制一个点（x,y）
    643          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
    644          //返回：无
    645          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    646          void LCD_PutPixel(u8 x,u8 y)
    647          {
   \                     LCD_PutPixel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    648          	u8 data1;  //data1当前点的数据 
    649          	 
    650            LCD_Set_Pos(x,y); 
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_Set_Pos
    651          	data1 = 0x01<<(y%8); 	
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0xFA10 0xF602      LSLS     R6,R0,R2
    652          	LCD_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
    653          	LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    654          	LCD_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       LCD_WrCmd
    655          	LCD_WrDat(data1); 	 	
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
    656          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    657          
    658          
    659          
    660          //==============================================================
    661          //函数名： void LCD_Rectangle(u8 x1,u8 y1,
    662          //                   u8 x2,byte y2,byte color,byte gif)
    663          //功能描述：绘制一个实心矩形
    664          //参数：左上角坐标（x1,y1）,右下角坐标（x2，y2）
    665          //      其中x1、x2的范围0～127，y1，y2的范围0～63，即真实坐标值
    666          //返回：无
    667          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    668          void LCD_Rectangle(u8 x1,u8 y1,u8 x2,u8 y2,u8 gif)
    669          {
   \                     LCD_Rectangle: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    670          	u8 n; 
    671          		
    672          	LCD_Set_Pos(x1,y1>>3);
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x08F1             LSRS     R1,R6,#+3
   \   00000010   0x0028             MOVS     R0,R5
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_Set_Pos
    673          	for(n=x1;n<=x2;n++)
   \   00000018   0x46A9             MOV      R9,R5
   \   0000001A   0x9C08             LDR      R4,[SP, #+32]
   \   0000001C   0xE012             B.N      ??LCD_Rectangle_0
    674          	{
    675          		LCD_WrDat(0x01<<(y1%8)); 			
   \                     ??LCD_Rectangle_1: (+1)
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000028   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   0000002C   0x4090             LSLS     R0,R0,R2
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       LCD_WrDat
    676          		if(gif == 1) 	LCD_DLY_ms(50);
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD102             BNE.N    ??LCD_Rectangle_2
   \   0000003A   0x2032             MOVS     R0,#+50
   \   0000003C   0x.... 0x....      BL       LCD_DLY_ms
    677          	}  
   \                     ??LCD_Rectangle_2: (+1)
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_0: (+1)
   \   00000044   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x454F             CMP      R7,R9
   \   0000004C   0xD2E7             BCS.N    ??LCD_Rectangle_1
    678          	LCD_Set_Pos(x1,y2>>3);
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       LCD_Set_Pos
    679            for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \   00000060   0xE013             B.N      ??LCD_Rectangle_3
    680          	{
    681          		LCD_WrDat(0x01<<(y2%8)); 			
   \                     ??LCD_Rectangle_4: (+1)
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0x2108             MOVS     R1,#+8
   \   0000006A   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006E   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   00000072   0x4090             LSLS     R0,R0,R2
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       LCD_WrDat
    682          		if(gif == 1) 	LCD_DLY_ms(5);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2C01             CMP      R4,#+1
   \   0000007E   0xD102             BNE.N    ??LCD_Rectangle_5
   \   00000080   0x2005             MOVS     R0,#+5
   \   00000082   0x.... 0x....      BL       LCD_DLY_ms
    683          	}
   \                     ??LCD_Rectangle_5: (+1)
   \   00000086   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_3: (+1)
   \   0000008A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0x454F             CMP      R7,R9
   \   00000092   0xD2E6             BCS.N    ??LCD_Rectangle_4
    684          	
    685          }  
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    686          
    687          //==============================================================
    688          //函数名：LCD_P6x8Str(byte x,byte y,byte *p)
    689          //功能描述：写入一组标准ASCII字符串
    690          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    691          //返回：无
    692          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    693          void LCD_P6x8Str(u8 x,u8 y,u8 ch[])
    694          {
   \                     LCD_P6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    695            u8 c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??LCD_P6x8Str_0
    696            while (ch[j]!='\0')
    697            {    
    698              c =ch[j]-32;
    699              if(x>126){x=0;y++;}
    700              LCD_Set_Pos(x,y);    
    701            	for(i=0;i<6;i++)     
    702            	  LCD_WrDat(F6x8[c][i]);  
   \                     ??LCD_P6x8Str_1: (+1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2106             MOVS     R1,#+6
   \   0000001E   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000022   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8Str_2: (+1)
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xDBEC             BLT.N    ??LCD_P6x8Str_1
    703            	x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    704            	j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P6x8Str_0: (+1)
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??LCD_P6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xDB01             BLT.N    ??LCD_P6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8Str_4: (+1)
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??LCD_P6x8Str_2
    705            }
    706          }
   \                     ??LCD_P6x8Str_3: (+1)
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    707          //==============================================================
    708          //函数名：LCD_P8x16Str(byte x,byte y,byte *p)
    709          //功能描述：写入一组标准ASCII字符串
    710          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    711          //返回：无
    712          //==============================================================  
    713          

   \                                 In section .text, align 2, keep-with-next
    714          void LCD_P8x16Str(u8 x,u8 y,u8 ch[])//-----------------------------------------------------------
    715          {
   \                     LCD_P8x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    716            u8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE013             B.N      ??LCD_P8x16Str_0
    717                  
    718            while (ch[j]!='\0')
    719            {    
    720              c =ch[j]-32;
    721              if(x>120){x=0;y++;}
    722              LCD_Set_Pos(x,y);    
    723            	for(i=0;i<8;i++)     
    724            	  LCD_WrDat(F8X16[c*16+i]);
    725            	LCD_Set_Pos(x,y+1);    
    726            	for(i=0;i<8;i++)     
    727            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1: (+1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x0139             LSLS     R1,R7,#+4
   \   0000001E   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   00000022   0x1808             ADDS     R0,R1,R0
   \   00000024   0x7A00             LDRB     R0,[R0, #+8]
   \   00000026   0x.... 0x....      BL       LCD_WrDat
   \   0000002A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_2: (+1)
   \   0000002E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000032   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000036   0xDBEE             BLT.N    ??LCD_P8x16Str_1
    728            	x+=8;
   \   00000038   0x3408             ADDS     R4,R4,#+8
    729            	j++;
   \   0000003A   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_0: (+1)
   \   0000003E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000042   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD02C             BEQ.N    ??LCD_P8x16Str_3
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000052   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2C79             CMP      R4,#+121
   \   0000005A   0xDB01             BLT.N    ??LCD_P8x16Str_4
   \   0000005C   0x2400             MOVS     R4,#+0
   \   0000005E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4: (+1)
   \   00000060   0x0029             MOVS     R1,R5
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000070   0xE00A             B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6: (+1)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000076   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000078   0x0139             LSLS     R1,R7,#+4
   \   0000007A   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   0000007E   0x5C08             LDRB     R0,[R1, R0]
   \   00000080   0x.... 0x....      BL       LCD_WrDat
   \   00000084   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_5: (+1)
   \   00000088   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008C   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000090   0xDBEF             BLT.N    ??LCD_P8x16Str_6
   \   00000092   0x1C69             ADDS     R1,R5,#+1
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x0020             MOVS     R0,R4
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009E   0xF05F 0x0800      MOVS     R8,#+0
   \   000000A2   0xE7C4             B.N      ??LCD_P8x16Str_2
    730            }
    731          }
   \                     ??LCD_P8x16Str_3: (+1)
   \   000000A4   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    732          //输出汉字字符串

   \                                 In section .text, align 2, keep-with-next
    733          void LCD_P14x16Str(u8 x,u8 y,u8 ch[])
    734          {
   \                     LCD_P14x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
    735          	u8 wm=0,ii = 0;
   \   0000000A   0xF05F 0x0900      MOVS     R9,#+0
   \   0000000E   0x2700             MOVS     R7,#+0
    736          	u16 adder=1; 
   \   00000010   0xF05F 0x0801      MOVS     R8,#+1
   \   00000014   0xE00B             B.N      ??LCD_P14x16Str_0
    737          	
    738          	while(ch[ii] != '\0')
    739          	{
    740            	wm = 0;
    741            	adder = 1;
    742            	while(F14x16_Idx[wm] > 127)
    743            	{
    744            		if(F14x16_Idx[wm] == ch[ii])
    745            		{
    746            			if(F14x16_Idx[wm + 1] == ch[ii + 1])
    747            			{
    748            				adder = wm * 14;
    749            				break;
    750            			}
    751            		}
    752            		wm += 2;			
    753            	}
    754            	if(x>118){x=0;y++;}
    755            	LCD_Set_Pos(x , y); 
    756            	if(adder != 1)// 显示汉字					
    757            	{
    758            		LCD_Set_Pos(x , y);
    759            		for(wm = 0;wm < 14;wm++)               
    760            		{
    761            			LCD_WrDat(F14x16[adder]);	
    762            			adder += 1;
    763            		}      
    764            		LCD_Set_Pos(x,y + 1); 
    765            		for(wm = 0;wm < 14;wm++)          
    766            		{
    767            			LCD_WrDat(F14x16[adder]);
    768            			adder += 1;
    769            		}   		
    770            	}
    771            	else			  //显示空白字符			
    772            	{
    773            		ii += 1;
    774                LCD_Set_Pos(x,y);
    775            		for(wm = 0;wm < 16;wm++)
    776            		{
    777            				LCD_WrDat(0);
    778            		}
    779            		LCD_Set_Pos(x,y + 1);
    780            		for(wm = 0;wm < 16;wm++)
    781            		{   		
    782            				LCD_WrDat(0);	
   \                     ??LCD_P14x16Str_1: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       LCD_WrDat
    783            		}
   \   0000001C   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_2: (+1)
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF1B9 0x0F10      CMP      R9,#+16
   \   00000028   0xDBF5             BLT.N    ??LCD_P14x16Str_1
    784            	}
    785            	x += 14;
   \                     ??LCD_P14x16Str_3: (+1)
   \   0000002A   0x360E             ADDS     R6,R6,#+14
    786            	ii += 2;
   \   0000002C   0x1CBF             ADDS     R7,R7,#+2
   \                     ??LCD_P14x16Str_0: (+1)
   \   0000002E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000030   0x5D78             LDRB     R0,[R7, R5]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xF000 0x808B      BEQ.W    ??LCD_P14x16Str_4
   \   00000038   0xF05F 0x0900      MOVS     R9,#+0
   \   0000003C   0xF05F 0x0801      MOVS     R8,#+1
   \   00000040   0xE001             B.N      ??LCD_P14x16Str_5
   \                     ??LCD_P14x16Str_6: (+1)
   \   00000042   0xF119 0x0902      ADDS     R9,R9,#+2
   \                     ??LCD_P14x16Str_5: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000052   0x2880             CMP      R0,#+128
   \   00000054   0xDB1A             BLT.N    ??LCD_P14x16Str_7
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000005A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000005E   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000062   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000064   0x5D79             LDRB     R1,[R7, R5]
   \   00000066   0x4288             CMP      R0,R1
   \   00000068   0xD1EB             BNE.N    ??LCD_P14x16Str_6
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000006E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000072   0xEB19 0x0000      ADDS     R0,R9,R0
   \   00000076   0x7840             LDRB     R0,[R0, #+1]
   \   00000078   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000007A   0x1979             ADDS     R1,R7,R5
   \   0000007C   0x7849             LDRB     R1,[R1, #+1]
   \   0000007E   0x4288             CMP      R0,R1
   \   00000080   0xD1DF             BNE.N    ??LCD_P14x16Str_6
   \   00000082   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000086   0x200E             MOVS     R0,#+14
   \   00000088   0xFB19 0xF800      SMULBB   R8,R9,R0
   \                     ??LCD_P14x16Str_7: (+1)
   \   0000008C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008E   0x2E77             CMP      R6,#+119
   \   00000090   0xDB01             BLT.N    ??LCD_P14x16Str_8
   \   00000092   0x2600             MOVS     R6,#+0
   \   00000094   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_P14x16Str_8: (+1)
   \   00000096   0x0021             MOVS     R1,R4
   \   00000098   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009A   0x0030             MOVS     R0,R6
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x.... 0x....      BL       LCD_Set_Pos
   \   000000A2   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000A6   0xF1B8 0x0F01      CMP      R8,#+1
   \   000000AA   0xD033             BEQ.N    ??LCD_P14x16Str_9
   \   000000AC   0x0021             MOVS     R1,R4
   \   000000AE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B0   0x0030             MOVS     R0,R6
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0x.... 0x....      BL       LCD_Set_Pos
   \   000000B8   0xF05F 0x0900      MOVS     R9,#+0
   \   000000BC   0xE00B             B.N      ??LCD_P14x16Str_10
   \                     ??LCD_P14x16Str_11: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   000000C2   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000C6   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000CA   0x.... 0x....      BL       LCD_WrDat
   \   000000CE   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000000D2   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_10: (+1)
   \   000000D6   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000DA   0xF1B9 0x0F0E      CMP      R9,#+14
   \   000000DE   0xDBEE             BLT.N    ??LCD_P14x16Str_11
   \   000000E0   0x1C61             ADDS     R1,R4,#+1
   \   000000E2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E4   0x0030             MOVS     R0,R6
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x.... 0x....      BL       LCD_Set_Pos
   \   000000EC   0xF05F 0x0900      MOVS     R9,#+0
   \                     ??LCD_P14x16Str_12: (+1)
   \   000000F0   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000F4   0xF1B9 0x0F0E      CMP      R9,#+14
   \   000000F8   0xDA97             BGE.N    ??LCD_P14x16Str_3
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   000000FE   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000102   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000106   0x.... 0x....      BL       LCD_WrDat
   \   0000010A   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000010E   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000112   0xE7ED             B.N      ??LCD_P14x16Str_12
   \                     ??LCD_P14x16Str_9: (+1)
   \   00000114   0x1C7F             ADDS     R7,R7,#+1
   \   00000116   0x0021             MOVS     R1,R4
   \   00000118   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011A   0x0030             MOVS     R0,R6
   \   0000011C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011E   0x.... 0x....      BL       LCD_Set_Pos
   \   00000122   0xF05F 0x0900      MOVS     R9,#+0
   \   00000126   0xE004             B.N      ??LCD_P14x16Str_13
   \                     ??LCD_P14x16Str_14: (+1)
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x.... 0x....      BL       LCD_WrDat
   \   0000012E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_13: (+1)
   \   00000132   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000136   0xF1B9 0x0F10      CMP      R9,#+16
   \   0000013A   0xDBF5             BLT.N    ??LCD_P14x16Str_14
   \   0000013C   0x1C61             ADDS     R1,R4,#+1
   \   0000013E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000140   0x0030             MOVS     R0,R6
   \   00000142   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000144   0x.... 0x....      BL       LCD_Set_Pos
   \   00000148   0xF05F 0x0900      MOVS     R9,#+0
   \   0000014C   0xE768             B.N      ??LCD_P14x16Str_2
    787          	}
    788          }
   \                     ??LCD_P14x16Str_4: (+1)
   \   0000014E   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    789          //输出汉字和字符混合字符串

   \                                 In section .text, align 2, keep-with-next
    790          void LCD_Print(u8 x, u8 y, u8 ch[])
    791          {
   \                     LCD_Print: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    792          	u8 ch2[3];
    793          	u8 ii=0;        
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE014             B.N      ??LCD_Print_0
    794          	while(ch[ii] != '\0')
    795          	{
    796          		if(ch[ii] > 127)
    797          		{
    798          			ch2[0] = ch[ii];
   \                     ??LCD_Print_1: (+1)
   \   0000000C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000E   0x5DB8             LDRB     R0,[R7, R6]
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    799          	 		ch2[1] = ch[ii + 1];
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x19B8             ADDS     R0,R7,R6
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    800          			ch2[2] = '\0';			//汉字为两个字节
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0002      STRB     R0,[SP, #+2]
    801          			LCD_P14x16Str(x , y, ch2);	//显示汉字
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_P14x16Str
    802          			x += 14;
   \   00000032   0x340E             ADDS     R4,R4,#+14
    803          			ii += 2;
   \   00000034   0x1CBF             ADDS     R7,R7,#+2
    804          		}
   \                     ??LCD_Print_0: (+1)
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x5DB8             LDRB     R0,[R7, R6]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD014             BEQ.N    ??LCD_Print_2
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DB8             LDRB     R0,[R7, R6]
   \   00000042   0x2880             CMP      R0,#+128
   \   00000044   0xDAE2             BGE.N    ??LCD_Print_1
    805          		else
    806          		{
    807          			ch2[0] = ch[ii];	
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    808          			ch2[1] = '\0';			//字母占一个字节
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xF88D 0x0001      STRB     R0,[SP, #+1]
    809          			LCD_P8x16Str(x , y , ch2);	//显示字母
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       LCD_P8x16Str
    810          			x += 8;
   \   00000062   0x3408             ADDS     R4,R4,#+8
    811          			ii+= 1;
   \   00000064   0x1C7F             ADDS     R7,R7,#+1
   \   00000066   0xE7E6             B.N      ??LCD_Print_0
    812          		}
    813          	}
    814          } 
   \                     ??LCD_Print_2: (+1)
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    815          
    816          //==============================================================
    817          //函数名： void Draw_BMP(byte x,byte y)
    818          //功能描述：显示BMP图片128×64
    819          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
    820          //返回：无
    821          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    822          void Draw_BMP(u8 x0,u8 y0,u8 x1,u8 y1,u8 bmp[])
    823          { 	
   \                     Draw_BMP: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    824            u16 ii=0;
   \   0000000A   0x2700             MOVS     R7,#+0
    825            u8 x,y;
    826            
    827            if(y1%8==0) y=y1/8;      
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0xFB96 0xF2F0      SDIV     R2,R6,R0
   \   00000014   0xFB02 0x6210      MLS      R2,R2,R0,R6
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD104             BNE.N    ??Draw_BMP_0
   \   0000001C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001E   0x2008             MOVS     R0,#+8
   \   00000020   0xFB96 0xFAF0      SDIV     R10,R6,R0
   \   00000024   0xE005             B.N      ??Draw_BMP_1
    828            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2008             MOVS     R0,#+8
   \   0000002A   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   0000002E   0xF110 0x0A01      ADDS     R10,R0,#+1
    829          	for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \   00000032   0x468A             MOV      R10,R1
   \   00000034   0xF8DD 0x8020      LDR      R8,[SP, #+32]
   \   00000038   0xE00E             B.N      ??Draw_BMP_2
    830          	{
    831          		LCD_Set_Pos(x0,y);				
    832              for(x=x0;x<x1;x++)
    833          	    {      
    834          	    	LCD_WrDat(bmp[ii++]);	    	
   \                     ??Draw_BMP_3: (+1)
   \   0000003A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000003C   0xF817 0x0008      LDRB     R0,[R7, R8]
   \   00000040   0x.... 0x....      BL       LCD_WrDat
   \   00000044   0x1C7F             ADDS     R7,R7,#+1
    835          	    }
   \   00000046   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??Draw_BMP_4: (+1)
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x45A9             CMP      R9,R5
   \   00000052   0xD3F2             BCC.N    ??Draw_BMP_3
   \   00000054   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_2: (+1)
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0x4556             CMP      R6,R10
   \   00000060   0xD307             BCC.N    ??Draw_BMP_5
   \   00000062   0x4651             MOV      R1,R10
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006E   0x46A1             MOV      R9,R4
   \   00000070   0xE7EB             B.N      ??Draw_BMP_4
    836          	}
    837          }
   \                     ??Draw_BMP_5: (+1)
   \   00000072   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
    838          void Draw_LQLogo(void)
    839          { 	
   \                     Draw_LQLogo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    840            u16 ii=0;
   \   00000002   0x2400             MOVS     R4,#+0
    841            u8 x,y;       
    842            
    843          	for(y=0;y<8;y++)
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0xE00B             B.N      ??Draw_LQLogo_0
    844          	{
    845          		LCD_Set_Pos(16,y);				
    846              for(x=16;x<112;x++)
    847          	    {      
    848          	    	LCD_WrDat(longqiu96x64[ii++]);	    	
   \                     ??Draw_LQLogo_1: (+1)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   0000000C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000E   0x5C20             LDRB     R0,[R4, R0]
   \   00000010   0x.... 0x....      BL       LCD_WrDat
   \   00000014   0x1C64             ADDS     R4,R4,#+1
    849          	    }
   \   00000016   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Draw_LQLogo_2: (+1)
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0x2D70             CMP      R5,#+112
   \   0000001C   0xDBF4             BLT.N    ??Draw_LQLogo_1
   \   0000001E   0x1C76             ADDS     R6,R6,#+1
   \                     ??Draw_LQLogo_0: (+1)
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2E08             CMP      R6,#+8
   \   00000024   0xDA06             BGE.N    ??Draw_LQLogo_3
   \   00000026   0x0031             MOVS     R1,R6
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x2010             MOVS     R0,#+16
   \   0000002C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000030   0x2510             MOVS     R5,#+16
   \   00000032   0xE7F1             B.N      ??Draw_LQLogo_2
    850          	}
    851          }
   \                     ??Draw_LQLogo_3: (+1)
   \   00000034   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    852          void Draw_LibLogo(void)
    853          { 	
   \                     Draw_LibLogo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    854            u16 ii=0;
   \   00000002   0x2400             MOVS     R4,#+0
    855            u8 x,y;       
    856            
    857          	for(y=0;y<8;y++)
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0xE00B             B.N      ??Draw_LibLogo_0
    858          	{
    859          		LCD_Set_Pos(34,y);				
    860              for(x=34;x<94;x++)
    861          	    {      
    862          	    	LCD_WrDat(LIBLOGO60x58[ii++]);	    	
   \                     ??Draw_LibLogo_1: (+1)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000000C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000E   0x5C20             LDRB     R0,[R4, R0]
   \   00000010   0x.... 0x....      BL       LCD_WrDat
   \   00000014   0x1C64             ADDS     R4,R4,#+1
    863          	    }
   \   00000016   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Draw_LibLogo_2: (+1)
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0x2D5E             CMP      R5,#+94
   \   0000001C   0xDBF4             BLT.N    ??Draw_LibLogo_1
   \   0000001E   0x1C76             ADDS     R6,R6,#+1
   \                     ??Draw_LibLogo_0: (+1)
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2E08             CMP      R6,#+8
   \   00000024   0xDA06             BGE.N    ??Draw_LibLogo_3
   \   00000026   0x0031             MOVS     R1,R6
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x2022             MOVS     R0,#+34
   \   0000002C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000030   0x2522             MOVS     R5,#+34
   \   00000032   0xE7F1             B.N      ??Draw_LibLogo_2
    864          	}
    865          } 
   \                     ??Draw_LibLogo_3: (+1)
   \   00000034   0xBD70             POP      {R4-R6,PC}       ;; return
    866          
    867          
    868          
    869          
    870          /*****************************************************************************
    871           函 数 名  : LED_PrintImage
    872           功能描述  : 将图像显示出来
    873           输入参数  : unsigned char *pucTable     二维图像数组的地址
    874                       USHORT16 usRowNum    二维图像的行数1~64
    875                       USHORT16 usColumnNum 二维图像的列数1~128
    876           输出参数  : none
    877           返 回 值  : none
    878          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    879          void LED_PrintImage(unsigned char *pucTable, uint16 usRowNum, uint16 usColumnNum)
    880          {
   \                     LED_PrintImage: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
    881              unsigned char ucData;
    882              uint16 i,j,k,m,n;
    883              uint16 usRowTmp;
    884          
    885              m = usRowNum >> 3;   //计算图片行数以8位为一组完整的组数
   \   00000008   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000A   0x08CE             LSRS     R6,R1,#+3
    886              n = usRowNum % 8;    //计算分完组后剩下的行数
   \   0000000C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0xFB91 0xF7F0      SDIV     R7,R1,R0
   \   00000014   0xFB07 0x1710      MLS      R7,R7,R0,R1
    887              
    888              for(i = 0; i < m; i++) //完整组行扫描
   \   00000018   0xF05F 0x0800      MOVS     R8,#+0
   \   0000001C   0xE001             B.N      ??LED_PrintImage_0
   \                     ??LED_PrintImage_1: (+1)
   \   0000001E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LED_PrintImage_0: (+1)
   \   00000022   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000026   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000028   0x45B0             CMP      R8,R6
   \   0000002A   0xD22A             BCS.N    ??LED_PrintImage_2
    889              {
    890                  LCD_Set_Pos(0,(unsigned char)i);
   \   0000002C   0x4641             MOV      R1,R8
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       LCD_Set_Pos
    891                  usRowTmp = i << 3;    //计算当前所在行的下标                  
   \   00000036   0xEA5F 0x09C8      LSLS     R9,R8,#+3
    892                  for(j = 0; j < usColumnNum; j++) //列扫描        
   \   0000003A   0xF05F 0x0A00      MOVS     R10,#+0
   \   0000003E   0xE018             B.N      ??LED_PrintImage_3
    893                  {
    894                      ucData = 0;
    895                      for(k = 0; k < 8; k++) //在i组中对这8行扫描
    896                      {
    897                          ucData = ucData >> 1;
   \                     ??LED_PrintImage_4: (+1)
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x0840             LSRS     R0,R0,#+1
    898                          if((pucTable + (usRowTmp + k) * usColumnNum)[j] == LED_IMAGE_WHITE)
   \   00000044   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000046   0xFA11 0xF289      UXTAH    R2,R1,R9
   \   0000004A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004C   0xFB05 0x4202      MLA      R2,R5,R2,R4
   \   00000050   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000054   0xF81A 0x2002      LDRB     R2,[R10, R2]
   \   00000058   0x2A01             CMP      R2,#+1
   \   0000005A   0xD101             BNE.N    ??LED_PrintImage_5
    899                          {
    900                              ucData = ucData | 0x80;
   \   0000005C   0xF050 0x0080      ORRS     R0,R0,#0x80
    901                          }
    902                          
    903                      }
   \                     ??LED_PrintImage_5: (+1)
   \   00000060   0x1C49             ADDS     R1,R1,#+1
   \                     ??LED_PrintImage_6: (+1)
   \   00000062   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000064   0x2908             CMP      R1,#+8
   \   00000066   0xDBEB             BLT.N    ??LED_PrintImage_4
    904                      LCD_WrDat(ucData);
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       LCD_WrDat
   \   0000006E   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??LED_PrintImage_3: (+1)
   \   00000072   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000076   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000078   0x45AA             CMP      R10,R5
   \   0000007A   0xD2D0             BCS.N    ??LED_PrintImage_1
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0xE7EF             B.N      ??LED_PrintImage_6
    905                  }
    906              }
    907              
    908              LCD_Set_Pos(0,(unsigned char)i); //设置剩下的行显示的起始坐标
   \                     ??LED_PrintImage_2: (+1)
   \   00000082   0x4641             MOV      R1,R8
   \   00000084   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      BL       LCD_Set_Pos
    909              usRowTmp = i << 3;       //计算当前所在行的下标                  
   \   0000008C   0xEA5F 0x09C8      LSLS     R9,R8,#+3
    910              for(j = 0; j < usColumnNum; j++) //列扫描        
   \   00000090   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000094   0xE01D             B.N      ??LED_PrintImage_7
    911              {
    912                  ucData = 0;
    913                  for(k = 0; k < n; k++) //对剩下的行扫描
    914                  {
    915                      ucData = ucData >> 1;
   \                     ??LED_PrintImage_8: (+1)
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x0840             LSRS     R0,R0,#+1
    916                      if((pucTable + (usRowTmp + k) * usColumnNum)[j] == LED_IMAGE_WHITE)
   \   0000009A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000009C   0xFA11 0xF289      UXTAH    R2,R1,R9
   \   000000A0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A2   0xFB05 0x4202      MLA      R2,R5,R2,R4
   \   000000A6   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000AA   0xF81A 0x2002      LDRB     R2,[R10, R2]
   \   000000AE   0x2A01             CMP      R2,#+1
   \   000000B0   0xD101             BNE.N    ??LED_PrintImage_9
    917                      {
    918                          ucData = ucData | 0x80;
   \   000000B2   0xF050 0x0080      ORRS     R0,R0,#0x80
    919                      }
    920                      
    921                  }
   \                     ??LED_PrintImage_9: (+1)
   \   000000B6   0x1C49             ADDS     R1,R1,#+1
   \                     ??LED_PrintImage_10: (+1)
   \   000000B8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000BA   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000BC   0x42B9             CMP      R1,R7
   \   000000BE   0xD3EA             BCC.N    ??LED_PrintImage_8
    922                  ucData = ucData >> (8 - n);
   \   000000C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C2   0xF1D7 0x0108      RSBS     R1,R7,#+8
   \   000000C6   0x4108             ASRS     R0,R0,R1
    923                  LCD_WrDat(ucData);
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x.... 0x....      BL       LCD_WrDat
   \   000000CE   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??LED_PrintImage_7: (+1)
   \   000000D2   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000D6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000D8   0x45AA             CMP      R10,R5
   \   000000DA   0xD202             BCS.N    ??LED_PrintImage_11
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x2100             MOVS     R1,#+0
   \   000000E0   0xE7EA             B.N      ??LED_PrintImage_10
    924              }
    925          
    926              return;
   \                     ??LED_PrintImage_11: (+1)
   \   000000E2   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    927          }
    928          
    929          /*****************************************************************************
    930           函 数 名  : MAIN_ConvertData
    931           功能描述  : 将数据转换为可以在OLED屏上显示的格式
    932           输入参数  : unsigned char *pInputImageData  
    933                       unsigned char *pOutputImageBuf  
    934           输出参数  : NONE
    935           返 回 值  : NONE
    936          *****************************************************************************/
    937          
    938          

   \                                 In section .text, align 2, keep-with-next
    939          void MAIN_ConvertData(unsigned char *pInputImageData, unsigned char *pOutputImageBuf)
    940          {
   \                     MAIN_ConvertData: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0A1             SUB      SP,SP,#+132
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    941          unsigned char ucTmpData; 
    942          uint16 j,usRowIdx ;  
    943          unsigned char huancun[128];
    944          
    945          	//清空pOutputImageBuf指向的缓存， memset库函数在string.h中
    946           memset(pOutputImageBuf, 0x00, 128*64);
   \   00000008   0xF44F 0x5100      MOV      R1,#+8192
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x0028             MOVS     R0,R5
   \   00000010   0x.... 0x....      BL       __aeabi_memset
    947          
    948              for (j = 0; j <=128; j++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE00B             B.N      ??MAIN_ConvertData_0
    949              {
    950                   huancun[j] = (unsigned char)(pInputImageData[j]*64/255);
    951                   
    952               ucTmpData = huancun[j] < (64 - 1) ? huancun[j] : (64 - 1);
   \                     ??MAIN_ConvertData_1: (+1)
   \   00000018   0x213F             MOVS     R1,#+63
    953                  //当前值
    954                  
    955                  usRowIdx = (64 - 1) - ucTmpData;    //最大值减去当前值__列数
   \                     ??MAIN_ConvertData_2: (+1)
   \   0000001A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   0xF1D1 0x013F      RSBS     R1,R1,#+63
    956          
    957                  (pOutputImageBuf + usRowIdx * 128)[j] = 1;
   \   00000020   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000022   0x2280             MOVS     R2,#+128
   \   00000024   0xFB02 0x5101      MLA      R1,R2,R1,R5
   \   00000028   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x5442             STRB     R2,[R0, R1]
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \                     ??MAIN_ConvertData_0: (+1)
   \   00000030   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000032   0x2881             CMP      R0,#+129
   \   00000034   0xDA12             BGE.N    ??MAIN_ConvertData_3
   \   00000036   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000038   0x5D01             LDRB     R1,[R0, R4]
   \   0000003A   0x2240             MOVS     R2,#+64
   \   0000003C   0x4351             MULS     R1,R2,R1
   \   0000003E   0x22FF             MOVS     R2,#+255
   \   00000040   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000044   0xAA00             ADD      R2,SP,#+0
   \   00000046   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000048   0x5481             STRB     R1,[R0, R2]
   \   0000004A   0xA900             ADD      R1,SP,#+0
   \   0000004C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004E   0x5C41             LDRB     R1,[R0, R1]
   \   00000050   0x293F             CMP      R1,#+63
   \   00000052   0xDAE1             BGE.N    ??MAIN_ConvertData_1
   \   00000054   0xA900             ADD      R1,SP,#+0
   \   00000056   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000058   0x5C41             LDRB     R1,[R0, R1]
   \   0000005A   0xE7DE             B.N      ??MAIN_ConvertData_2
    958           
    959              }
    960          }
   \                     ??MAIN_ConvertData_3: (+1)
   \   0000005C   0xB021             ADD      SP,SP,#+132
   \   0000005E   0xBD30             POP      {R4,R5,PC}       ;; return
    961          
    962          
    963          
    964          //*******************************寻跳沿********************************************

   \                                 In section .text, align 2, keep-with-next
    965          void tiaoyan(byte Ledge,byte Redge,byte L_edgeFlag,byte R_edgeFlag,unsigned char *pOutputImageBuf)
    966          {
   \                     tiaoyan: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    967            int l=0,r=0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
    968            //清空pOutputImageBuf指向的缓存， memset库函数在string.h中
    969           //memset(pOutputImageBuf, 0x00, 128*64);
    970                  if(L_edgeFlag==1)
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x2A01             CMP      R2,#+1
   \   0000000A   0xD100             BNE.N    ??tiaoyan_0
    971                    {l=1;}
   \   0000000C   0x2401             MOVS     R4,#+1
    972                  if(R_edgeFlag==1)
   \                     ??tiaoyan_0: (+1)
   \   0000000E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000010   0x2B01             CMP      R3,#+1
   \   00000012   0xD100             BNE.N    ??tiaoyan_1
    973                    {r=1;}
   \   00000014   0x2501             MOVS     R5,#+1
   \                     ??tiaoyan_1: (+1)
   \   00000016   0x9A02             LDR      R2,[SP, #+8]
    974              (pOutputImageBuf + 1*128)[Ledge] = l;
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x1883             ADDS     R3,R0,R2
   \   0000001C   0xF883 0x4080      STRB     R4,[R3, #+128]
    975              (pOutputImageBuf + 2*128)[Ledge] = l;
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x1883             ADDS     R3,R0,R2
   \   00000024   0xF883 0x4100      STRB     R4,[R3, #+256]
    976              (pOutputImageBuf + 3*128)[Ledge] = l;
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x1883             ADDS     R3,R0,R2
   \   0000002C   0xF883 0x4180      STRB     R4,[R3, #+384]
    977              (pOutputImageBuf + 4*128)[Ledge] = l; 
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x1883             ADDS     R3,R0,R2
   \   00000034   0xF883 0x4200      STRB     R4,[R3, #+512]
    978              (pOutputImageBuf + 1*128)[Redge] = r;
   \   00000038   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003A   0x188B             ADDS     R3,R1,R2
   \   0000003C   0xF883 0x5080      STRB     R5,[R3, #+128]
    979              (pOutputImageBuf + 2*128)[Redge] = r;
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0x188B             ADDS     R3,R1,R2
   \   00000044   0xF883 0x5100      STRB     R5,[R3, #+256]
    980              (pOutputImageBuf + 3*128)[Redge] = r;
   \   00000048   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   0x188B             ADDS     R3,R1,R2
   \   0000004C   0xF883 0x5180      STRB     R5,[R3, #+384]
    981              (pOutputImageBuf + 4*128)[Redge] = r;
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x188B             ADDS     R3,R1,R2
   \   00000054   0xF883 0x5200      STRB     R5,[R3, #+512]
    982              
    983              (pOutputImageBuf + 1*128)[Ledge+1] = l;
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x1883             ADDS     R3,R0,R2
   \   0000005C   0xF883 0x4081      STRB     R4,[R3, #+129]
    984              (pOutputImageBuf + 2*128)[Ledge+1] = l;
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x1883             ADDS     R3,R0,R2
   \   00000064   0xF883 0x4101      STRB     R4,[R3, #+257]
    985              (pOutputImageBuf + 3*128)[Ledge+1] = l;
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x1883             ADDS     R3,R0,R2
   \   0000006C   0xF883 0x4181      STRB     R4,[R3, #+385]
    986              (pOutputImageBuf + 4*128)[Ledge+1] = l;
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x1880             ADDS     R0,R0,R2
   \   00000074   0xF880 0x4201      STRB     R4,[R0, #+513]
    987              (pOutputImageBuf + 1*128)[Redge-1] = r;
   \   00000078   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007A   0x1888             ADDS     R0,R1,R2
   \   0000007C   0xF880 0x507F      STRB     R5,[R0, #+127]
    988              (pOutputImageBuf + 2*128)[Redge-1] = r;
   \   00000080   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000082   0x1888             ADDS     R0,R1,R2
   \   00000084   0xF880 0x50FF      STRB     R5,[R0, #+255]
    989              (pOutputImageBuf + 3*128)[Redge-1] = r;
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0x1888             ADDS     R0,R1,R2
   \   0000008C   0xF880 0x517F      STRB     R5,[R0, #+383]
    990              (pOutputImageBuf + 4*128)[Redge-1] = r;
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x1888             ADDS     R0,R1,R2
   \   00000094   0xF880 0x51FF      STRB     R5,[R0, #+511]
    991           
    992              
    993          }
   \   00000098   0xBC30             POP      {R4,R5}
   \   0000009A   0x4770             BX       LR               ;; return
    994          
    995          //************************寻中值***********************************************8

   \                                 In section .text, align 2, keep-with-next
    996          void middleline(byte middle,unsigned char *pOutputImageBuf)
    997          {
   \                     middleline: (+1)
   \   00000000   0xB410             PUSH     {R4}
    998            int i=1;
   \   00000002   0x2201             MOVS     R2,#+1
    999            for(i=5;i<40;i++)
   \   00000004   0x2305             MOVS     R3,#+5
   \   00000006   0x001A             MOVS     R2,R3
   \   00000008   0xE006             B.N      ??middleline_0
   1000              
   1001            {  (pOutputImageBuf + i*128)[middle] = 1;} 
   \                     ??middleline_1: (+1)
   \   0000000A   0x2380             MOVS     R3,#+128
   \   0000000C   0xFB03 0x1302      MLA      R3,R3,R2,R1
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x2401             MOVS     R4,#+1
   \   00000014   0x54C4             STRB     R4,[R0, R3]
   \   00000016   0x1C52             ADDS     R2,R2,#+1
   \                     ??middleline_0: (+1)
   \   00000018   0x2A28             CMP      R2,#+40
   \   0000001A   0xDBF6             BLT.N    ??middleline_1
   1002           for(i=1;i<3;i++)
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0xE006             B.N      ??middleline_2
   1003              
   1004            {
   1005               (pOutputImageBuf + i*128)[64] = 1;
   \                     ??middleline_3: (+1)
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x2380             MOVS     R3,#+128
   \   00000024   0xFB03 0x1302      MLA      R3,R3,R2,R1
   \   00000028   0xF883 0x0040      STRB     R0,[R3, #+64]
   1006            } 
   \   0000002C   0x1C52             ADDS     R2,R2,#+1
   \                     ??middleline_2: (+1)
   \   0000002E   0x2A03             CMP      R2,#+3
   \   00000030   0xDBF6             BLT.N    ??middleline_3
   1007          
   1008            
   1009          }
   \   00000032   0xBC10             POP      {R4}
   \   00000034   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   1010          int Threshold;
   \                     Threshold:
   \   00000000                      DS8 4
   1011          //***********************寻阈值************************************************

   \                                 In section .text, align 2, keep-with-next
   1012          void thresholdline(byte threshold,unsigned char *pOutputImageBuf)
   1013          {
   \                     thresholdline: (+1)
   \   00000000   0xB410             PUSH     {R4}
   1014            int i,j; 
   1015            
   1016              Threshold=64-threshold*64/255;
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x2240             MOVS     R2,#+64
   \   00000006   0x4350             MULS     R0,R2,R0
   \   00000008   0x22FF             MOVS     R2,#+255
   \   0000000A   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   0000000E   0xF1D0 0x0040      RSBS     R0,R0,#+64
   \   00000012   0x....             LDR.N    R2,??DataTable13_14
   \   00000014   0x6010             STR      R0,[R2, #+0]
   1017              for(i=97;i<127;i++)   
   \   00000016   0x2061             MOVS     R0,#+97
   \   00000018   0xE007             B.N      ??thresholdline_0
   1018              {  (pOutputImageBuf + Threshold*128)[i] = 1;}  
   \                     ??thresholdline_1: (+1)
   \   0000001A   0x2201             MOVS     R2,#+1
   \   0000001C   0x....             LDR.N    R3,??DataTable13_14
   \   0000001E   0x681B             LDR      R3,[R3, #+0]
   \   00000020   0x2480             MOVS     R4,#+128
   \   00000022   0xFB04 0x1303      MLA      R3,R4,R3,R1
   \   00000026   0x54C2             STRB     R2,[R0, R3]
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \                     ??thresholdline_0: (+1)
   \   0000002A   0x287F             CMP      R0,#+127
   \   0000002C   0xDBF5             BLT.N    ??thresholdline_1
   1019              for(j=0;j<30;j++)    
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0xE007             B.N      ??thresholdline_2
   1020              {  (pOutputImageBuf + Threshold*128)[j] = 1;} 
   \                     ??thresholdline_3: (+1)
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x....             LDR.N    R3,??DataTable13_14
   \   00000036   0x681B             LDR      R3,[R3, #+0]
   \   00000038   0x2480             MOVS     R4,#+128
   \   0000003A   0xFB04 0x1303      MLA      R3,R4,R3,R1
   \   0000003E   0x54C2             STRB     R2,[R0, R3]
   \   00000040   0x1C40             ADDS     R0,R0,#+1
   \                     ??thresholdline_2: (+1)
   \   00000042   0x281E             CMP      R0,#+30
   \   00000044   0xDBF5             BLT.N    ??thresholdline_3
   1021              
   1022               for(i=59;i<69;i++)   
   \   00000046   0x203B             MOVS     R0,#+59
   \   00000048   0xE004             B.N      ??thresholdline_4
   1023              {(pOutputImageBuf + (64-175*64/255)*128)[i] = 1;}  
   \                     ??thresholdline_5: (+1)
   \   0000004A   0x2201             MOVS     R2,#+1
   \   0000004C   0x1843             ADDS     R3,R0,R1
   \   0000004E   0xF883 0x2A80      STRB     R2,[R3, #+2688]
   \   00000052   0x1C40             ADDS     R0,R0,#+1
   \                     ??thresholdline_4: (+1)
   \   00000054   0x2845             CMP      R0,#+69
   \   00000056   0xDBF8             BLT.N    ??thresholdline_5
   1024            
   1025              
   1026              for(i=59;i<69;i++)   
   \   00000058   0x203B             MOVS     R0,#+59
   \   0000005A   0xE005             B.N      ??thresholdline_6
   1027              {(pOutputImageBuf + (64-100*64/255)*128)[i] = 1;} 
   \                     ??thresholdline_7: (+1)
   \   0000005C   0x2201             MOVS     R2,#+1
   \   0000005E   0x1843             ADDS     R3,R0,R1
   \   00000060   0xF513 0x539C      ADDS     R3,R3,#+4992
   \   00000064   0x701A             STRB     R2,[R3, #+0]
   \   00000066   0x1C40             ADDS     R0,R0,#+1
   \                     ??thresholdline_6: (+1)
   \   00000068   0x2845             CMP      R0,#+69
   \   0000006A   0xDBF7             BLT.N    ??thresholdline_7
   1028                          
   1029          }
   \   0000006C   0xBC10             POP      {R4}
   \   0000006E   0x4770             BX       LR               ;; return
   1030          
   1031          
   1032          
   1033          
   1034          
   1035          
   1036          
   1037          
   1038          
   1039          

   \                                 In section .text, align 2, keep-with-next
   1040          void LED_P6x8Char(unsigned char ucIdxX, unsigned char ucIdxY, unsigned char ucData)
   1041          {
   \                     LED_P6x8Char: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1042              unsigned char i, ucDataTmp;     
   1043                 
   1044              ucDataTmp = ucData-32;
   \   00000002   0xF1B2 0x0520      SUBS     R5,R2,#+32
   1045              if(ucIdxX > 122)
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x287B             CMP      R0,#+123
   \   0000000A   0xDB01             BLT.N    ??LED_P6x8Char_0
   1046              {
   1047                  ucIdxX = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   1048                  ucIdxY++;
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
   1049              }
   1050              
   1051              LCD_Set_Pos(ucIdxX, ucIdxY);
   \                     ??LED_P6x8Char_0: (+1)
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_Set_Pos
   1052              
   1053              for(i = 0; i < 6; i++)
   \   00000018   0x2400             MOVS     R4,#+0
   \   0000001A   0xE009             B.N      ??LED_P6x8Char_1
   1054              {     
   1055                  LCD_WrDat(F6x8[ucDataTmp][i]);  
   \                     ??LED_P6x8Char_2: (+1)
   \   0000001C   0x....             LDR.N    R0,??DataTable13_8
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2106             MOVS     R1,#+6
   \   00000022   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x5C20             LDRB     R0,[R4, R0]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
   1056              }
   \   0000002E   0x1C64             ADDS     R4,R4,#+1
   \                     ??LED_P6x8Char_1: (+1)
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x2C06             CMP      R4,#+6
   \   00000034   0xDBF2             BLT.N    ??LED_P6x8Char_2
   1057          }
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1058          /*****************************************************************************
   1059           函 数 名  : LED_PrintChar
   1060           功能描述  : 将一个Char型数转换成3位数进行显示
   1061           输入参数  : unsigned char ucIdxX    ucIdxX的范围为0～122
   1062                       unsigned char ucIdxY    ucIdxY的范围为0～7
   1063                       CHAR8 cData      cData为需要转化显示的数值 -128~127
   1064           输出参数  : none
   1065           返 回 值  : none
   1066          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1067          void LED_PrintChar(unsigned char ucIdxX, unsigned char ucIdxY, char cData)
   1068          {
   \                     LED_PrintChar: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1069              uint16 i, j, k, usData;
   1070          
   1071              if(cData <0)
   1072              {
   1073                 // LED_P6x8Char(ucIdxX, ucIdxY, '-');
   1074                  usData = (uint16)(-cData);  
   1075              }
   1076              else
   1077              {
   1078               //  LED_P6x8Char(ucIdxX, ucIdxY, '+');
   1079                  usData = (uint16)cData;
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   1080              }
   1081              i = usData / 100;
   \   00000008   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000A   0x2064             MOVS     R0,#+100
   \   0000000C   0xFB92 0xF0F0      SDIV     R0,R2,R0
   1082              j = (usData % 100) / 10;
   \   00000010   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000012   0x2164             MOVS     R1,#+100
   \   00000014   0xFB92 0xF3F1      SDIV     R3,R2,R1
   \   00000018   0xFB01 0x2113      MLS      R1,R1,R3,R2
   \   0000001C   0x230A             MOVS     R3,#+10
   \   0000001E   0xFB91 0xF6F3      SDIV     R6,R1,R3
   1083              k = usData % 10;
   \   00000022   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000024   0x210A             MOVS     R1,#+10
   \   00000026   0xFB92 0xF3F1      SDIV     R3,R2,R1
   \   0000002A   0xFB01 0x2713      MLS      R7,R1,R3,R2
   1084              
   1085              LED_P6x8Char(ucIdxX+6, ucIdxY, i+0x30);
   \   0000002E   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000032   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000034   0x0029             MOVS     R1,R5
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0x1DA0             ADDS     R0,R4,#+6
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x.... 0x....      BL       LED_P6x8Char
   1086              LED_P6x8Char(ucIdxX+12, ucIdxY, j+0x30);
   \   00000040   0xF116 0x0230      ADDS     R2,R6,#+48
   \   00000044   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   0xF114 0x000C      ADDS     R0,R4,#+12
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x.... 0x....      BL       LED_P6x8Char
   1087              LED_P6x8Char(ucIdxX+18, ucIdxY, k+0x30);   
   \   00000054   0xF117 0x0230      ADDS     R2,R7,#+48
   \   00000058   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005A   0x0029             MOVS     R1,R5
   \   0000005C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005E   0xF114 0x0012      ADDS     R0,R4,#+18
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x.... 0x....      BL       LED_P6x8Char
   1088          
   1089              return;
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1090          }
   1091          
   1092          
   1093          

   \                                 In section .text, align 2, keep-with-next
   1094          void parameter_show()
   1095            {
   \                     parameter_show: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1096          	  LED_PrintChar(0,5, Cnt[0]);
   \   00000002   0x....             LDR.N    R0,??DataTable13_15
   \   00000004   0x6802             LDR      R2,[R0, #+0]
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x2105             MOVS     R1,#+5
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       LED_PrintChar
   1097          	  LED_PrintChar(45,5, len_show[0]);
   \   00000010   0x....             LDR.N    R0,??DataTable13_16
   \   00000012   0x7802             LDRB     R2,[R0, #+0]
   \   00000014   0x2105             MOVS     R1,#+5
   \   00000016   0x202D             MOVS     R0,#+45
   \   00000018   0x.... 0x....      BL       LED_PrintChar
   1098          	  LED_PrintChar(100,5, threshold);
   \   0000001C   0x....             LDR.N    R0,??DataTable13_17
   \   0000001E   0x6802             LDR      R2,[R0, #+0]
   \   00000020   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000022   0x2105             MOVS     R1,#+5
   \   00000024   0x2064             MOVS     R0,#+100
   \   00000026   0x.... 0x....      BL       LED_PrintChar
   1099          	  
   1100          	  LED_PrintChar(0,6, GrayMin);
   \   0000002A   0x....             LDR.N    R0,??DataTable13_18
   \   0000002C   0x6802             LDR      R2,[R0, #+0]
   \   0000002E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000030   0x2106             MOVS     R1,#+6
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       LED_PrintChar
   1101          	  LED_PrintChar(45,6, CNT[0]);
   \   00000038   0x....             LDR.N    R0,??DataTable13_19
   \   0000003A   0x6802             LDR      R2,[R0, #+0]
   \   0000003C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003E   0x2106             MOVS     R1,#+6
   \   00000040   0x202D             MOVS     R0,#+45
   \   00000042   0x.... 0x....      BL       LED_PrintChar
   1102          	  LED_PrintChar(100,6, GrayMax);
   \   00000046   0x....             LDR.N    R0,??DataTable13_20
   \   00000048   0x6802             LDR      R2,[R0, #+0]
   \   0000004A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000004C   0x2106             MOVS     R1,#+6
   \   0000004E   0x2064             MOVS     R0,#+100
   \   00000050   0x.... 0x....      BL       LED_PrintChar
   1103          	  
   1104          	  LED_PrintChar(0,7, Ledge[0]);
   \   00000054   0x....             LDR.N    R0,??DataTable13_21
   \   00000056   0x6802             LDR      R2,[R0, #+0]
   \   00000058   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005A   0x2107             MOVS     R1,#+7
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x.... 0x....      BL       LED_PrintChar
   1105          	  LED_PrintChar(45,7, midline);
   \   00000062   0x....             LDR.N    R0,??DataTable13_22
   \   00000064   0x6802             LDR      R2,[R0, #+0]
   \   00000066   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000068   0x2107             MOVS     R1,#+7
   \   0000006A   0x202D             MOVS     R0,#+45
   \   0000006C   0x.... 0x....      BL       LED_PrintChar
   1106          	  LED_PrintChar(100,7, Redge[0]);
   \   00000070   0x....             LDR.N    R0,??DataTable13_23
   \   00000072   0x6802             LDR      R2,[R0, #+0]
   \   00000074   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000076   0x2107             MOVS     R1,#+7
   \   00000078   0x2064             MOVS     R0,#+100
   \   0000007A   0x.... 0x....      BL       LED_PrintChar
   1107          	  
   1108            }
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
   1109          

   \                                 In section .text, align 2, keep-with-next
   1110          void parameter_showH()
   1111            {
   \                     parameter_showH: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1112          	  //LED_PrintChar(0,5, CntH[0]);
   1113          	  LED_PrintChar(45,5, len_showH[0]);
   \   00000002   0x....             LDR.N    R0,??DataTable13_24
   \   00000004   0x7802             LDRB     R2,[R0, #+0]
   \   00000006   0x2105             MOVS     R1,#+5
   \   00000008   0x202D             MOVS     R0,#+45
   \   0000000A   0x.... 0x....      BL       LED_PrintChar
   1114          	  LED_PrintChar(100,5, thresholdH);
   \   0000000E   0x....             LDR.N    R0,??DataTable13_25
   \   00000010   0x6802             LDR      R2,[R0, #+0]
   \   00000012   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000014   0x2105             MOVS     R1,#+5
   \   00000016   0x2064             MOVS     R0,#+100
   \   00000018   0x.... 0x....      BL       LED_PrintChar
   1115          	  
   1116          	  LED_PrintChar(0,6, GrayMinH);
   \   0000001C   0x....             LDR.N    R0,??DataTable13_26
   \   0000001E   0x6802             LDR      R2,[R0, #+0]
   \   00000020   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000022   0x2106             MOVS     R1,#+6
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       LED_PrintChar
   1117          	  //LED_PrintChar(45,6, CNTH[0]);
   1118          	  LED_PrintChar(100,6, GrayMaxH);
   \   0000002A   0x....             LDR.N    R0,??DataTable13_27
   \   0000002C   0x6802             LDR      R2,[R0, #+0]
   \   0000002E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000030   0x2106             MOVS     R1,#+6
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0x.... 0x....      BL       LED_PrintChar
   1119          	  
   1120          	  LED_PrintChar(0,7, LedgeH[0]);
   \   00000038   0x....             LDR.N    R0,??DataTable13_28
   \   0000003A   0x6802             LDR      R2,[R0, #+0]
   \   0000003C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003E   0x2107             MOVS     R1,#+7
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       LED_PrintChar
   1121          	  LED_PrintChar(45,7, midlineH);
   \   00000046   0x....             LDR.N    R0,??DataTable13_29
   \   00000048   0x6802             LDR      R2,[R0, #+0]
   \   0000004A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000004C   0x2107             MOVS     R1,#+7
   \   0000004E   0x202D             MOVS     R0,#+45
   \   00000050   0x.... 0x....      BL       LED_PrintChar
   1122          	  LED_PrintChar(100,7, RedgeH[0]);
   \   00000054   0x....             LDR.N    R0,??DataTable13_30
   \   00000056   0x6802             LDR      R2,[R0, #+0]
   \   00000058   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005A   0x2107             MOVS     R1,#+7
   \   0000005C   0x2064             MOVS     R0,#+100
   \   0000005E   0x.... 0x....      BL       LED_PrintChar
   1123          //	  
   1124            }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
   1125          
   1126          
   1127          
   1128          

   \                                 In section .text, align 2, keep-with-next
   1129          void CCD_Q_show()
   1130          {
   \                     CCD_Q_show: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1131          MAIN_ConvertData(ADV, (byte*)g_aucImageTable); //将数据转换为可以在OLED屏上显示的格式
   \   00000002   0x....             LDR.N    R1,??DataTable13_31
   \   00000004   0x....             LDR.N    R0,??DataTable13_32
   \   00000006   0x.... 0x....      BL       MAIN_ConvertData
   1132          tiaoyan(Ledge[0],Redge[0],L_edgeFlag[0],R_edgeFlag[0],(byte*)g_aucImageTable); //寻找跳沿
   \   0000000A   0x....             LDR.N    R0,??DataTable13_31
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0x....             LDR.N    R0,??DataTable13_33
   \   00000010   0x7803             LDRB     R3,[R0, #+0]
   \   00000012   0x....             LDR.N    R0,??DataTable13_34
   \   00000014   0x7802             LDRB     R2,[R0, #+0]
   \   00000016   0x....             LDR.N    R0,??DataTable13_23
   \   00000018   0x6801             LDR      R1,[R0, #+0]
   \   0000001A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   0x....             LDR.N    R0,??DataTable13_21
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       tiaoyan
   1133          middleline(midline,(byte*)g_aucImageTable); //寻中线
   \   00000026   0x....             LDR.N    R1,??DataTable13_31
   \   00000028   0x....             LDR.N    R0,??DataTable13_22
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       middleline
   1134          thresholdline(threshold,(byte*)g_aucImageTable);
   \   00000032   0x....             LDR.N    R1,??DataTable13_31
   \   00000034   0x....             LDR.N    R0,??DataTable13_17
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       thresholdline
   1135          LED_PrintImage((byte*)g_aucImageTable,64, 128); //在OLED上显示图像波形图 
   \   0000003E   0x2280             MOVS     R2,#+128
   \   00000040   0x2140             MOVS     R1,#+64
   \   00000042   0x....             LDR.N    R0,??DataTable13_31
   \   00000044   0x.... 0x....      BL       LED_PrintImage
   1136          parameter_show(); 
   \   00000048   0x.... 0x....      BL       parameter_show
   1137          }
   \   0000004C   0xBD01             POP      {R0,PC}          ;; return
   1138          

   \                                 In section .text, align 2, keep-with-next
   1139          void CCD_H_show()
   1140          {
   \                     CCD_H_show: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1141          
   1142          MAIN_ConvertData(ADVH, (byte*)g_aucImageTable); //将数据转换为可以在OLED屏上显示的格式
   \   00000002   0x....             LDR.N    R1,??DataTable13_31
   \   00000004   0x....             LDR.N    R0,??DataTable13_35
   \   00000006   0x.... 0x....      BL       MAIN_ConvertData
   1143          tiaoyan(LedgeH[0],RedgeH[0],L_edgeFlagH[0],R_edgeFlagH[0],(byte*)g_aucImageTable); //寻找跳沿
   \   0000000A   0x....             LDR.N    R0,??DataTable13_31
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0x....             LDR.N    R0,??DataTable13_36
   \   00000010   0x7803             LDRB     R3,[R0, #+0]
   \   00000012   0x....             LDR.N    R0,??DataTable13_37
   \   00000014   0x7802             LDRB     R2,[R0, #+0]
   \   00000016   0x....             LDR.N    R0,??DataTable13_30
   \   00000018   0x6801             LDR      R1,[R0, #+0]
   \   0000001A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   0x....             LDR.N    R0,??DataTable13_28
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       tiaoyan
   1144          middleline(midlineH,(byte*)g_aucImageTable); //寻中线
   \   00000026   0x....             LDR.N    R1,??DataTable13_31
   \   00000028   0x....             LDR.N    R0,??DataTable13_29
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       middleline
   1145          thresholdline(thresholdH,(byte*)g_aucImageTable);
   \   00000032   0x....             LDR.N    R1,??DataTable13_31
   \   00000034   0x....             LDR.N    R0,??DataTable13_25
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       thresholdline
   1146          LED_PrintImage((byte*)g_aucImageTable,64, 128); //在OLED上显示图像波形图 	
   \   0000003E   0x2280             MOVS     R2,#+128
   \   00000040   0x2140             MOVS     R1,#+64
   \   00000042   0x....             LDR.N    R0,??DataTable13_31
   \   00000044   0x.... 0x....      BL       LED_PrintImage
   1147          parameter_showH();
   \   00000048   0x.... 0x....      BL       parameter_showH
   1148          }
   \   0000004C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x4004D060         DC32     0x4004d060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x40049038         DC32     0x40049038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x4004D064         DC32     0x4004d064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x40049040         DC32     0x40049040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x400FF114         DC32     0x400ff114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     F14x16_Idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     F14x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     longqiu96x64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     LIBLOGO60x58

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     Threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     len_show

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x........         DC32     threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     GrayMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     CNT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x........         DC32     GrayMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x........         DC32     Ledge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x........         DC32     midline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     Redge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x........         DC32     len_showH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x........         DC32     thresholdH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x........         DC32     GrayMinH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x........         DC32     GrayMaxH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x........         DC32     LedgeH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x........         DC32     midlineH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x........         DC32     RedgeH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x........         DC32     g_aucImageTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x........         DC32     ADV

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x........         DC32     R_edgeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x........         DC32     L_edgeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_35:
   \   00000000   0x........         DC32     ADVH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_36:
   \   00000000   0x........         DC32     R_edgeFlagH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_37:
   \   00000000   0x........         DC32     L_edgeFlagH

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CCD_H_show
         8   -> LED_PrintImage
         8   -> MAIN_ConvertData
         8   -> middleline
         8   -> parameter_showH
         8   -> thresholdline
         8   -> tiaoyan
       8   CCD_Q_show
         8   -> LED_PrintImage
         8   -> MAIN_ConvertData
         8   -> middleline
         8   -> parameter_show
         8   -> thresholdline
         8   -> tiaoyan
      32   Draw_BMP
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      16   Draw_LQLogo
        16   -> LCD_Set_Pos
        16   -> LCD_WrDat
      16   Draw_LibLogo
        16   -> LCD_Set_Pos
        16   -> LCD_WrDat
      16   LCD_CLS
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       0   LCD_DLY_ms
      16   LCD_Fill
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       8   LCD_Init_Oled
         8   -> LCD_DLY_ms
         8   -> LCD_Fill
         8   -> LCD_Set_Pos
         8   -> LCD_WrCmd
      32   LCD_P14x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P6x8Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      24   LCD_Print
        24   -> LCD_P14x16Str
        24   -> LCD_P8x16Str
      16   LCD_PutPixel
        16   -> LCD_Set_Pos
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      32   LCD_Rectangle
        32   -> LCD_DLY_ms
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
       8   LCD_Set_Pos
         8   -> LCD_WrCmd
       0   LCD_WrCmd
       0   LCD_WrDat
      16   LED_P6x8Char
        16   -> LCD_Set_Pos
        16   -> LCD_WrDat
      24   LED_PrintChar
        24   -> LED_P6x8Char
      32   LED_PrintImage
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
     144   MAIN_ConvertData
       144   -> __aeabi_memset
       4   middleline
       8   parameter_show
         8   -> LED_PrintChar
       8   parameter_showH
         8   -> LED_PrintChar
       4   thresholdline
       8   tiaoyan


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_35
       4  ??DataTable13_36
       4  ??DataTable13_37
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
      78  CCD_H_show
      78  CCD_Q_show
     118  Draw_BMP
      54  Draw_LQLogo
      54  Draw_LibLogo
     700  F14x16
      52  F14x16_Idx
     552  F6x8
    1520  F8X16
      56  LCD_CLS
      26  LCD_DLY_ms
      60  LCD_Fill
     300  LCD_Init_Oled
     338  LCD_P14x16Str
     122  LCD_P6x8Str
     168  LCD_P8x16Str
     106  LCD_Print
      80  LCD_PutPixel
     152  LCD_Rectangle
      44  LCD_Set_Pos
     122  LCD_WrCmd
     126  LCD_WrDat
      56  LED_P6x8Char
     106  LED_PrintChar
     230  LED_PrintImage
     480  LIBLOGO60x58
      96  MAIN_ConvertData
       4  Threshold
     768  longqiu96x64
      54  middleline
     128  parameter_show
     100  parameter_showH
     112  thresholdline
     156  tiaoyan

 
     4 bytes in section .bss
   768 bytes in section .data
 3 304 bytes in section .rodata
 3 272 bytes in section .text
 
 3 272 bytes of CODE  memory
 3 304 bytes of CONST memory
   772 bytes of DATA  memory

Errors: none
Warnings: 1
