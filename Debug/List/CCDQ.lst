###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        26/May/2016  12:04:47
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\ye\Desktop\NFS.NO 2 - 副本\common\CCDQ.c
#    Command line =  
#        "C:\Users\ye\Desktop\NFS.NO 2 - 副本\common\CCDQ.c" -D DEBUG -lCN
#        "C:\Users\ye\Desktop\NFS.NO 2 - 副本\Debug\List\" -lB
#        "C:\Users\ye\Desktop\NFS.NO 2 - 副本\Debug\List\" -o
#        "C:\Users\ye\Desktop\NFS.NO 2 - 副本\Debug\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -Ol --use_c++_inline
#    List file    =  C:\Users\ye\Desktop\NFS.NO 2 - 副本\Debug\List\CCDQ.lst
#    Object file  =  C:\Users\ye\Desktop\NFS.NO 2 - 副本\Debug\Obj\CCDQ.o
#
###############################################################################

C:\Users\ye\Desktop\NFS.NO 2 - 副本\common\CCDQ.c
      1          #include "CCDQ.h"
      2          
      3          
      4          

   \                                 In section .bss, align 4
      5          int CCD_Q;
   \                     CCD_Q:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      6          int CCD_H;
   \                     CCD_H:
   \   00000000                      DS8 4
      7          
      8          

   \                                 In section .bss, align 4
      9          int BlocklEN ;
   \                     BlocklEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          int BlockrEN ;
   \                     BlockrEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     11          int ElbowbendrEN;
   \                     ElbowbendrEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     12          int ElbowbendlEN;
   \                     ElbowbendlEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     13          int RampEN;
   \                     RampEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          int ProtectEN;
   \                     ProtectEN:
   \   00000000                      DS8 4
     15          

   \                                 In section .bss, align 4
     16          int SteerEssEN;
   \                     SteerEssEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          int SpeedextraEN;
   \                     SpeedextraEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          int SinglineEN;
   \                     SinglineEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          int OledShowEN;
   \                     OledShowEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          int BmaEN;
   \                     BmaEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          int WhiteEN;
   \                     WhiteEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          int LighthouseEN;
   \                     LighthouseEN:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          int BlackflagEN;
   \                     BlackflagEN:
   \   00000000                      DS8 4
     24          ////////////////////////////////////////////////////////////////////////////////////
     25          
     26          
     27          

   \                                 In section .bss, align 4
     28          int weight[4]={0,0,0,0};
   \                     weight:
   \   00000000                      DS8 16

   \                                 In section .data, align 4
     29          int Xcal_L=15;              //起始搜索范围  左  0-160
   \                     Xcal_L:
   \   00000000   0x0000000F         DC32 15

   \                                 In section .data, align 4
     30          int Xcal_R=113;              //起始搜索范围  右  0-160
   \                     Xcal_R:
   \   00000000   0x00000071         DC32 113
     31          

   \                                 In section .bss, align 4
     32          int Elbowbendflag=0;
   \                     Elbowbendflag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     33          int Elbowbendflagl=0;
   \                     Elbowbendflagl:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     34          int Elbowbendflagr=0;
   \                     Elbowbendflagr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     35          int Blackflag=0;
   \                     Blackflag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     36          int BlackFlagcnt=0;
   \                     BlackFlagcnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     37          int Blackflagr=0;
   \                     Blackflagr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     38          int Blackflagl=0;
   \                     Blackflagl:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     39          int BlackFlag=0;
   \                     BlackFlag:
   \   00000000                      DS8 4
     40          

   \                                 In section .bss, align 4
     41          int SingleFlag=0;
   \                     SingleFlag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     42          int Blockflag=0;
   \                     Blockflag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     43          int BlockFlag=0;
   \                     BlockFlag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     44          int Blockflagr=0;
   \                     Blockflagr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     45          int BlockL=0;
   \                     BlockL:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     46          int Blockflagl=0;
   \                     Blockflagl:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     47          int BlockR=0;
   \                     BlockR:
   \   00000000                      DS8 4
     48          

   \                                 In section .bss, align 4
     49          int straight;
   \                     straight:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     50          int Straight=0;
   \                     Straight:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     51          int straightflag;
   \                     straightflag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     52          int straightFlag[10];    
   \                     straightFlag:
   \   00000000                      DS8 40
     53          

   \                                 In section .bss, align 4
     54          int X[10];
   \                     X:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     55          int GrayMin;
   \                     GrayMin:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     56          int GrayMIN[20];
   \                     GrayMIN:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
     57          int startr;
   \                     startr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     58          int startl;
   \                     startl:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     59          int Startr[10]={30,30,30,30,30,30,30,30};
   \                     Startr:
   \   00000000   0x0000001E         DC32 30, 30, 30, 30, 30, 30, 30, 30, 0, 0
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .data, align 4
     60          int Startl[10]={30,30,30,30,30,30,30,30};
   \                     Startl:
   \   00000000   0x0000001E         DC32 30, 30, 30, 30, 30, 30, 30, 30, 0, 0
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x0000001E   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .bss, align 4
     61          int cnt=0;
   \                     cnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     62          int Cnt[10];
   \                     Cnt:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     63          int CNT[200];
   \                     CNT:
   \   00000000                      DS8 800

   \                                 In section .bss, align 4
     64          int YZ;
   \                     YZ:
   \   00000000                      DS8 4
     65          

   \                                 In section .bss, align 1
     66          byte GraydownR;         //右灰度沿降
   \                     GraydownR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     67          byte GraydownR1;
   \                     GraydownR1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     68          byte LGrayMaxr;         //上一时刻的左灰度最大值
   \                     LGrayMaxr:
   \   00000000                      DS8 1
     69          

   \                                 In section .bss, align 1
     70          byte GraydownL;         //左灰度沿降 
   \                     GraydownL:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     71          byte GraydownL1; 
   \                     GraydownL1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     72          byte LGrayMaxl;         //上一时刻的左灰度最大值
   \                     LGrayMaxl:
   \   00000000                      DS8 1
     73          
     74          
     75          

   \                                 In section .bss, align 4
     76          int startflag=0;
   \                     startflag:
   \   00000000                      DS8 4
     77          

   \                                 In section .bss, align 4
     78          int End=0;
   \                     End:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     79          int GrayMax=0;
   \                     GrayMax:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     80          int GrayMAX[20];
   \                     GrayMAX:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
     81          int LGrayMax=0;
   \                     LGrayMax:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     82          int singleflag=0;
   \                     singleflag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     83          int single=0;
   \                     single:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     84          int singleL;
   \                     singleL:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     85          int singleR;
   \                     singleR:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     86          int singleflag1=0; 
   \                     singleflag1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     87          int singleflag2=0; 
   \                     singleflag2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     88          int Midline=70; 
   \                     Midline:
   \   00000000   0x00000046         DC32 70

   \                                 In section .bss, align 4
     89          int ctt=0;
   \                     ctt:
   \   00000000                      DS8 4
     90          
     91          
     92          //float X_Correct[50]={
     93          //                   0.02,0.04,0.06,0.08,0.10,
     94          //                   0.12,0.14,0.16,0.18,0.20,
     95          //                   0.22,0.24,0.26,0.28,0.30,
     96          //                   0.32,0.34,0.36,0.38,0.40,
     97          //                   0.42,0.44,0.46,0.48,0.50,
     98          //                   0.52,0.54,0.56,0.58,0.60,
     99          //                   0.62,0.64,0.66,0.68,0.70,
    100          //                   0.72,0.74,0.76,0.78,0.80,
    101          //                   0.82,0.84,0.86,0.88,0.90,
    102          //                   0.92,0.94,0.96,0.98,1.00
    103          //                   };
    104          
    105          //float X_Correct[60]={
    106          //                   1.00,1.00,1.00,1.00,1.00,
    107          //                   1.10,1.10,1.10,1.10,1.10,
    108          //                   1.15,1.15,1.15,1.15,1.15,
    109          //                   1.20,1.20,1.20,1.20,1.20,
    110          //                   1.25,1.25,1.25,1.25,1.25,
    111          //                   1.30,1.30,1.30,1.30,1.30,
    112          //                   1.35,1.35,1.35,1.35,1.35,
    113          //                   1.40,1.40,1.40,1.40,1.40,
    114          //                   1.45,1.45,1.45,1.45,1.45,
    115          //                   1.50,1.50,1.50,1.50,1.50,
    116          //                   };
    117          

   \                                 In section .data, align 4
    118          float X_Correct[60]={
   \                     X_Correct:
   \   00000000   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   00000018   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   00000030   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   00000048   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   00000060   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   00000078   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   00000090   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   000000A8   0x3F800000         DC32 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H, 3F800000H
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \              0x3F800000   
   \   000000C0   0x3F800000         DC32 3F800000H, 3F800000H
   \              0x3F800000   
   \   000000C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    119          1.00,1.00,1.00,1.00,1.00,
    120          1.00,1.00,1.00,1.00,1.00,
    121          1.00,1.00,1.00,1.00,1.00,
    122          1.00,1.00,1.00,1.00,1.00,
    123          1.00,1.00,1.00,1.00,1.00,
    124          1.00,1.00,1.00,1.00,1.00,
    125          1.00,1.00,1.00,1.00,1.00,
    126          1.00,1.00,1.00,1.00,1.00,
    127          1.00,1.00,1.00,1.00,1.00,
    128          1.00,1.00,1.00,1.00,1.00,
    129          };
    130          
    131          

   \                                 In section .bss, align 4
    132          long Turn_Kp_N = 0;
   \                     Turn_Kp_N:
   \   00000000                      DS8 4
    133          
    134          
    135          

   \                                 In section .data, align 4
    136          float Kp_Ess[4]={0.4,0.3,0.2,0.1};
   \                     Kp_Ess:
   \   00000000   0x3ECCCCCD         DC32 3ECCCCCDH, 3E99999AH, 3E4CCCCDH, 3DCCCCCDH
   \              0x3E99999A   
   \              0x3E4CCCCD   
   \              0x3DCCCCCD   
    137          

   \                                 In section .bss, align 4
    138          int i,j,f;    
   \                     i:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     j:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     f:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    139          byte ADV[128]={0,0};
   \                     ADV:
   \   00000000                      DS8 128

   \                                 In section .data, align 4
    140          byte save_midline[10]={63,63,63,63,63,63,63,63,63,63};
   \                     save_midline:
   \   00000000   0x3F 0x3F          DC8 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 0, 0
   \              0x3F 0x3F    
   \              0x3F 0x3F    
   \              0x3F 0x3F    
   \              0x3F 0x3F    
   \              0x00 0x00    

   \                                 In section .bss, align 4
    141          float ess=0;
   \                     ess:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    142          int Ess[10];
   \                     Ess:
   \   00000000                      DS8 40
    143          
    144          

   \                                 In section .data, align 4
    145          byte L_edgeFlag[30]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
   \                     L_edgeFlag:
   \   00000000   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .data, align 4
    146          byte R_edgeFlag[30]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
   \                     R_edgeFlag:
   \   00000000   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    147          

   \                                 In section .data, align 4
    148          int Ledge[30]={34,34,34,34,34,34,34,34,34,34,34,34,34,34,34};
   \                     Ledge:
   \   00000000   0x00000022         DC32 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 0, 0
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000022   
   \              0x00000000   
   \              0x00000000   
   \   00000044   0x00000000         DC32 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .data, align 4
    149          int Redge[30]={94,94,94,94,94,94,94,94,94,94,94,94,94,94,94};
   \                     Redge:
   \   00000000   0x0000005E         DC32 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 0, 0
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x0000005E   
   \              0x00000000   
   \              0x00000000   
   \   00000044   0x00000000         DC32 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .data, align 4
    150          int LEDGE=30;
   \                     LEDGE:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .data, align 4
    151          int REDGE=100;
   \                     REDGE:
   \   00000000   0x00000064         DC32 100

   \                                 In section .bss, align 4
    152          int yanLL;
   \                     yanLL:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    153          int yanRR;
   \                     yanRR:
   \   00000000                      DS8 4
    154          
    155          
    156          
    157          

   \                                 In section .bss, align 4
    158          word Add_threshold;     //灰度值和
   \                     Add_threshold:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    159          int threshold;         //阈值
   \                     threshold:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    160          int Lthreshold;
   \                     Lthreshold:
   \   00000000                      DS8 4
    161          
    162          
    163          
    164          
    165          

   \                                 In section .text, align 2, keep-with-next
    166          void firstshot()
    167          {
   \                     firstshot: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    168          //单次采集曝光处理                   
    169          GPIOC_PDOR |=  (1<<9);//TSL_SI=1; //上升沿
   \   00000002   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x7000      ORRS     R0,R0,#0x200
   \   0000000A   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    170          delay();  
   \   0000000E   0x.... 0x....      BL       delay
    171          GPIOC_PDOR |=  (1<<8);//TSL_CLK=1;//起始电平高
   \   00000012   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000001A   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    172          //delay();
    173          GPIOC_PDOR &= ~(1<<9);//TSL_SI=0; //起始电平低
   \   0000001E   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF430 0x7000      BICS     R0,R0,#0x200
   \   00000026   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000028   0x6008             STR      R0,[R1, #+0]
    174          //发送第1个CLK
    175          delay();
   \   0000002A   0x.... 0x....      BL       delay
    176          GPIOC_PDOR &= ~(1<<8);//TSL_CLK=0;//下降沿  
   \   0000002E   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF430 0x7080      BICS     R0,R0,#0x100
   \   00000036   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000038   0x6008             STR      R0,[R1, #+0]
    177          
    178          //发送第2~129个CLK
    179          for(i=1; i<129; i++)
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x....             LDR.N    R1,??DataTable1_1
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0xE014             B.N      ??firstshot_0
    180          {
    181          delay();
   \                     ??firstshot_1: (+1)
   \   00000042   0x.... 0x....      BL       delay
    182          GPIOC_PDOR |=  (1<<8);//TSL_CLK=1;//起始电平高
   \   00000046   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000004E   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000050   0x6008             STR      R0,[R1, #+0]
    183          delay(); 
   \   00000052   0x.... 0x....      BL       delay
    184          GPIOC_PDOR &= ~(1<<8);//TSL_CLK=0;//下降沿  
   \   00000056   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF430 0x7080      BICS     R0,R0,#0x100
   \   0000005E   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000060   0x6008             STR      R0,[R1, #+0]
    185          }
   \   00000062   0x....             LDR.N    R0,??DataTable1_1
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x1C40             ADDS     R0,R0,#+1
   \   00000068   0x....             LDR.N    R1,??DataTable1_1
   \   0000006A   0x6008             STR      R0,[R1, #+0]
   \                     ??firstshot_0: (+1)
   \   0000006C   0x....             LDR.N    R0,??DataTable1_1
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x2881             CMP      R0,#+129
   \   00000072   0xDBE6             BLT.N    ??firstshot_1
    186          FieldCnt++;
   \   00000074   0x....             LDR.N    R0,??DataTable1_2
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x....             LDR.N    R1,??DataTable1_2
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    187          }
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
    188          
    189          
    190          //*************************************************************************
    191          //  * 单次采集
    192          //************************************************

   \                                 In section .text, align 2, keep-with-next
    193          void TSL1401_GetLine_Oneshot(uint8 *pixel)
    194          {
   \                     TSL1401_GetLine_Oneshot: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    195          uint8 i;
    196          //  byte  Er;
    197          byte  po;
    198          //曝光延时
    199          //采集上次曝光得到的图像
    200          //开始SI
    201          GPIOC_PDOR |=  (1<<9);//TSL_SI=1; //上升沿
   \   00000004   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x7000      ORRS     R0,R0,#0x200
   \   0000000C   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    202          delay();
   \   00000010   0x.... 0x....      BL       delay
    203          GPIOC_PDOR |=  (1<<8);//TSL_CLK=1;//起始电平高
   \   00000014   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000001C   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    204          //delay();
    205          GPIOC_PDOR &= ~(1<<9);//TSL_SI=0; //起始电平低      ADV
   \   00000020   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF430 0x7000      BICS     R0,R0,#0x200
   \   00000028   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    206          //delay();
    207          //采集第1个点
    208          
    209          for(f=0;f<500;f++)
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable1_3
   \   00000030   0x6008             STR      R0,[R1, #+0]
   \   00000032   0xE006             B.N      ??TSL1401_GetLine_Oneshot_0
    210          { delay();}   
   \                     ??TSL1401_GetLine_Oneshot_1: (+1)
   \   00000034   0x.... 0x....      BL       delay
   \   00000038   0x....             LDR.N    R0,??DataTable1_3
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x1C40             ADDS     R0,R0,#+1
   \   0000003E   0x....             LDR.N    R1,??DataTable1_3
   \   00000040   0x6008             STR      R0,[R1, #+0]
   \                     ??TSL1401_GetLine_Oneshot_0: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable1_3
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000004A   0xDBF3             BLT.N    ??TSL1401_GetLine_Oneshot_1
    211          
    212          //       po = ad_once(1,15,8);  
    213          po = ad_once(1,17,8);                                  //AD赋值
   \   0000004C   0x2208             MOVS     R2,#+8
   \   0000004E   0x2111             MOVS     R1,#+17
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      BL       ad_once
    214          //  pixel[0] =po<<2;
    215          pixel[0] = po ;
   \   00000056   0x7020             STRB     R0,[R4, #+0]
    216          // Er    =   PTA12;
    217          // pixel[0]  =  Er ;
    218          //   pixel[0] =  PTA12;
    219          GPIOC_PDOR &= ~(1<<8);//TSL_CLK=0;//下降沿  
   \   00000058   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF430 0x7080      BICS     R0,R0,#0x100
   \   00000060   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000062   0x6008             STR      R0,[R1, #+0]
    220          //采集第1~128个点
    221          for(i=1; i<128; i++)
   \   00000064   0x2501             MOVS     R5,#+1
   \   00000066   0xE015             B.N      ??TSL1401_GetLine_Oneshot_2
    222          { 
    223          //delay(); 
    224          delay();
   \                     ??TSL1401_GetLine_Oneshot_3: (+1)
   \   00000068   0x.... 0x....      BL       delay
    225          GPIOC_PDOR |=  (1<<8);    //TSL_CLK=1;//起始电平高
   \   0000006C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000074   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000076   0x6008             STR      R0,[R1, #+0]
    226          po = ad_once(1,17,8);                             //AD赋值
   \   00000078   0x2208             MOVS     R2,#+8
   \   0000007A   0x2111             MOVS     R1,#+17
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      BL       ad_once
    227          //  pixel[i] = po<<2 ;
    228          pixel[i] =  po;
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0x5528             STRB     R0,[R5, R4]
    229          // Er  = PTA12;
    230          //   pixel[i] = Er;
    231          //   pixel[i] = PTA12;
    232          
    233          GPIOC_PDOR &= ~(1<<8);//TSL_CLK=0;//下降沿  
   \   00000086   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0xF430 0x7080      BICS     R0,R0,#0x100
   \   0000008E   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   00000090   0x6008             STR      R0,[R1, #+0]
    234          }
   \   00000092   0x1C6D             ADDS     R5,R5,#+1
   \                     ??TSL1401_GetLine_Oneshot_2: (+1)
   \   00000094   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000096   0x2D80             CMP      R5,#+128
   \   00000098   0xDBE6             BLT.N    ??TSL1401_GetLine_Oneshot_3
    235          //发送第129个clk
    236          delay();
   \   0000009A   0x.... 0x....      BL       delay
    237          GPIOC_PDOR &= ~(1<<8);//TSL_CLK=0;//下降沿  
   \   0000009E   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF430 0x7080      BICS     R0,R0,#0x100
   \   000000A6   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    238          delay(); 
   \   000000AA   0x.... 0x....      BL       delay
    239          GPIOC_PDOR |=  (1<<8);//TSL_CLK=1;//起始电平高
   \   000000AE   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000B6   0x....             LDR.N    R1,??DataTable1  ;; 0x400ff080
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    240          delay();
   \   000000BA   0x.... 0x....      BL       delay
    241          }
   \   000000BE   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    242          
    243          
    244          

   \                                 In section .bss, align 4
    245          int GrayMinl;          //左灰度最小值，初始化为255 
   \                     GrayMinl:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    246          int GrayMaxl;          //左灰度最大值，初始化为0
   \                     GrayMaxl:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    247          word GrayMinPtrL;       //左灰度最小值指针，初始化为0
   \                     GrayMinPtrL:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    248          word GrayMaxPtrL;       //左灰度最大值指针，初始化为0
   \                     GrayMaxPtrL:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    249          byte GrayMaxMinflagL;   //左灰度最大最小值标志
   \                     GrayMaxMinflagL:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    250          byte GrayMinr;          //右灰度最小值，初始化为255
   \                     GrayMinr:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    251          byte GrayMaxr;          //右灰度最大值，初始化为0
   \                     GrayMaxr:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    252          word GrayMinPtrR;       //右灰度最小值指针，初始化为0
   \                     GrayMinPtrR:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    253          word GrayMaxPtrR;       //右灰度最大值指针，初始化为0      
   \                     GrayMaxPtrR:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    254          byte GrayMaxMinflagR;   //右灰度最大最小值标志      
   \                     GrayMaxMinflagR:
   \   00000000                      DS8 1
    255          

   \                                 In section .bss, align 1
    256          byte error_flag=0;
   \                     error_flag:
   \   00000000                      DS8 1
    257          

   \                                 In section .data, align 4
    258          byte len_show[10]={80,80,80,80,80};
   \                     len_show:
   \   00000000   0x50 0x50          DC8 80, 80, 80, 80, 80, 0, 0, 0, 0, 0, 0, 0
   \              0x50 0x50    
   \              0x50 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .bss, align 4
    259          long  len_realsum=0;
   \                     len_realsum:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    260          long  len_real=0; 
   \                     len_real:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    261          int  len_realcnt;
   \                     len_realcnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    262          int dir_error=0;
   \                     dir_error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    263          int issue_threshold;
   \                     issue_threshold:
   \   00000000                      DS8 4
    264          

   \                                 In section .bss, align 4
    265          int aa[5]={0,0,0,0,0};
   \                     aa:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
    266          int barrier_dss;
   \                     barrier_dss:
   \   00000000                      DS8 4
    267          

   \                                 In section .bss, align 1
    268          byte GrayleftedgeL;
   \                     GrayleftedgeL:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    269          byte GrayleftedgeR;
   \                     GrayleftedgeR:
   \   00000000                      DS8 1
    270          
    271          
    272          
    273          
    274          
    275          
    276          

   \                                 In section .text, align 2, keep-with-next
    277          void Dev_cal()
    278          {
    279          
    280          cnt=0;
   \                     Dev_cal: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000006   0x6008             STR      R0,[R1, #+0]
    281          Add_threshold=0;     //清阈值和  
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    282          
    283          //****************************************************************************************
    284          // 计算动态阈值
    285          //****************************************************************************************CNT        
    286          i=0;  
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000016   0x6008             STR      R0,[R1, #+0]
    287          for(j=10;j<=118;j++)
   \   00000018   0x200A             MOVS     R0,#+10
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   \   00000020   0xE035             B.N      ??Dev_cal_0
    288          {
    289          Add_threshold += ADV[j];      
   \                     ??Dev_cal_1: (+1)
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000030   0x6812             LDR      R2,[R2, #+0]
   \   00000032   0x5C51             LDRB     R1,[R2, R1]
   \   00000034   0x1840             ADDS     R0,R0,R1
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    290          if(ADV[j]>LGrayMax-5)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x1F40             SUBS     R0,R0,#+5
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000004C   0x6812             LDR      R2,[R2, #+0]
   \   0000004E   0x5C51             LDRB     R1,[R2, R1]
   \   00000050   0x4288             CMP      R0,R1
   \   00000052   0xDA06             BGE.N    ??Dev_cal_2
    291          cnt++; 
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x1C40             ADDS     R0,R0,#+1
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000060   0x6008             STR      R0,[R1, #+0]
    292          if(ADV[j]>220)
   \                     ??Dev_cal_2: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000006A   0x6809             LDR      R1,[R1, #+0]
   \   0000006C   0x5C08             LDRB     R0,[R1, R0]
   \   0000006E   0x28DD             CMP      R0,#+221
   \   00000070   0xDB06             BLT.N    ??Dev_cal_3
    293          i++;
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    294          }
   \                     ??Dev_cal_3: (+1)
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x1C40             ADDS     R0,R0,#+1
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000008C   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_0: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x2877             CMP      R0,#+119
   \   00000096   0xDBC4             BLT.N    ??Dev_cal_1
    295          Cnt[0]=cnt;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable2
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   000000A2   0x6008             STR      R0,[R1, #+0]
    296          CNT[0]=i;
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable2_7
   \   000000AE   0x6008             STR      R0,[R1, #+0]
    297          
    298          threshold = Add_threshold/109;    //计算阈值
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0x216D             MOVS     R1,#+109
   \   000000B8   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable2_8
   \   000000C0   0x6008             STR      R0,[R1, #+0]
    299          
    300          THreshold[0] = threshold;
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable2_9
   \   000000CC   0x6008             STR      R0,[R1, #+0]
    301          
    302          
    303          Stopflag=0;
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable2_10
   \   000000D4   0x6008             STR      R0,[R1, #+0]
    304          
    305          for(i=0;i<119;i++)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000000DC   0x6008             STR      R0,[R1, #+0]
   \   000000DE   0xE00D             B.N      ??Dev_cal_4
    306          {
    307          if((L_edgeFlag[0]+R_edgeFlag[0]==0))
    308          {
    309          Stopflag++;      
   \                     ??Dev_cal_5: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable2_10
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x1C40             ADDS     R0,R0,#+1
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable2_10
   \   000000EC   0x6008             STR      R0,[R1, #+0]
    310          }
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x1C40             ADDS     R0,R0,#+1
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000000FA   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_4: (+1)
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x2877             CMP      R0,#+119
   \   00000104   0xDA08             BGE.N    ??Dev_cal_6
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable2_11
   \   0000010A   0x7800             LDRB     R0,[R0, #+0]
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable2_12
   \   00000110   0x7809             LDRB     R1,[R1, #+0]
   \   00000112   0x1808             ADDS     R0,R1,R0
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD0E3             BEQ.N    ??Dev_cal_5
    311          else
    312          {
    313          break;
    314          }  
    315          }
    316          
    317          
    318          
    319          
    320          
    321          ///*   
    322          
    323          //    /****************************中值滤波提取黑线最黑值,作为假设的黑线位置****************************************      
    324          
    325          
    326          GrayMin=255;
   \                     ??Dev_cal_6: (+1)
   \   00000118   0x20FF             MOVS     R0,#+255
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   0000011E   0x6008             STR      R0,[R1, #+0]
    327          GrayMax=0; 
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable2_14
   \   00000126   0x6008             STR      R0,[R1, #+0]
    328          
    329          
    330          
    331          for(i=10;i<117;i++)
   \   00000128   0x200A             MOVS     R0,#+10
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000012E   0x6008             STR      R0,[R1, #+0]
   \   00000130   0xE038             B.N      ??Dev_cal_7
    332          {
    333          
    334          
    335          if(ADV[i]<GrayMin)
    336          {
    337          if(ADV[i-1]>ADV[i+1])
    338          {
    339          if(ADV[i]>ADV[i-1])
    340          {
    341          ADV[i]=ADV[i-1];
    342          }
    343          else if(ADV[i]<ADV[i+1])
    344          {                                                     
    345          ADV[i]=ADV[i+1];
    346          }
    347          }
    348          else
    349          {
    350          if(ADV[i]>ADV[i+1])
    351          {
    352          ADV[i]=ADV[i+1];
    353          }
    354          else if(ADV[i]<ADV[i-1])
    355          {
    356          ADV[i]=ADV[i-1];
    357          }
    358          }
    359          if(ADV[i]<GrayMin)
    360          {
    361          GrayMin = ADV[i];                    
    362          
    363          }
    364          }
    365          ///********************************中值滤波，提取赛道中的最白处*************************************************          
    366          if(ADV[i]>GrayMax)
    367          {
    368          if(ADV[i-1]>ADV[i+1])
    369          {
    370          if(ADV[i]>ADV[i-1])
    371          {
    372          ADV[i]=ADV[i-1];
    373          }
    374          else if(ADV[i]<ADV[i+1])
    375          {
    376          ADV[i]=ADV[i+1];
    377          }
    378          }
    379          else
    380          {
    381          if(ADV[i]>ADV[i+1])
    382          {
    383          ADV[i]=ADV[i+1];
    384          }
    385          else if(ADV[i]<ADV[i-1])
   \                     ??Dev_cal_8: (+1)
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000013A   0x6809             LDR      R1,[R1, #+0]
   \   0000013C   0x5C08             LDRB     R0,[R1, R0]
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000142   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000146   0x6812             LDR      R2,[R2, #+0]
   \   00000148   0x1851             ADDS     R1,R2,R1
   \   0000014A   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000014E   0x4288             CMP      R0,R1
   \   00000150   0xD20D             BCS.N    ??Dev_cal_9
    386          {
    387          ADV[i]=ADV[i-1];
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000015A   0x6809             LDR      R1,[R1, #+0]
   \   0000015C   0x1808             ADDS     R0,R1,R0
   \   0000015E   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000166   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000016A   0x6812             LDR      R2,[R2, #+0]
   \   0000016C   0x5450             STRB     R0,[R2, R1]
    388          }
    389          }
    390          if(ADV[i]>GrayMax)
   \                     ??Dev_cal_9: (+1)
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable2_14
   \   00000172   0x6800             LDR      R0,[R0, #+0]
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000178   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000017C   0x6812             LDR      R2,[R2, #+0]
   \   0000017E   0x5C51             LDRB     R1,[R2, R1]
   \   00000180   0x4288             CMP      R0,R1
   \   00000182   0xDA08             BGE.N    ??Dev_cal_10
    391          {
    392          GrayMax=ADV[i];
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000018C   0x6809             LDR      R1,[R1, #+0]
   \   0000018E   0x5C08             LDRB     R0,[R1, R0]
   \   00000190   0x.... 0x....      LDR.W    R1,??DataTable2_14
   \   00000194   0x6008             STR      R0,[R1, #+0]
    393          // GrayMaxPtr = i;
    394          }
   \                     ??Dev_cal_10: (+1)
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   0000019A   0x6800             LDR      R0,[R0, #+0]
   \   0000019C   0x1C40             ADDS     R0,R0,#+1
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000001A2   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_7: (+1)
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000001A8   0x6800             LDR      R0,[R0, #+0]
   \   000001AA   0x2875             CMP      R0,#+117
   \   000001AC   0xF280 0x8120      BGE.W    ??Dev_cal_11
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000001B4   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000001B8   0x6809             LDR      R1,[R1, #+0]
   \   000001BA   0x5C08             LDRB     R0,[R1, R0]
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000001C0   0x6809             LDR      R1,[R1, #+0]
   \   000001C2   0x4288             CMP      R0,R1
   \   000001C4   0xF280 0x809C      BGE.W    ??Dev_cal_12
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000001CC   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000001D0   0x6809             LDR      R1,[R1, #+0]
   \   000001D2   0x1808             ADDS     R0,R1,R0
   \   000001D4   0x7840             LDRB     R0,[R0, #+1]
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000001DA   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000001DE   0x6812             LDR      R2,[R2, #+0]
   \   000001E0   0x1851             ADDS     R1,R2,R1
   \   000001E2   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000001E6   0x4288             CMP      R0,R1
   \   000001E8   0xD23B             BCS.N    ??Dev_cal_13
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000001EE   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000001F2   0x6809             LDR      R1,[R1, #+0]
   \   000001F4   0x1808             ADDS     R0,R1,R0
   \   000001F6   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000001FE   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000202   0x6812             LDR      R2,[R2, #+0]
   \   00000204   0x5C51             LDRB     R1,[R2, R1]
   \   00000206   0x4288             CMP      R0,R1
   \   00000208   0xD20E             BCS.N    ??Dev_cal_14
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000212   0x6809             LDR      R1,[R1, #+0]
   \   00000214   0x1808             ADDS     R0,R1,R0
   \   00000216   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000021A   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000021E   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000222   0x6812             LDR      R2,[R2, #+0]
   \   00000224   0x5450             STRB     R0,[R2, R1]
   \   00000226   0xE057             B.N      ??Dev_cal_15
   \                     ??Dev_cal_14: (+1)
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000230   0x6809             LDR      R1,[R1, #+0]
   \   00000232   0x5C08             LDRB     R0,[R1, R0]
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000238   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000023C   0x6812             LDR      R2,[R2, #+0]
   \   0000023E   0x1851             ADDS     R1,R2,R1
   \   00000240   0x7849             LDRB     R1,[R1, #+1]
   \   00000242   0x4288             CMP      R0,R1
   \   00000244   0xD248             BCS.N    ??Dev_cal_15
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000024A   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000024E   0x6809             LDR      R1,[R1, #+0]
   \   00000250   0x1808             ADDS     R0,R1,R0
   \   00000252   0x7840             LDRB     R0,[R0, #+1]
   \   00000254   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000258   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000025C   0x6812             LDR      R2,[R2, #+0]
   \   0000025E   0x5450             STRB     R0,[R2, R1]
   \   00000260   0xE03A             B.N      ??Dev_cal_15
   \                     ??Dev_cal_13: (+1)
   \   00000262   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000026A   0x6809             LDR      R1,[R1, #+0]
   \   0000026C   0x1808             ADDS     R0,R1,R0
   \   0000026E   0x7840             LDRB     R0,[R0, #+1]
   \   00000270   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000274   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000278   0x6812             LDR      R2,[R2, #+0]
   \   0000027A   0x5C51             LDRB     R1,[R2, R1]
   \   0000027C   0x4288             CMP      R0,R1
   \   0000027E   0xD20D             BCS.N    ??Dev_cal_16
   \   00000280   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000284   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000288   0x6809             LDR      R1,[R1, #+0]
   \   0000028A   0x1808             ADDS     R0,R1,R0
   \   0000028C   0x7840             LDRB     R0,[R0, #+1]
   \   0000028E   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000292   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000296   0x6812             LDR      R2,[R2, #+0]
   \   00000298   0x5450             STRB     R0,[R2, R1]
   \   0000029A   0xE01D             B.N      ??Dev_cal_15
   \                     ??Dev_cal_16: (+1)
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000002A0   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000002A4   0x6809             LDR      R1,[R1, #+0]
   \   000002A6   0x5C08             LDRB     R0,[R1, R0]
   \   000002A8   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000002AC   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000002B0   0x6812             LDR      R2,[R2, #+0]
   \   000002B2   0x1851             ADDS     R1,R2,R1
   \   000002B4   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000002B8   0x4288             CMP      R0,R1
   \   000002BA   0xD20D             BCS.N    ??Dev_cal_15
   \   000002BC   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000002C0   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000002C4   0x6809             LDR      R1,[R1, #+0]
   \   000002C6   0x1808             ADDS     R0,R1,R0
   \   000002C8   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000002D0   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000002D4   0x6812             LDR      R2,[R2, #+0]
   \   000002D6   0x5450             STRB     R0,[R2, R1]
   \                     ??Dev_cal_15: (+1)
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000002DC   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000002E0   0x6809             LDR      R1,[R1, #+0]
   \   000002E2   0x5C08             LDRB     R0,[R1, R0]
   \   000002E4   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000002E8   0x6809             LDR      R1,[R1, #+0]
   \   000002EA   0x4288             CMP      R0,R1
   \   000002EC   0xDA08             BGE.N    ??Dev_cal_12
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000002F6   0x6809             LDR      R1,[R1, #+0]
   \   000002F8   0x5C08             LDRB     R0,[R1, R0]
   \   000002FA   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000002FE   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_12: (+1)
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable2_14
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000030A   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000030E   0x6812             LDR      R2,[R2, #+0]
   \   00000310   0x5C51             LDRB     R1,[R2, R1]
   \   00000312   0x4288             CMP      R0,R1
   \   00000314   0xF6BF 0xAF3F      BGE.W    ??Dev_cal_10
   \   00000318   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000031C   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000320   0x6809             LDR      R1,[R1, #+0]
   \   00000322   0x1808             ADDS     R0,R1,R0
   \   00000324   0x7840             LDRB     R0,[R0, #+1]
   \   00000326   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000032A   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000032E   0x6812             LDR      R2,[R2, #+0]
   \   00000330   0x1851             ADDS     R1,R2,R1
   \   00000332   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000336   0x4288             CMP      R0,R1
   \   00000338   0xD23C             BCS.N    ??Dev_cal_17
   \   0000033A   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000033E   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000342   0x6809             LDR      R1,[R1, #+0]
   \   00000344   0x1808             ADDS     R0,R1,R0
   \   00000346   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000034A   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000034E   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000352   0x6812             LDR      R2,[R2, #+0]
   \   00000354   0x5C51             LDRB     R1,[R2, R1]
   \   00000356   0x4288             CMP      R0,R1
   \   00000358   0xD20E             BCS.N    ??Dev_cal_18
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000362   0x6809             LDR      R1,[R1, #+0]
   \   00000364   0x1808             ADDS     R0,R1,R0
   \   00000366   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000036A   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000036E   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   00000372   0x6812             LDR      R2,[R2, #+0]
   \   00000374   0x5450             STRB     R0,[R2, R1]
   \   00000376   0xE6FA             B.N      ??Dev_cal_9
   \                     ??Dev_cal_18: (+1)
   \   00000378   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000380   0x6809             LDR      R1,[R1, #+0]
   \   00000382   0x5C08             LDRB     R0,[R1, R0]
   \   00000384   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000388   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   0000038C   0x6812             LDR      R2,[R2, #+0]
   \   0000038E   0x1851             ADDS     R1,R2,R1
   \   00000390   0x7849             LDRB     R1,[R1, #+1]
   \   00000392   0x4288             CMP      R0,R1
   \   00000394   0xF4BF 0xAEEB      BCS.W    ??Dev_cal_9
   \   00000398   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000039C   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000003A0   0x6809             LDR      R1,[R1, #+0]
   \   000003A2   0x1808             ADDS     R0,R1,R0
   \   000003A4   0x7840             LDRB     R0,[R0, #+1]
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000003AA   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000003AE   0x6812             LDR      R2,[R2, #+0]
   \   000003B0   0x5450             STRB     R0,[R2, R1]
   \   000003B2   0xE6DC             B.N      ??Dev_cal_9
   \                     ??Dev_cal_17: (+1)
   \   000003B4   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000003B8   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000003BC   0x6809             LDR      R1,[R1, #+0]
   \   000003BE   0x1808             ADDS     R0,R1,R0
   \   000003C0   0x7840             LDRB     R0,[R0, #+1]
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000003C6   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000003CA   0x6812             LDR      R2,[R2, #+0]
   \   000003CC   0x5C51             LDRB     R1,[R2, R1]
   \   000003CE   0x4288             CMP      R0,R1
   \   000003D0   0xF4BF 0xAEAF      BCS.W    ??Dev_cal_8
   \   000003D4   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000003D8   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000003DC   0x6809             LDR      R1,[R1, #+0]
   \   000003DE   0x1808             ADDS     R0,R1,R0
   \   000003E0   0x7840             LDRB     R0,[R0, #+1]
   \   000003E2   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000003E6   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000003EA   0x6812             LDR      R2,[R2, #+0]
   \   000003EC   0x5450             STRB     R0,[R2, R1]
   \   000003EE   0xE6BE             B.N      ??Dev_cal_9
    395          
    396          }
    397          }
    398          
    399          GrayMIN[0]=GrayMin;
   \                     ??Dev_cal_11: (+1)
   \   000003F0   0x.... 0x....      LDR.W    R0,??DataTable2_13
   \   000003F4   0x6800             LDR      R0,[R0, #+0]
   \   000003F6   0x.... 0x....      LDR.W    R1,??DataTable2_15
   \   000003FA   0x6008             STR      R0,[R1, #+0]
    400          GrayMAX[0]=GrayMax;
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable2_14
   \   00000400   0x6800             LDR      R0,[R0, #+0]
   \   00000402   0x.... 0x....      LDR.W    R1,??DataTable2_16
   \   00000406   0x6008             STR      R0,[R1, #+0]
    401          
    402          ////////////////////////////////////////////////////////////    
    403          //////////////////////////////////////////////////////////// 
    404          ////////////////////////////////////////////////////////////     
    405          for(j=0;j<10;j++)
   \   00000408   0x2000             MOVS     R0,#+0
   \   0000040A   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000040E   0x6008             STR      R0,[R1, #+0]
   \   00000410   0xE00E             B.N      ??Dev_cal_19
    406          X[j]=0;
   \                     ??Dev_cal_20: (+1)
   \   00000412   0x2000             MOVS     R0,#+0
   \   00000414   0x.... 0x....      LDR.W    R1,??DataTable2_17
   \   00000418   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000041C   0x6812             LDR      R2,[R2, #+0]
   \   0000041E   0xF841 0x0022      STR      R0,[R1, R2, LSL #+2]
   \   00000422   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000426   0x6800             LDR      R0,[R0, #+0]
   \   00000428   0x1C40             ADDS     R0,R0,#+1
   \   0000042A   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000042E   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_19: (+1)
   \   00000430   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000434   0x6800             LDR      R0,[R0, #+0]
   \   00000436   0x280A             CMP      R0,#+10
   \   00000438   0xDBEB             BLT.N    ??Dev_cal_20
    407          
    408          i=0;
   \   0000043A   0x2000             MOVS     R0,#+0
   \   0000043C   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000440   0x6008             STR      R0,[R1, #+0]
    409          for(j=0;j<127;j++)
   \   00000442   0x2000             MOVS     R0,#+0
   \   00000444   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000448   0x6008             STR      R0,[R1, #+0]
   \   0000044A   0xE04D             B.N      ??Dev_cal_21
    410          {
    411          if(((ADV[j-1]<=threshold)&&(ADV[j]>threshold))||((ADV[j]>threshold)&&(ADV[j+1]<=threshold)))
   \                     ??Dev_cal_22: (+1)
   \   0000044C   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   00000450   0x6800             LDR      R0,[R0, #+0]
   \   00000452   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000456   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000045A   0x6812             LDR      R2,[R2, #+0]
   \   0000045C   0x1851             ADDS     R1,R2,R1
   \   0000045E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000462   0x4288             CMP      R0,R1
   \   00000464   0xDB0A             BLT.N    ??Dev_cal_23
   \   00000466   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   0000046A   0x6800             LDR      R0,[R0, #+0]
   \   0000046C   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000470   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000474   0x6812             LDR      R2,[R2, #+0]
   \   00000476   0x5C51             LDRB     R1,[R2, R1]
   \   00000478   0x4288             CMP      R0,R1
   \   0000047A   0xDB16             BLT.N    ??Dev_cal_24
   \                     ??Dev_cal_23: (+1)
   \   0000047C   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   00000480   0x6800             LDR      R0,[R0, #+0]
   \   00000482   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000486   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000048A   0x6812             LDR      R2,[R2, #+0]
   \   0000048C   0x5C51             LDRB     R1,[R2, R1]
   \   0000048E   0x4288             CMP      R0,R1
   \   00000490   0xDA23             BGE.N    ??Dev_cal_25
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   00000496   0x6800             LDR      R0,[R0, #+0]
   \   00000498   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000049C   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000004A0   0x6812             LDR      R2,[R2, #+0]
   \   000004A2   0x1851             ADDS     R1,R2,R1
   \   000004A4   0x7849             LDRB     R1,[R1, #+1]
   \   000004A6   0x4288             CMP      R0,R1
   \   000004A8   0xDB17             BLT.N    ??Dev_cal_25
    412          {
    413          X[i]=j;
   \                     ??Dev_cal_24: (+1)
   \   000004AA   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000004AE   0x6800             LDR      R0,[R0, #+0]
   \   000004B0   0x.... 0x....      LDR.W    R1,??DataTable2_17
   \   000004B4   0x.... 0x....      LDR.W    R2,??DataTable2_2
   \   000004B8   0x6812             LDR      R2,[R2, #+0]
   \   000004BA   0xF841 0x0022      STR      R0,[R1, R2, LSL #+2]
    414          i++;
   \   000004BE   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000004C2   0x6800             LDR      R0,[R0, #+0]
   \   000004C4   0x1C40             ADDS     R0,R0,#+1
   \   000004C6   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000004CA   0x6008             STR      R0,[R1, #+0]
    415          j++;
   \   000004CC   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000004D0   0x6800             LDR      R0,[R0, #+0]
   \   000004D2   0x1C40             ADDS     R0,R0,#+1
   \   000004D4   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000004D8   0x6008             STR      R0,[R1, #+0]
    416          }  
    417          }        
   \                     ??Dev_cal_25: (+1)
   \   000004DA   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000004DE   0x6800             LDR      R0,[R0, #+0]
   \   000004E0   0x1C40             ADDS     R0,R0,#+1
   \   000004E2   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000004E6   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_21: (+1)
   \   000004E8   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000004EC   0x6800             LDR      R0,[R0, #+0]
   \   000004EE   0x287F             CMP      R0,#+127
   \   000004F0   0xDBAC             BLT.N    ??Dev_cal_22
    418          
    419          ////////////////////////////////////////////////////////////    
    420          //////////////////////////////////////////////////////////// 
    421          ////////////////////////////////////////////////////////////    
    422          
    423          
    424          
    425          
    426          
    427          
    428          
    429          
    430          
    431          
    432          //*****************************************************************************          
    433          //寻找左线 上跳沿 
    434          //***************************************************************************** 
    435          
    436          startl=0;
   \   000004F2   0x2000             MOVS     R0,#+0
   \   000004F4   0x.... 0x....      LDR.W    R1,??DataTable2_18
   \   000004F8   0x6008             STR      R0,[R1, #+0]
    437          for(j=64;j>10;j--)
   \   000004FA   0x2040             MOVS     R0,#+64
   \   000004FC   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000500   0x6008             STR      R0,[R1, #+0]
   \   00000502   0xE015             B.N      ??Dev_cal_26
    438          {
    439          if(ADV[j]>220)
   \                     ??Dev_cal_27: (+1)
   \   00000504   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000508   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000050C   0x6809             LDR      R1,[R1, #+0]
   \   0000050E   0x5C08             LDRB     R0,[R1, R0]
   \   00000510   0x28DD             CMP      R0,#+221
   \   00000512   0xDB06             BLT.N    ??Dev_cal_28
    440          {
    441          startl++;
   \   00000514   0x.... 0x....      LDR.W    R0,??DataTable2_18
   \   00000518   0x6800             LDR      R0,[R0, #+0]
   \   0000051A   0x1C40             ADDS     R0,R0,#+1
   \   0000051C   0x.... 0x....      LDR.W    R1,??DataTable2_18
   \   00000520   0x6008             STR      R0,[R1, #+0]
    442          }       
    443          }
   \                     ??Dev_cal_28: (+1)
   \   00000522   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000526   0x6800             LDR      R0,[R0, #+0]
   \   00000528   0x1E40             SUBS     R0,R0,#+1
   \   0000052A   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000052E   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_26: (+1)
   \   00000530   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000534   0x6800             LDR      R0,[R0, #+0]
   \   00000536   0x280B             CMP      R0,#+11
   \   00000538   0xDAE4             BGE.N    ??Dev_cal_27
    444          Startl[0]=startl;
   \   0000053A   0x.... 0x....      LDR.W    R0,??DataTable2_18
   \   0000053E   0x6800             LDR      R0,[R0, #+0]
   \   00000540   0x.... 0x....      LDR.W    R1,??DataTable2_19
   \   00000544   0x6008             STR      R0,[R1, #+0]
    445          
    446          
    447          
    448          
    449          L_edgeFlag[0]=0; 
   \   00000546   0x2000             MOVS     R0,#+0
   \   00000548   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   0000054C   0x7008             STRB     R0,[R1, #+0]
    450          yanLL=midline-64;
   \   0000054E   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   00000552   0x6800             LDR      R0,[R0, #+0]
   \   00000554   0x3840             SUBS     R0,R0,#+64
   \   00000556   0x.... 0x....      LDR.W    R1,??DataTable2_21
   \   0000055A   0x6008             STR      R0,[R1, #+0]
    451          if(yanLL<10)
   \   0000055C   0x.... 0x....      LDR.W    R0,??DataTable2_21
   \   00000560   0x6800             LDR      R0,[R0, #+0]
   \   00000562   0x280A             CMP      R0,#+10
   \   00000564   0xDA03             BGE.N    ??Dev_cal_29
    452          yanLL=10;                     //划定左跳沿范围
   \   00000566   0x200A             MOVS     R0,#+10
   \   00000568   0x.... 0x....      LDR.W    R1,??DataTable2_21
   \   0000056C   0x6008             STR      R0,[R1, #+0]
    453          
    454          for(j=midline;j>yanLL;j--)
   \                     ??Dev_cal_29: (+1)
   \   0000056E   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   00000572   0x6800             LDR      R0,[R0, #+0]
   \   00000574   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000578   0x6008             STR      R0,[R1, #+0]
   \   0000057A   0xE006             B.N      ??Dev_cal_30
   \                     ??Dev_cal_31: (+1)
   \   0000057C   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000580   0x6800             LDR      R0,[R0, #+0]
   \   00000582   0x1E40             SUBS     R0,R0,#+1
   \   00000584   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000588   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_30: (+1)
   \   0000058A   0x.... 0x....      LDR.W    R0,??DataTable2_21
   \   0000058E   0x6800             LDR      R0,[R0, #+0]
   \   00000590   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000594   0x6809             LDR      R1,[R1, #+0]
   \   00000596   0x4288             CMP      R0,R1
   \   00000598   0xF280 0x8097      BGE.W    ??Dev_cal_32
    455          {
    456          if(ADV[j]>threshold)
   \   0000059C   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   000005A0   0x6800             LDR      R0,[R0, #+0]
   \   000005A2   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000005A6   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000005AA   0x6812             LDR      R2,[R2, #+0]
   \   000005AC   0x5C51             LDRB     R1,[R2, R1]
   \   000005AE   0x4288             CMP      R0,R1
   \   000005B0   0xDAE4             BGE.N    ??Dev_cal_31
    457          
    458          if(ADV[j+1]>ADV[j])  
   \   000005B2   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000005B6   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000005BA   0x6809             LDR      R1,[R1, #+0]
   \   000005BC   0x5C08             LDRB     R0,[R1, R0]
   \   000005BE   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000005C2   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000005C6   0x6812             LDR      R2,[R2, #+0]
   \   000005C8   0x1851             ADDS     R1,R2,R1
   \   000005CA   0x7849             LDRB     R1,[R1, #+1]
   \   000005CC   0x4288             CMP      R0,R1
   \   000005CE   0xD2D5             BCS.N    ??Dev_cal_31
    459          if(ADV[j]>ADV[j-1])
   \   000005D0   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000005D4   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000005D8   0x6809             LDR      R1,[R1, #+0]
   \   000005DA   0x1808             ADDS     R0,R1,R0
   \   000005DC   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000005E0   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000005E4   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000005E8   0x6812             LDR      R2,[R2, #+0]
   \   000005EA   0x5C51             LDRB     R1,[R2, R1]
   \   000005EC   0x4288             CMP      R0,R1
   \   000005EE   0xD2C5             BCS.N    ??Dev_cal_31
    460          if(ADV[j-1]>ADV[j-2])
   \   000005F0   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000005F4   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000005F8   0x6809             LDR      R1,[R1, #+0]
   \   000005FA   0x1808             ADDS     R0,R1,R0
   \   000005FC   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   00000600   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000604   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000608   0x6812             LDR      R2,[R2, #+0]
   \   0000060A   0x1851             ADDS     R1,R2,R1
   \   0000060C   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000610   0x4288             CMP      R0,R1
   \   00000612   0xD2B3             BCS.N    ??Dev_cal_31
    461          
    462          if(ADV[j-1]<=threshold)
   \   00000614   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   00000618   0x6800             LDR      R0,[R0, #+0]
   \   0000061A   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000061E   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000622   0x6812             LDR      R2,[R2, #+0]
   \   00000624   0x1851             ADDS     R1,R2,R1
   \   00000626   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000062A   0x4288             CMP      R0,R1
   \   0000062C   0xDBA6             BLT.N    ??Dev_cal_31
    463          
    464          if((ADV[j+1]-ADV[j-2])>Ka)  
   \   0000062E   0x.... 0x....      LDR.W    R0,??DataTable2_22
   \   00000632   0x6800             LDR      R0,[R0, #+0]
   \   00000634   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000638   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000063C   0x6812             LDR      R2,[R2, #+0]
   \   0000063E   0x1851             ADDS     R1,R2,R1
   \   00000640   0x7849             LDRB     R1,[R1, #+1]
   \   00000642   0x.... 0x....      LDR.W    R2,??DataTable2_4
   \   00000646   0x.... 0x....      LDR.W    R3,??DataTable2_3
   \   0000064A   0x681B             LDR      R3,[R3, #+0]
   \   0000064C   0x189A             ADDS     R2,R3,R2
   \   0000064E   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   00000652   0x1A89             SUBS     R1,R1,R2
   \   00000654   0x4288             CMP      R0,R1
   \   00000656   0xDA91             BGE.N    ??Dev_cal_31
    465          if((ADV[j+5]-ADV[j-5])>50)  
   \   00000658   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000065C   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000660   0x6809             LDR      R1,[R1, #+0]
   \   00000662   0x1808             ADDS     R0,R1,R0
   \   00000664   0x7940             LDRB     R0,[R0, #+5]
   \   00000666   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000066A   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000066E   0x6812             LDR      R2,[R2, #+0]
   \   00000670   0x1851             ADDS     R1,R2,R1
   \   00000672   0xF811 0x1C05      LDRB     R1,[R1, #-5]
   \   00000676   0x1A40             SUBS     R0,R0,R1
   \   00000678   0x2833             CMP      R0,#+51
   \   0000067A   0xF6FF 0xAF7F      BLT.W    ??Dev_cal_31
    466          
    467          
    468          if(ADV[j+2]>ADV[j-2])   
   \   0000067E   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000682   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000686   0x6809             LDR      R1,[R1, #+0]
   \   00000688   0x1808             ADDS     R0,R1,R0
   \   0000068A   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   0000068E   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000692   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000696   0x6812             LDR      R2,[R2, #+0]
   \   00000698   0x1851             ADDS     R1,R2,R1
   \   0000069A   0x7889             LDRB     R1,[R1, #+2]
   \   0000069C   0x4288             CMP      R0,R1
   \   0000069E   0xF4BF 0xAF6D      BCS.W    ??Dev_cal_31
    469          
    470          
    471          if(ADV[j+7]>220)
   \   000006A2   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000006A6   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000006AA   0x6809             LDR      R1,[R1, #+0]
   \   000006AC   0x1808             ADDS     R0,R1,R0
   \   000006AE   0x79C0             LDRB     R0,[R0, #+7]
   \   000006B0   0x28DD             CMP      R0,#+221
   \   000006B2   0xF6FF 0xAF63      BLT.W    ??Dev_cal_31
    472          
    473          { 
    474          Ledge[0] = j;              
   \   000006B6   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000006BA   0x6800             LDR      R0,[R0, #+0]
   \   000006BC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000006C0   0x6008             STR      R0,[R1, #+0]
    475          L_edgeFlag[0]=1;  
   \   000006C2   0x2001             MOVS     R0,#+1
   \   000006C4   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   000006C8   0x7008             STRB     R0,[R1, #+0]
    476          break;
    477          }
    478          }
    479          
    480          
    481          
    482          
    483          //******************************************************************************      
    484          //寻找右 下跳沿
    485          //****************************************************************************** 
    486          
    487          
    488          
    489          
    490          startr=0;
   \                     ??Dev_cal_32: (+1)
   \   000006CA   0x2000             MOVS     R0,#+0
   \   000006CC   0x.... 0x....      LDR.W    R1,??DataTable2_23
   \   000006D0   0x6008             STR      R0,[R1, #+0]
    491          for(j=64;j<117;j++)
   \   000006D2   0x2040             MOVS     R0,#+64
   \   000006D4   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000006D8   0x6008             STR      R0,[R1, #+0]
   \   000006DA   0xE015             B.N      ??Dev_cal_33
    492          {  
    493          if(ADV[j]>220)
   \                     ??Dev_cal_34: (+1)
   \   000006DC   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000006E0   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000006E4   0x6809             LDR      R1,[R1, #+0]
   \   000006E6   0x5C08             LDRB     R0,[R1, R0]
   \   000006E8   0x28DD             CMP      R0,#+221
   \   000006EA   0xDB06             BLT.N    ??Dev_cal_35
    494          {
    495          startr++;
   \   000006EC   0x.... 0x....      LDR.W    R0,??DataTable2_23
   \   000006F0   0x6800             LDR      R0,[R0, #+0]
   \   000006F2   0x1C40             ADDS     R0,R0,#+1
   \   000006F4   0x.... 0x....      LDR.W    R1,??DataTable2_23
   \   000006F8   0x6008             STR      R0,[R1, #+0]
    496          }     
    497          }
   \                     ??Dev_cal_35: (+1)
   \   000006FA   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000006FE   0x6800             LDR      R0,[R0, #+0]
   \   00000700   0x1C40             ADDS     R0,R0,#+1
   \   00000702   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000706   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_33: (+1)
   \   00000708   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   0000070C   0x6800             LDR      R0,[R0, #+0]
   \   0000070E   0x2875             CMP      R0,#+117
   \   00000710   0xDBE4             BLT.N    ??Dev_cal_34
    498          Startr[0]=startr;
   \   00000712   0x.... 0x....      LDR.W    R0,??DataTable2_23
   \   00000716   0x6800             LDR      R0,[R0, #+0]
   \   00000718   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   0000071C   0x6008             STR      R0,[R1, #+0]
    499          
    500          
    501          
    502          R_edgeFlag[0]=0;  
   \   0000071E   0x2000             MOVS     R0,#+0
   \   00000720   0x.... 0x....      LDR.W    R1,??DataTable2_12
   \   00000724   0x7008             STRB     R0,[R1, #+0]
    503          yanRR=midline+64;
   \   00000726   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   0000072A   0x6800             LDR      R0,[R0, #+0]
   \   0000072C   0x3040             ADDS     R0,R0,#+64
   \   0000072E   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000732   0x6008             STR      R0,[R1, #+0]
    504          if( yanRR>117)                   //划定右跳沿范围
   \   00000734   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   00000738   0x6800             LDR      R0,[R0, #+0]
   \   0000073A   0x2876             CMP      R0,#+118
   \   0000073C   0xDB03             BLT.N    ??Dev_cal_36
    505          yanRR=117; 
   \   0000073E   0x2075             MOVS     R0,#+117
   \   00000740   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000744   0x6008             STR      R0,[R1, #+0]
    506          
    507          for(j=midline;j<yanRR;j++)
   \                     ??Dev_cal_36: (+1)
   \   00000746   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   0000074A   0x6800             LDR      R0,[R0, #+0]
   \   0000074C   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000750   0x6008             STR      R0,[R1, #+0]
   \   00000752   0xE006             B.N      ??Dev_cal_37
   \                     ??Dev_cal_38: (+1)
   \   00000754   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000758   0x6800             LDR      R0,[R0, #+0]
   \   0000075A   0x1C40             ADDS     R0,R0,#+1
   \   0000075C   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000760   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_37: (+1)
   \   00000762   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000766   0x6800             LDR      R0,[R0, #+0]
   \   00000768   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000076C   0x6809             LDR      R1,[R1, #+0]
   \   0000076E   0x4288             CMP      R0,R1
   \   00000770   0xF280 0x8094      BGE.W    ??Dev_cal_39
    508          
    509          {
    510          
    511          if(ADV[j]>threshold)
   \   00000774   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   00000778   0x6800             LDR      R0,[R0, #+0]
   \   0000077A   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000077E   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000782   0x6812             LDR      R2,[R2, #+0]
   \   00000784   0x5C51             LDRB     R1,[R2, R1]
   \   00000786   0x4288             CMP      R0,R1
   \   00000788   0xDAE4             BGE.N    ??Dev_cal_38
    512          
    513          if(ADV[j-1]>ADV[j])   
   \   0000078A   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000078E   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000792   0x6809             LDR      R1,[R1, #+0]
   \   00000794   0x5C08             LDRB     R0,[R1, R0]
   \   00000796   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000079A   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000079E   0x6812             LDR      R2,[R2, #+0]
   \   000007A0   0x1851             ADDS     R1,R2,R1
   \   000007A2   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000007A6   0x4288             CMP      R0,R1
   \   000007A8   0xD2D4             BCS.N    ??Dev_cal_38
    514          if(ADV[j]>ADV[j+1])
   \   000007AA   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000007AE   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000007B2   0x6809             LDR      R1,[R1, #+0]
   \   000007B4   0x1808             ADDS     R0,R1,R0
   \   000007B6   0x7840             LDRB     R0,[R0, #+1]
   \   000007B8   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000007BC   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000007C0   0x6812             LDR      R2,[R2, #+0]
   \   000007C2   0x5C51             LDRB     R1,[R2, R1]
   \   000007C4   0x4288             CMP      R0,R1
   \   000007C6   0xD2C5             BCS.N    ??Dev_cal_38
    515          if(ADV[j+1]>ADV[j+2])  
   \   000007C8   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000007CC   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000007D0   0x6809             LDR      R1,[R1, #+0]
   \   000007D2   0x1808             ADDS     R0,R1,R0
   \   000007D4   0x7880             LDRB     R0,[R0, #+2]
   \   000007D6   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000007DA   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000007DE   0x6812             LDR      R2,[R2, #+0]
   \   000007E0   0x1851             ADDS     R1,R2,R1
   \   000007E2   0x7849             LDRB     R1,[R1, #+1]
   \   000007E4   0x4288             CMP      R0,R1
   \   000007E6   0xD2B5             BCS.N    ??Dev_cal_38
    516          
    517          if(ADV[j+1]<=threshold)
   \   000007E8   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   000007EC   0x6800             LDR      R0,[R0, #+0]
   \   000007EE   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000007F2   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000007F6   0x6812             LDR      R2,[R2, #+0]
   \   000007F8   0x1851             ADDS     R1,R2,R1
   \   000007FA   0x7849             LDRB     R1,[R1, #+1]
   \   000007FC   0x4288             CMP      R0,R1
   \   000007FE   0xDBA9             BLT.N    ??Dev_cal_38
    518          
    519          if((ADV[j-1]-ADV[j+2])>Ka)  
   \   00000800   0x.... 0x....      LDR.W    R0,??DataTable2_22
   \   00000804   0x6800             LDR      R0,[R0, #+0]
   \   00000806   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000080A   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   0000080E   0x6812             LDR      R2,[R2, #+0]
   \   00000810   0x1851             ADDS     R1,R2,R1
   \   00000812   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000816   0x.... 0x....      LDR.W    R2,??DataTable2_4
   \   0000081A   0x.... 0x....      LDR.W    R3,??DataTable2_3
   \   0000081E   0x681B             LDR      R3,[R3, #+0]
   \   00000820   0x189A             ADDS     R2,R3,R2
   \   00000822   0x7892             LDRB     R2,[R2, #+2]
   \   00000824   0x1A89             SUBS     R1,R1,R2
   \   00000826   0x4288             CMP      R0,R1
   \   00000828   0xDA94             BGE.N    ??Dev_cal_38
    520          if((ADV[j-5]-ADV[j+5])>50)  
   \   0000082A   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   0000082E   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000832   0x6809             LDR      R1,[R1, #+0]
   \   00000834   0x1808             ADDS     R0,R1,R0
   \   00000836   0xF810 0x0C05      LDRB     R0,[R0, #-5]
   \   0000083A   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   0000083E   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000842   0x6812             LDR      R2,[R2, #+0]
   \   00000844   0x1851             ADDS     R1,R2,R1
   \   00000846   0x7949             LDRB     R1,[R1, #+5]
   \   00000848   0x1A40             SUBS     R0,R0,R1
   \   0000084A   0x2833             CMP      R0,#+51
   \   0000084C   0xDB82             BLT.N    ??Dev_cal_38
    521          
    522          if(ADV[j-2]>ADV[j+2])
   \   0000084E   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000852   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000856   0x6809             LDR      R1,[R1, #+0]
   \   00000858   0x1808             ADDS     R0,R1,R0
   \   0000085A   0x7880             LDRB     R0,[R0, #+2]
   \   0000085C   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000860   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000864   0x6812             LDR      R2,[R2, #+0]
   \   00000866   0x1851             ADDS     R1,R2,R1
   \   00000868   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   0000086C   0x4288             CMP      R0,R1
   \   0000086E   0xF4BF 0xAF71      BCS.W    ??Dev_cal_38
    523          
    524          
    525          
    526          if(ADV[j-7]>220)            
   \   00000872   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000876   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000087A   0x6809             LDR      R1,[R1, #+0]
   \   0000087C   0x1808             ADDS     R0,R1,R0
   \   0000087E   0xF810 0x0C07      LDRB     R0,[R0, #-7]
   \   00000882   0x28DD             CMP      R0,#+221
   \   00000884   0xF6FF 0xAF66      BLT.W    ??Dev_cal_38
    527          { 
    528          Redge[0] = j;              
   \   00000888   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   0000088C   0x6800             LDR      R0,[R0, #+0]
   \   0000088E   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000892   0x6008             STR      R0,[R1, #+0]
    529          R_edgeFlag[0]=1;  
   \   00000894   0x2001             MOVS     R0,#+1
   \   00000896   0x.... 0x....      LDR.W    R1,??DataTable2_12
   \   0000089A   0x7008             STRB     R0,[R1, #+0]
    530          break;
    531          }            
    532          }
    533          
    534          
    535          
    536          
    537          
    538          
    539          //******************************************************************************      
    540          //计算赛道宽度
    541          //******************************************************************************       
    542          if(Ledge[0]>Redge[0])
   \                     ??Dev_cal_39: (+1)
   \   0000089C   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   000008A0   0x6800             LDR      R0,[R0, #+0]
   \   000008A2   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000008A6   0x6809             LDR      R1,[R1, #+0]
   \   000008A8   0x4288             CMP      R0,R1
   \   000008AA   0xDA1A             BGE.N    ??Dev_cal_40
    543          {
    544          L_edgeFlag[0]=0;
   \   000008AC   0x2000             MOVS     R0,#+0
   \   000008AE   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   000008B2   0x7008             STRB     R0,[R1, #+0]
    545          R_edgeFlag[0]=0;
   \   000008B4   0x2000             MOVS     R0,#+0
   \   000008B6   0x.... 0x....      LDR.W    R1,??DataTable2_12
   \   000008BA   0x7008             STRB     R0,[R1, #+0]
    546          Redge[0]=Redge[1];
   \   000008BC   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   000008C0   0x6840             LDR      R0,[R0, #+4]
   \   000008C2   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   000008C6   0x6008             STR      R0,[R1, #+0]
    547          Ledge[0]=Ledge[1];
   \   000008C8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000008CC   0x6840             LDR      R0,[R0, #+4]
   \   000008CE   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000008D2   0x6008             STR      R0,[R1, #+0]
    548          len_show[0]=len_show[1];        
   \   000008D4   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   000008D8   0x7840             LDRB     R0,[R0, #+1]
   \   000008DA   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   000008DE   0x7008             STRB     R0,[R1, #+0]
   \   000008E0   0xE038             B.N      ??Dev_cal_41
    549          }
    550          else
    551          {
    552          if(L_edgeFlag[0]+R_edgeFlag[0]==2)
   \                     ??Dev_cal_40: (+1)
   \   000008E2   0x.... 0x....      LDR.W    R0,??DataTable2_11
   \   000008E6   0x7800             LDRB     R0,[R0, #+0]
   \   000008E8   0x.... 0x....      LDR.W    R1,??DataTable2_12
   \   000008EC   0x7809             LDRB     R1,[R1, #+0]
   \   000008EE   0x1808             ADDS     R0,R1,R0
   \   000008F0   0x2802             CMP      R0,#+2
   \   000008F2   0xD129             BNE.N    ??Dev_cal_42
    553          {  
    554          len_show[0]=Redge[0]-Ledge[0];
   \   000008F4   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   000008F8   0x6800             LDR      R0,[R0, #+0]
   \   000008FA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000008FE   0x6809             LDR      R1,[R1, #+0]
   \   00000900   0x1A40             SUBS     R0,R0,R1
   \   00000902   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000906   0x7008             STRB     R0,[R1, #+0]
    555          
    556          if(len_show[0]<35)
   \   00000908   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   0000090C   0x7800             LDRB     R0,[R0, #+0]
   \   0000090E   0x2823             CMP      R0,#+35
   \   00000910   0xDA20             BGE.N    ??Dev_cal_41
    557          {
    558          L_edgeFlag[0]=0;
   \   00000912   0x2000             MOVS     R0,#+0
   \   00000914   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   00000918   0x7008             STRB     R0,[R1, #+0]
    559          R_edgeFlag[0]=0;
   \   0000091A   0x2000             MOVS     R0,#+0
   \   0000091C   0x.... 0x....      LDR.W    R1,??DataTable2_12
   \   00000920   0x7008             STRB     R0,[R1, #+0]
    560          Redge[0]=Redge[1];
   \   00000922   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000926   0x6840             LDR      R0,[R0, #+4]
   \   00000928   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   0000092C   0x6008             STR      R0,[R1, #+0]
    561          Ledge[0]=Ledge[1];
   \   0000092E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000932   0x6840             LDR      R0,[R0, #+4]
   \   00000934   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000938   0x6008             STR      R0,[R1, #+0]
    562          len_show[0]=len_show[1];    
   \   0000093A   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   0000093E   0x7840             LDRB     R0,[R0, #+1]
   \   00000940   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000944   0x7008             STRB     R0,[R1, #+0]
   \   00000946   0xE005             B.N      ??Dev_cal_41
    563          }
    564          }
    565          else
    566          {
    567          len_show[0]=len_show[1];
   \                     ??Dev_cal_42: (+1)
   \   00000948   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   0000094C   0x7840             LDRB     R0,[R0, #+1]
   \   0000094E   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000952   0x7008             STRB     R0,[R1, #+0]
    568          }    
    569          }
    570          
    571          
    572          //////////////////////////////////////////////////////////////     
    573          //if(FieldCnt>500)
    574          //if(FieldCnt<=550)
    575          //if(Ess[0]<=4)
    576          //if(L_edgeFlag[0]+R_edgeFlag[0]==2)
    577          //{
    578          //len_realsum=len_realsum+len_show[0];
    579          //len_realcnt++;
    580          //BmaCnt=2;
    581          //}
    582          ////////////////////////////////////////////////////////////////
    583          
    584          
    585          
    586          
    587          ///////////////////////////////////////////////////
    588          ///砖头
    589          ///////////////////////////////////////////////////
    590          
    591          //Blockflag=0;
    592          //BlockFlag=0;
    593          //
    594          //
    595          //if(BlocklEN)
    596          //if(FieldCnt>100)
    597          //if(CNT[7]-CNT[0]>10) 
    598          //if(GrayMAX[0]>220)
    599          //if(THreshold[7]-THreshold[0]>10)   
    600          //
    601          //
    602          //if(R_edgeFlag[0]==1)
    603          //if(R_edgeFlag[1]==1)
    604          //if(R_edgeFlag[2]==1)
    605          //if(R_edgeFlag[3]==1)
    606          //if(R_edgeFlag[4]==1)
    607          //if(R_edgeFlag[5]==1)
    608          //
    609          //
    610          //
    611          //if(abs(Redge[5]-Redge[0])<8)
    612          //
    613          //
    614          //if(L_edgeFlag[0]==1)
    615          //if(L_edgeFlag[1]==1)
    616          ////if(L_edgeFlag[2]==1)
    617          ////if(L_edgeFlag[3]==1)
    618          //if(L_edgeFlag[4]==1)
    619          //if(L_edgeFlag[5]==1)
    620          //
    621          //if((Ledge[0]-Ledge[5])>15)
    622          //
    623          //
    624          //
    625          //{  
    626          //Blockflagl=1; 
    627          //}
    628          //
    629          //if(Blockflagl)
    630          //{ 
    631          //Blockflagl++;
    632          //if(Blockflagl<40)
    633          //{
    634          //L_edgeFlag[0]=1;   
    635          //Ledge[0]=Redge[0]-31;
    636          //
    637          //
    638          //if(Blockflagl<30)
    639          //{
    640          //L_edgeFlag[0]=1;   
    641          //Ledge[0]=Redge[0]-29;   
    642          //}
    643          //
    644          //if(Blockflagl<20)
    645          //{
    646          //L_edgeFlag[0]=1;   
    647          //Ledge[0]=Redge[0]-22;   
    648          //}
    649          //
    650          //
    651          //if(Blockflagl<10)
    652          //{
    653          //L_edgeFlag[0]=1;   
    654          //Ledge[0]=Redge[0]-20;   
    655          //}
    656          //
    657          ////BmaCnt=5;
    658          //}
    659          //else
    660          //{
    661          //Blockflagl=0;
    662          //}
    663          //} 
    664          //
    665          //
    666          //
    667          //
    668          //
    669          //
    670          //
    671          //
    672          //
    673          //
    674          //
    675          //if(BlockrEN)
    676          //if(FieldCnt>100)
    677          //if(CNT[7]-CNT[0]>10) 
    678          //if(GrayMAX[0]>220)
    679          //if(THreshold[7]-THreshold[0]>10)  
    680          //
    681          //
    682          //if(R_edgeFlag[0]==1)
    683          //if(R_edgeFlag[1]==1)
    684          ////if(R_edgeFlag[2]==1)
    685          ////if(R_edgeFlag[3]==1)
    686          //if(R_edgeFlag[4]==1)
    687          //if(R_edgeFlag[5]==1)
    688          //
    689          //if((Redge[5]-Redge[0])>15)
    690          //
    691          //
    692          //
    693          //
    694          //if(L_edgeFlag[0]==1)
    695          //if(L_edgeFlag[1]==1)
    696          //if(L_edgeFlag[2]==1)
    697          //if(L_edgeFlag[3]==1)
    698          //if(L_edgeFlag[4]==1)
    699          //if(L_edgeFlag[5]==1)
    700          //
    701          //
    702          //if(abs(Ledge[0]-Ledge[5])<8)
    703          //
    704          //
    705          //
    706          //{  
    707          //Blockflagr=1; 
    708          //
    709          //}
    710          //
    711          //
    712          //if(Blockflagr)
    713          //{ 
    714          //Blockflagr++;
    715          //
    716          //if(Blockflagr<40)
    717          //{
    718          //R_edgeFlag[0]=1;  
    719          //Redge[0]=Ledge[0]+31;
    720          //
    721          //if(Blockflagr<30)
    722          //{
    723          //R_edgeFlag[0]=1;  
    724          //Redge[0]=Ledge[0]+29;  
    725          //}
    726          //
    727          //if(Blockflagr<20)
    728          //{
    729          //R_edgeFlag[0]=1;  
    730          //Redge[0]=Ledge[0]+22;  
    731          //}
    732          //if(Blockflagr<10)
    733          //{
    734          //R_edgeFlag[0]=1;  
    735          //Redge[0]=Ledge[0]+20;  
    736          //}
    737          //
    738          ////BmaCnt=5; 
    739          //}
    740          //else
    741          //{
    742          //Blockflagr=0;
    743          //}
    744          //} 
    745          
    746          
    747          
    748          
    749          
    750          
    751          
    752          
    753          
    754          ///////////////////////////////////////////////////////////////////
    755          ///////////////////////////////////////////////////////////////////
    756          
    757          
    758          
    759          ///////////////////////////////////////////////////////////////////
    760          ////////十字
    761          ///////////////////////////////////////////////////////////////////
    762          //if(!Singleflag[0])
    763          //if(!Singleflag[1])
    764          //if(!Singleflag[2])
    765          //if(!Singleflag[3])
    766          //if(!Singleflag[4])
    767          //if(!Singleflag[5])
    768          //if(!Singleflag[6])
    769          //if(WhiteEN)
    770          //{
    771          //white_mark=0;
    772          //
    773          //if(FieldCnt>100)
    774          //if(CNT[0]-CNT[7]>10) 
    775          //if(GrayMAX[0]>220)
    776          //if(THreshold[0]-THreshold[7]>5)
    777          //if(abs(Ess[3])<20)
    778          //if(L_edgeFlag[0]==0)
    779          //if(L_edgeFlag[1]==0)
    780          //if(L_edgeFlag[2]==0)
    781          //
    782          //
    783          //
    784          //
    785          //
    786          //if(R_edgeFlag[0]==0)
    787          //if(R_edgeFlag[1]==0)
    788          //if(R_edgeFlag[2]==0)
    789          //
    790          //
    791          //
    792          //
    793          //if(R_edgeFlag[3]==1||L_edgeFlag[3])
    794          //
    795          //
    796          //white_mark=1;
    797          //
    798          //
    799          //if(white_mark)
    800          //{
    801          //White_mark=1;
    802          //
    803          //}
    804          //
    805          //if(White_mark)
    806          //{
    807          // BmaCnt=1;
    808          //White_mark++;
    809          //if(White_mark<7)
    810          //{
    811          //L_edgeFlag[0]==1;
    812          //R_edgeFlag[0]==1;
    813          //Redge[0]=Redge[3];
    814          //Ledge[0]=Ledge[3];
    815          //Redge[2]=Redge[3];
    816          //Ledge[2]=Ledge[3];
    817          //}
    818          //}
    819          //
    820          //if(White_mark>100)
    821          //{
    822          // 
    823          //White_mark=0;
    824          //}
    825          //
    826          //}
    827          
    828          
    829          
    830          
    831          /*/////////////////////////////////////////////////////////////////////////////////*/
    832          
    833          
    834          /*///////////////////////////////////////////////
    835          ///////直角弯
    836          //////////////////////////////////////////////*/
    837          
    838          
    839          
    840          /*/////////////////////////////////////////////////////////////////////////////////*/
    841          
    842          ////Elbowbendflag=0;
    843          //Blackflag=0;
    844          //Blackflagr=0;
    845          //Blackflagl=0;
    846          //
    847          //
    848          //
    849          ////    if(FieldCnt>100)
    850          ////    if(GrayMAX[0]<150)
    851          ////    if(THreshold[8]-THreshold[0]>60)
    852          ////    Blackflag=1; 
    853          //
    854          //if(BlackflagEN)
    855          //if(FieldCnt>100)
    856          //if(Ess[5]<30)
    857          //if(R_edgeFlag[0]==0)
    858          //if(L_edgeFlag[0]==0)
    859          //if(GrayMAX[0]<150)
    860          //if(CNT[0]<10)
    861          //{
    862          //Blackflag=1; 
    863          //}
    864          //
    865          //
    866          //
    867          ////if(!BlackFlag)
    868          //if(Blackflagr||Blackflagl||Blackflag)
    869          //
    870          //{
    871          //
    872          //BlackFlag=1;
    873          ////BmaCnt=5;
    874          //}
    875          //
    876          //
    877          ///////////////////////////////////////
    878          //if(BlackFlag)
    879          //{
    880          ////BmaCnt=5;
    881          //if(R_edgeFlag[0]==0||L_edgeFlag[0]==0) 
    882          //{
    883          //R_edgeFlag[0]=1;
    884          //Redge[0]=Redge[7];
    885          //L_edgeFlag[0]=1;
    886          //Ledge[0]=Ledge[7];
    887          //Redge[6]=Redge[7];
    888          //Ledge[6]=Ledge[7];
    889          //}
    890          //else
    891          //{
    892          ////BmaCnt=5;
    893          //BlackFlag=0;
    894          //BlackFlagcnt++;
    895          //Elbowbendflag=1; 
    896          //}
    897          //}
    898          //
    899          //
    900          //
    901          ////  if(BlackFlagcnt)
    902          ////  {
    903          ////    
    904          ////  }
    905          //
    906          //if(BlackFlagcnt>1)
    907          //{
    908          //BlackFlagcnt=0;
    909          //Elbowbendflag=0;
    910          //}
    911          //
    912          //
    913          //
    914          //if(ElbowbendrEN)
    915          //if(Elbowbendflag)
    916          //{
    917          //if(THreshold[0]>=THreshold[5])
    918          //
    919          //
    920          //if(R_edgeFlag[0]==1)
    921          //if(R_edgeFlag[1]==1)
    922          //if(R_edgeFlag[2]==1)
    923          //
    924          //
    925          //
    926          //if(Startl[0]>=Startl[3])
    927          //if(L_edgeFlag[0]==0)
    928          //if(L_edgeFlag[1]==0)                   
    929          //{
    930          //Elbowbendflagl=D_I;
    931          //Elbowbendflag=0;                    
    932          //}    
    933          //}
    934          //
    935          //
    936          //if(ElbowbendlEN)
    937          //if(Elbowbendflag)
    938          //{      
    939          //if(THreshold[0]>=THreshold[5])
    940          //
    941          //if(Startr[0]>=Startr[3])
    942          //
    943          //if(R_edgeFlag[0]==0)
    944          //if(R_edgeFlag[1]==0)
    945          //
    946          //if(L_edgeFlag[0]==1)
    947          //if(L_edgeFlag[1]==1)
    948          //if(L_edgeFlag[2]==1)                   
    949          //{
    950          //
    951          //Elbowbendflagr=D_I;
    952          //Elbowbendflag=0;
    953          //}    
    954          //}
    955          //
    956          //if(Elbowbendflagl>0)
    957          //{
    958          //Elbowbendflagl--;
    959          //Blackflag=0;
    960          //}
    961          //
    962          //if(Elbowbendflagr>0)
    963          //{
    964          //Elbowbendflagr--;
    965          //Blackflag=0;
    966          //}
    967          //
    968          //
    969          //if(FieldCnt>100)
    970          //if(abs(Ess[0])<5)
    971          //if(R_edgeFlag[0]==1)
    972          //if(R_edgeFlag[1]==1)
    973          //if(R_edgeFlag[2]==1)
    974          //if(R_edgeFlag[3]==1)
    975          //if(R_edgeFlag[4]==1)
    976          //if(R_edgeFlag[5]==1)
    977          //if(abs(Redge[5]-Redge[0])<8)
    978          //if(L_edgeFlag[0]==0)
    979          //if(L_edgeFlag[1]==0)
    980          //if(L_edgeFlag[2]==1)
    981          //if(L_edgeFlag[3]==1)
    982          //if(L_edgeFlag[4]==1)
    983          //if(L_edgeFlag[5]==1)
    984          //if(abs(Ledge[5]-Ledge[2])<8)
    985          //{
    986          // //BmaCnt=10;
    987          //}
    988          //
    989          //if(FieldCnt>100)
    990          //if(abs(Ess[0])<5)
    991          //if(L_edgeFlag[0]==1)
    992          //if(L_edgeFlag[1]==1)
    993          //if(L_edgeFlag[2]==1)
    994          //if(L_edgeFlag[3]==1)
    995          //if(L_edgeFlag[4]==1)
    996          //if(L_edgeFlag[5]==1)
    997          //if(abs(Ledge[5]-Ledge[0])<8)
    998          //if(R_edgeFlag[0]==0)
    999          //if(R_edgeFlag[1]==0)
   1000          //if(R_edgeFlag[2]==1)
   1001          //if(R_edgeFlag[3]==1)
   1002          //if(R_edgeFlag[4]==1)
   1003          //if(R_edgeFlag[5]==1)
   1004          //if(abs(Redge[5]-Redge[2])<8)
   1005          //{
   1006          // //BmaCnt=10;
   1007          //}
   1008          
   1009          
   1010          
   1011          ///////////////////////////////////////////////////////////////////////////////////////////
   1012          ///////////////////////////////////////////////////////////////////////////////////////////
   1013          ////////////////////////      单
   1014          ////////////////////////      线
   1015          //////////////////////////////////////////////////////////////////////////////////////////
   1016          //////////////////////////////////////////////////////////////////////////////////////////
   1017          
   1018          
   1019          
   1020          
   1021          
   1022          if(SinglineEN)
   \                     ??Dev_cal_41: (+1)
   \   00000954   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   00000958   0x6800             LDR      R0,[R0, #+0]
   \   0000095A   0x2800             CMP      R0,#+0
   \   0000095C   0xF000 0x812E      BEQ.W    ??Dev_cal_43
   1023          //if(R_edgeFlag[0]==1||L_edgeFlag[0]==1)
   1024          //if(!White_mark)
   1025          {
   1026           
   1027           
   1028           singleflag=0;
   \   00000960   0x2000             MOVS     R0,#+0
   \   00000962   0x.... 0x....      LDR.W    R1,??DataTable3_6
   \   00000966   0x6008             STR      R0,[R1, #+0]
   1029           single=0;
   \   00000968   0x2000             MOVS     R0,#+0
   \   0000096A   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   0000096E   0x6008             STR      R0,[R1, #+0]
   1030          
   1031          if(midline<40)
   \   00000970   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   00000974   0x6800             LDR      R0,[R0, #+0]
   \   00000976   0x2828             CMP      R0,#+40
   \   00000978   0xDA04             BGE.N    ??Dev_cal_44
   1032          singleL=10;
   \   0000097A   0x200A             MOVS     R0,#+10
   \   0000097C   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000980   0x6008             STR      R0,[R1, #+0]
   \   00000982   0xE006             B.N      ??Dev_cal_45
   1033          else
   1034          singleL=midline-30;
   \                     ??Dev_cal_44: (+1)
   \   00000984   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   00000988   0x6800             LDR      R0,[R0, #+0]
   \   0000098A   0x381E             SUBS     R0,R0,#+30
   \   0000098C   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000990   0x6008             STR      R0,[R1, #+0]
   1035          
   1036          if(midline>87)
   \                     ??Dev_cal_45: (+1)
   \   00000992   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   00000996   0x6800             LDR      R0,[R0, #+0]
   \   00000998   0x2858             CMP      R0,#+88
   \   0000099A   0xDB04             BLT.N    ??Dev_cal_46
   1037          singleR=117;
   \   0000099C   0x2075             MOVS     R0,#+117
   \   0000099E   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   000009A2   0x6008             STR      R0,[R1, #+0]
   \   000009A4   0xE006             B.N      ??Dev_cal_47
   1038          else
   1039          singleR=midline+30;
   \                     ??Dev_cal_46: (+1)
   \   000009A6   0x.... 0x....      LDR.W    R0,??DataTable2_20
   \   000009AA   0x6800             LDR      R0,[R0, #+0]
   \   000009AC   0x301E             ADDS     R0,R0,#+30
   \   000009AE   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   000009B2   0x6008             STR      R0,[R1, #+0]
   1040          
   1041          
   1042          for(j=15;j<112;j++)
   \                     ??Dev_cal_47: (+1)
   \   000009B4   0x200F             MOVS     R0,#+15
   \   000009B6   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000009BA   0x6008             STR      R0,[R1, #+0]
   \   000009BC   0xE006             B.N      ??Dev_cal_48
   \                     ??Dev_cal_49: (+1)
   \   000009BE   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000009C2   0x6800             LDR      R0,[R0, #+0]
   \   000009C4   0x1C40             ADDS     R0,R0,#+1
   \   000009C6   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000009CA   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_48: (+1)
   \   000009CC   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000009D0   0x6800             LDR      R0,[R0, #+0]
   \   000009D2   0x2870             CMP      R0,#+112
   \   000009D4   0xDA43             BGE.N    ??Dev_cal_50
   1043          {
   1044          if((ADV[j-6]-ADV[j])>60&&(ADV[j+6]-ADV[j])>60)
   \   000009D6   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000009DA   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   000009DE   0x6809             LDR      R1,[R1, #+0]
   \   000009E0   0x1808             ADDS     R0,R1,R0
   \   000009E2   0xF810 0x0C06      LDRB     R0,[R0, #-6]
   \   000009E6   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000009EA   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   000009EE   0x6812             LDR      R2,[R2, #+0]
   \   000009F0   0x5C51             LDRB     R1,[R2, R1]
   \   000009F2   0x1A40             SUBS     R0,R0,R1
   \   000009F4   0x283D             CMP      R0,#+61
   \   000009F6   0xDBE2             BLT.N    ??Dev_cal_49
   \   000009F8   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   000009FC   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000A00   0x6809             LDR      R1,[R1, #+0]
   \   00000A02   0x1808             ADDS     R0,R1,R0
   \   00000A04   0x7980             LDRB     R0,[R0, #+6]
   \   00000A06   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000A0A   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000A0E   0x6812             LDR      R2,[R2, #+0]
   \   00000A10   0x5C51             LDRB     R1,[R2, R1]
   \   00000A12   0x1A40             SUBS     R0,R0,R1
   \   00000A14   0x283D             CMP      R0,#+61
   \   00000A16   0xDBD2             BLT.N    ??Dev_cal_49
   1045          if(ADV[j]<=ADV[j-1])
   \   00000A18   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000A1C   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000A20   0x6809             LDR      R1,[R1, #+0]
   \   00000A22   0x1808             ADDS     R0,R1,R0
   \   00000A24   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000A28   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000A2C   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000A30   0x6812             LDR      R2,[R2, #+0]
   \   00000A32   0x5C51             LDRB     R1,[R2, R1]
   \   00000A34   0x4288             CMP      R0,R1
   \   00000A36   0xD3C2             BCC.N    ??Dev_cal_49
   1046          if(ADV[j]<=ADV[j+1])
   \   00000A38   0x.... 0x....      LDR.W    R0,??DataTable2_4
   \   00000A3C   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   00000A40   0x6809             LDR      R1,[R1, #+0]
   \   00000A42   0x1808             ADDS     R0,R1,R0
   \   00000A44   0x7840             LDRB     R0,[R0, #+1]
   \   00000A46   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000A4A   0x.... 0x....      LDR.W    R2,??DataTable2_3
   \   00000A4E   0x6812             LDR      R2,[R2, #+0]
   \   00000A50   0x5C51             LDRB     R1,[R2, R1]
   \   00000A52   0x4288             CMP      R0,R1
   \   00000A54   0xD3B3             BCC.N    ??Dev_cal_49
   1047          //if(abs(midline-j)>25)
   1048          //if(abs(midline-j)>25)
   1049          { 
   1050          //BmaCnt=1;  
   1051          singleflag=1;
   \   00000A56   0x2001             MOVS     R0,#+1
   \   00000A58   0x.... 0x....      LDR.W    R1,??DataTable3_6
   \   00000A5C   0x6008             STR      R0,[R1, #+0]
   1052          //L_edgeFlag[0]=1;
   1053          //R_edgeFlag[0]=1;
   1054          //Ledge[0]=j-40;
   1055          //Redge[0]=j+40;
   1056          //midline=j; 
   1057          break;
   1058          }
   1059          
   1060          }  
   1061          
   1062          Singleflag[0]=singleflag;
   \                     ??Dev_cal_50: (+1)
   \   00000A5E   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000A62   0x6800             LDR      R0,[R0, #+0]
   \   00000A64   0x.... 0x....      LDR.W    R1,??DataTable3_10
   \   00000A68   0x6008             STR      R0,[R1, #+0]
   1063          
   1064          
   1065          
   1066          
   1067          if(Singleflag[0])
   \   00000A6A   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000A6E   0x6800             LDR      R0,[R0, #+0]
   \   00000A70   0x2800             CMP      R0,#+0
   \   00000A72   0xD00D             BEQ.N    ??Dev_cal_51
   1068          if(Singleflag[1])
   \   00000A74   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000A78   0x6840             LDR      R0,[R0, #+4]
   \   00000A7A   0x2800             CMP      R0,#+0
   \   00000A7C   0xD008             BEQ.N    ??Dev_cal_51
   1069          if(Singleflag[2])
   \   00000A7E   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000A82   0x6880             LDR      R0,[R0, #+8]
   \   00000A84   0x2800             CMP      R0,#+0
   \   00000A86   0xD003             BEQ.N    ??Dev_cal_51
   1070          single=1;
   \   00000A88   0x2001             MOVS     R0,#+1
   \   00000A8A   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   00000A8E   0x6008             STR      R0,[R1, #+0]
   1071          
   1072          
   1073          if(single)
   \                     ??Dev_cal_51: (+1)
   \   00000A90   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   00000A94   0x6800             LDR      R0,[R0, #+0]
   \   00000A96   0x2800             CMP      R0,#+0
   \   00000A98   0xD019             BEQ.N    ??Dev_cal_52
   1074          {
   1075          L_edgeFlag[0]=1;
   \   00000A9A   0x2001             MOVS     R0,#+1
   \   00000A9C   0x....             LDR.N    R1,??DataTable2_11
   \   00000A9E   0x7008             STRB     R0,[R1, #+0]
   1076          R_edgeFlag[0]=1;
   \   00000AA0   0x2001             MOVS     R0,#+1
   \   00000AA2   0x....             LDR.N    R1,??DataTable2_12
   \   00000AA4   0x7008             STRB     R0,[R1, #+0]
   1077          Ledge[0]=j-40;
   \   00000AA6   0x....             LDR.N    R0,??DataTable2_3
   \   00000AA8   0x6800             LDR      R0,[R0, #+0]
   \   00000AAA   0x3828             SUBS     R0,R0,#+40
   \   00000AAC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000AB0   0x6008             STR      R0,[R1, #+0]
   1078          Redge[0]=j+40;
   \   00000AB2   0x....             LDR.N    R0,??DataTable2_3
   \   00000AB4   0x6800             LDR      R0,[R0, #+0]
   \   00000AB6   0x3028             ADDS     R0,R0,#+40
   \   00000AB8   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000ABC   0x6008             STR      R0,[R1, #+0]
   1079          midline=j;
   \   00000ABE   0x....             LDR.N    R0,??DataTable2_3
   \   00000AC0   0x6800             LDR      R0,[R0, #+0]
   \   00000AC2   0x....             LDR.N    R1,??DataTable2_20
   \   00000AC4   0x6008             STR      R0,[R1, #+0]
   1080          
   1081          
   1082          {
   1083          //midline = (int)(save_midline[0]);
   1084          BmaCnt=1;
   \   00000AC6   0x2001             MOVS     R0,#+1
   \   00000AC8   0x.... 0x....      LDR.W    R1,??DataTable3_11
   \   00000ACC   0x7008             STRB     R0,[R1, #+0]
   1085          }
   1086          
   1087          
   1088          }
   1089          
   1090          
   1091          
   1092          
   1093          
   1094          
   1095          
   1096          
   1097          
   1098          if(single)
   \                     ??Dev_cal_52: (+1)
   \   00000ACE   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   00000AD2   0x6800             LDR      R0,[R0, #+0]
   \   00000AD4   0x2800             CMP      R0,#+0
   \   00000AD6   0xD071             BEQ.N    ??Dev_cal_43
   1099          {
   1100          if(Ledge[0]<10)L_edgeFlag[0]=0;
   \   00000AD8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000ADC   0x6800             LDR      R0,[R0, #+0]
   \   00000ADE   0x280A             CMP      R0,#+10
   \   00000AE0   0xDA02             BGE.N    ??Dev_cal_53
   \   00000AE2   0x2000             MOVS     R0,#+0
   \   00000AE4   0x....             LDR.N    R1,??DataTable2_11
   \   00000AE6   0x7008             STRB     R0,[R1, #+0]
   1101          if(Redge[0]>117)R_edgeFlag[0]=0;
   \                     ??Dev_cal_53: (+1)
   \   00000AE8   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000AEC   0x6800             LDR      R0,[R0, #+0]
   \   00000AEE   0x2876             CMP      R0,#+118
   \   00000AF0   0xDB02             BLT.N    ??Dev_cal_54
   \   00000AF2   0x2000             MOVS     R0,#+0
   \   00000AF4   0x....             LDR.N    R1,??DataTable2_12
   \   00000AF6   0x7008             STRB     R0,[R1, #+0]
   1102          
   1103          if(Ledge[0]>Redge[0])
   \                     ??Dev_cal_54: (+1)
   \   00000AF8   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000AFC   0x6800             LDR      R0,[R0, #+0]
   \   00000AFE   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000B02   0x6809             LDR      R1,[R1, #+0]
   \   00000B04   0x4288             CMP      R0,R1
   \   00000B06   0xDA18             BGE.N    ??Dev_cal_55
   1104          {
   1105          L_edgeFlag[0]=0;
   \   00000B08   0x2000             MOVS     R0,#+0
   \   00000B0A   0x....             LDR.N    R1,??DataTable2_11
   \   00000B0C   0x7008             STRB     R0,[R1, #+0]
   1106          R_edgeFlag[0]=0;
   \   00000B0E   0x2000             MOVS     R0,#+0
   \   00000B10   0x....             LDR.N    R1,??DataTable2_12
   \   00000B12   0x7008             STRB     R0,[R1, #+0]
   1107          Redge[0]=Redge[1];
   \   00000B14   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000B18   0x6840             LDR      R0,[R0, #+4]
   \   00000B1A   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000B1E   0x6008             STR      R0,[R1, #+0]
   1108          Ledge[0]=Ledge[1];
   \   00000B20   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000B24   0x6840             LDR      R0,[R0, #+4]
   \   00000B26   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000B2A   0x6008             STR      R0,[R1, #+0]
   1109          len_show[0]=len_show[1];        
   \   00000B2C   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   00000B30   0x7840             LDRB     R0,[R0, #+1]
   \   00000B32   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000B36   0x7008             STRB     R0,[R1, #+0]
   \   00000B38   0xE040             B.N      ??Dev_cal_43
   1110          }
   1111          else
   1112          {
   1113          if(L_edgeFlag[0]+R_edgeFlag[0]==2)
   \                     ??Dev_cal_55: (+1)
   \   00000B3A   0x....             LDR.N    R0,??DataTable2_11
   \   00000B3C   0x7800             LDRB     R0,[R0, #+0]
   \   00000B3E   0x....             LDR.N    R1,??DataTable2_12
   \   00000B40   0x7809             LDRB     R1,[R1, #+0]
   \   00000B42   0x1808             ADDS     R0,R1,R0
   \   00000B44   0x2802             CMP      R0,#+2
   \   00000B46   0xD127             BNE.N    ??Dev_cal_56
   1114          {  
   1115          len_show[0]=Redge[0]-Ledge[0];
   \   00000B48   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000B4C   0x6800             LDR      R0,[R0, #+0]
   \   00000B4E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000B52   0x6809             LDR      R1,[R1, #+0]
   \   00000B54   0x1A40             SUBS     R0,R0,R1
   \   00000B56   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000B5A   0x7008             STRB     R0,[R1, #+0]
   1116          
   1117          if(len_show[0]<40)
   \   00000B5C   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   00000B60   0x7800             LDRB     R0,[R0, #+0]
   \   00000B62   0x2828             CMP      R0,#+40
   \   00000B64   0xDA2A             BGE.N    ??Dev_cal_43
   1118          {
   1119          L_edgeFlag[0]=0;
   \   00000B66   0x2000             MOVS     R0,#+0
   \   00000B68   0x....             LDR.N    R1,??DataTable2_11
   \   00000B6A   0x7008             STRB     R0,[R1, #+0]
   1120          R_edgeFlag[0]=0;
   \   00000B6C   0x2000             MOVS     R0,#+0
   \   00000B6E   0x....             LDR.N    R1,??DataTable2_12
   \   00000B70   0x7008             STRB     R0,[R1, #+0]
   1121          Redge[0]=Redge[1];
   \   00000B72   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000B76   0x6840             LDR      R0,[R0, #+4]
   \   00000B78   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000B7C   0x6008             STR      R0,[R1, #+0]
   1122          Ledge[0]=Ledge[1];
   \   00000B7E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000B82   0x6840             LDR      R0,[R0, #+4]
   \   00000B84   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000B88   0x6008             STR      R0,[R1, #+0]
   1123          len_show[0]=len_show[1];    
   \   00000B8A   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   00000B8E   0x7840             LDRB     R0,[R0, #+1]
   \   00000B90   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000B94   0x7008             STRB     R0,[R1, #+0]
   \   00000B96   0xE011             B.N      ??Dev_cal_43
   1124          }
   1125          }
   1126          else
   1127          {
   1128          Redge[0]=Redge[1];
   \                     ??Dev_cal_56: (+1)
   \   00000B98   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000B9C   0x6840             LDR      R0,[R0, #+4]
   \   00000B9E   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000BA2   0x6008             STR      R0,[R1, #+0]
   1129          Ledge[0]=Ledge[1]; 
   \   00000BA4   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000BA8   0x6840             LDR      R0,[R0, #+4]
   \   00000BAA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000BAE   0x6008             STR      R0,[R1, #+0]
   1130          len_show[0]=len_show[1];
   \   00000BB0   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   00000BB4   0x7840             LDRB     R0,[R0, #+1]
   \   00000BB6   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000BBA   0x7008             STRB     R0,[R1, #+0]
   1131          }    
   1132          } 
   1133          }
   1134          }
   1135          
   1136          
   1137          
   1138          
   1139          //***************************************************************************** 
   1140          //存储跳沿位置
   1141          //*****************************************************************************         
   1142          
   1143          
   1144          
   1145          for(j=28;j>=0;j--)                      
   \                     ??Dev_cal_43: (+1)
   \   00000BBC   0x201C             MOVS     R0,#+28
   \   00000BBE   0x....             LDR.N    R1,??DataTable2_3
   \   00000BC0   0x6008             STR      R0,[R1, #+0]
   \   00000BC2   0xE030             B.N      ??Dev_cal_57
   1146          {
   1147          L_edgeFlag[j+1]=L_edgeFlag[j];
   \                     ??Dev_cal_58: (+1)
   \   00000BC4   0x....             LDR.N    R0,??DataTable2_11
   \   00000BC6   0x....             LDR.N    R1,??DataTable2_3
   \   00000BC8   0x6809             LDR      R1,[R1, #+0]
   \   00000BCA   0x5C08             LDRB     R0,[R1, R0]
   \   00000BCC   0x....             LDR.N    R1,??DataTable2_11
   \   00000BCE   0x....             LDR.N    R2,??DataTable2_3
   \   00000BD0   0x6812             LDR      R2,[R2, #+0]
   \   00000BD2   0x1851             ADDS     R1,R2,R1
   \   00000BD4   0x7048             STRB     R0,[R1, #+1]
   1148          R_edgeFlag[j+1]=R_edgeFlag[j]; 
   \   00000BD6   0x....             LDR.N    R0,??DataTable2_12
   \   00000BD8   0x....             LDR.N    R1,??DataTable2_3
   \   00000BDA   0x6809             LDR      R1,[R1, #+0]
   \   00000BDC   0x5C08             LDRB     R0,[R1, R0]
   \   00000BDE   0x....             LDR.N    R1,??DataTable2_12
   \   00000BE0   0x....             LDR.N    R2,??DataTable2_3
   \   00000BE2   0x6812             LDR      R2,[R2, #+0]
   \   00000BE4   0x1851             ADDS     R1,R2,R1
   \   00000BE6   0x7048             STRB     R0,[R1, #+1]
   1149          Ledge[j+1]=Ledge[j];
   \   00000BE8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000BEC   0x....             LDR.N    R1,??DataTable2_3
   \   00000BEE   0x6809             LDR      R1,[R1, #+0]
   \   00000BF0   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000BF4   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000BF8   0x....             LDR.N    R2,??DataTable2_3
   \   00000BFA   0x6812             LDR      R2,[R2, #+0]
   \   00000BFC   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000C00   0x6048             STR      R0,[R1, #+4]
   1150          Redge[j+1]=Redge[j]; 
   \   00000C02   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000C06   0x....             LDR.N    R1,??DataTable2_3
   \   00000C08   0x6809             LDR      R1,[R1, #+0]
   \   00000C0A   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000C0E   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000C12   0x....             LDR.N    R2,??DataTable2_3
   \   00000C14   0x6812             LDR      R2,[R2, #+0]
   \   00000C16   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000C1A   0x6048             STR      R0,[R1, #+4]
   1151          }
   \   00000C1C   0x....             LDR.N    R0,??DataTable2_3
   \   00000C1E   0x6800             LDR      R0,[R0, #+0]
   \   00000C20   0x1E40             SUBS     R0,R0,#+1
   \   00000C22   0x....             LDR.N    R1,??DataTable2_3
   \   00000C24   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_57: (+1)
   \   00000C26   0x....             LDR.N    R0,??DataTable2_3
   \   00000C28   0x6800             LDR      R0,[R0, #+0]
   \   00000C2A   0x2800             CMP      R0,#+0
   \   00000C2C   0xD5CA             BPL.N    ??Dev_cal_58
   1152          
   1153          
   1154          for(j=7;j>=0;j--)                       
   \   00000C2E   0x2007             MOVS     R0,#+7
   \   00000C30   0x....             LDR.N    R1,??DataTable2_3
   \   00000C32   0x6008             STR      R0,[R1, #+0]
   \   00000C34   0xE04C             B.N      ??Dev_cal_59
   1155          {
   1156          Startl[j+1]=Startl[j];
   \                     ??Dev_cal_60: (+1)
   \   00000C36   0x....             LDR.N    R0,??DataTable2_19
   \   00000C38   0x....             LDR.N    R1,??DataTable2_3
   \   00000C3A   0x6809             LDR      R1,[R1, #+0]
   \   00000C3C   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000C40   0x....             LDR.N    R1,??DataTable2_19
   \   00000C42   0x....             LDR.N    R2,??DataTable2_3
   \   00000C44   0x6812             LDR      R2,[R2, #+0]
   \   00000C46   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000C4A   0x6048             STR      R0,[R1, #+4]
   1157          Startr[j+1]=Startr[j]; 
   \   00000C4C   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000C50   0x....             LDR.N    R1,??DataTable2_3
   \   00000C52   0x6809             LDR      R1,[R1, #+0]
   \   00000C54   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000C58   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000C5C   0x....             LDR.N    R2,??DataTable2_3
   \   00000C5E   0x6812             LDR      R2,[R2, #+0]
   \   00000C60   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000C64   0x6048             STR      R0,[R1, #+4]
   1158          straightFlag[j+1]=straightFlag[j];
   \   00000C66   0x.... 0x....      LDR.W    R0,??DataTable3_12
   \   00000C6A   0x....             LDR.N    R1,??DataTable2_3
   \   00000C6C   0x6809             LDR      R1,[R1, #+0]
   \   00000C6E   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000C72   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   00000C76   0x....             LDR.N    R2,??DataTable2_3
   \   00000C78   0x6812             LDR      R2,[R2, #+0]
   \   00000C7A   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000C7E   0x6048             STR      R0,[R1, #+4]
   1159          len_show[j+1]=len_show[j];
   \   00000C80   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   00000C84   0x....             LDR.N    R1,??DataTable2_3
   \   00000C86   0x6809             LDR      R1,[R1, #+0]
   \   00000C88   0x5C08             LDRB     R0,[R1, R0]
   \   00000C8A   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000C8E   0x....             LDR.N    R2,??DataTable2_3
   \   00000C90   0x6812             LDR      R2,[R2, #+0]
   \   00000C92   0x1851             ADDS     R1,R2,R1
   \   00000C94   0x7048             STRB     R0,[R1, #+1]
   1160          Cnt[j+1]=Cnt[j];
   \   00000C96   0x....             LDR.N    R0,??DataTable2_6
   \   00000C98   0x....             LDR.N    R1,??DataTable2_3
   \   00000C9A   0x6809             LDR      R1,[R1, #+0]
   \   00000C9C   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000CA0   0x....             LDR.N    R1,??DataTable2_6
   \   00000CA2   0x....             LDR.N    R2,??DataTable2_3
   \   00000CA4   0x6812             LDR      R2,[R2, #+0]
   \   00000CA6   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000CAA   0x6048             STR      R0,[R1, #+4]
   1161          Singleflag[j+1]=Singleflag[j];
   \   00000CAC   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000CB0   0x....             LDR.N    R1,??DataTable2_3
   \   00000CB2   0x6809             LDR      R1,[R1, #+0]
   \   00000CB4   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000CB8   0x.... 0x....      LDR.W    R1,??DataTable3_10
   \   00000CBC   0x....             LDR.N    R2,??DataTable2_3
   \   00000CBE   0x6812             LDR      R2,[R2, #+0]
   \   00000CC0   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000CC4   0x6048             STR      R0,[R1, #+4]
   1162          } 
   \   00000CC6   0x....             LDR.N    R0,??DataTable2_3
   \   00000CC8   0x6800             LDR      R0,[R0, #+0]
   \   00000CCA   0x1E40             SUBS     R0,R0,#+1
   \   00000CCC   0x....             LDR.N    R1,??DataTable2_3
   \   00000CCE   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_59: (+1)
   \   00000CD0   0x....             LDR.N    R0,??DataTable2_3
   \   00000CD2   0x6800             LDR      R0,[R0, #+0]
   \   00000CD4   0x2800             CMP      R0,#+0
   \   00000CD6   0xD5AE             BPL.N    ??Dev_cal_60
   1163          
   1164          
   1165          for(j=118;j>=0;j--)
   \   00000CD8   0x2076             MOVS     R0,#+118
   \   00000CDA   0x....             LDR.N    R1,??DataTable2_3
   \   00000CDC   0x6008             STR      R0,[R1, #+0]
   \   00000CDE   0xE01A             B.N      ??Dev_cal_61
   1166          {
   1167          CNT[j+1]=CNT[j];
   \                     ??Dev_cal_62: (+1)
   \   00000CE0   0x....             LDR.N    R0,??DataTable2_7
   \   00000CE2   0x....             LDR.N    R1,??DataTable2_3
   \   00000CE4   0x6809             LDR      R1,[R1, #+0]
   \   00000CE6   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000CEA   0x....             LDR.N    R1,??DataTable2_7
   \   00000CEC   0x....             LDR.N    R2,??DataTable2_3
   \   00000CEE   0x6812             LDR      R2,[R2, #+0]
   \   00000CF0   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000CF4   0x6048             STR      R0,[R1, #+4]
   1168          THreshold[j+1]=THreshold[j];
   \   00000CF6   0x....             LDR.N    R0,??DataTable2_9
   \   00000CF8   0x....             LDR.N    R1,??DataTable2_3
   \   00000CFA   0x6809             LDR      R1,[R1, #+0]
   \   00000CFC   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000D00   0x....             LDR.N    R1,??DataTable2_9
   \   00000D02   0x....             LDR.N    R2,??DataTable2_3
   \   00000D04   0x6812             LDR      R2,[R2, #+0]
   \   00000D06   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000D0A   0x6048             STR      R0,[R1, #+4]
   1169          }
   \   00000D0C   0x....             LDR.N    R0,??DataTable2_3
   \   00000D0E   0x6800             LDR      R0,[R0, #+0]
   \   00000D10   0x1E40             SUBS     R0,R0,#+1
   \   00000D12   0x....             LDR.N    R1,??DataTable2_3
   \   00000D14   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_61: (+1)
   \   00000D16   0x....             LDR.N    R0,??DataTable2_3
   \   00000D18   0x6800             LDR      R0,[R0, #+0]
   \   00000D1A   0x2800             CMP      R0,#+0
   \   00000D1C   0xD5E0             BPL.N    ??Dev_cal_62
   1170          
   1171          for(j=18;j>=0;j--)
   \   00000D1E   0x2012             MOVS     R0,#+18
   \   00000D20   0x....             LDR.N    R1,??DataTable2_3
   \   00000D22   0x6008             STR      R0,[R1, #+0]
   \   00000D24   0xE01A             B.N      ??Dev_cal_63
   1172          {     
   1173          GrayMIN[j+1]=GrayMIN[j];
   \                     ??Dev_cal_64: (+1)
   \   00000D26   0x....             LDR.N    R0,??DataTable2_15
   \   00000D28   0x....             LDR.N    R1,??DataTable2_3
   \   00000D2A   0x6809             LDR      R1,[R1, #+0]
   \   00000D2C   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000D30   0x....             LDR.N    R1,??DataTable2_15
   \   00000D32   0x....             LDR.N    R2,??DataTable2_3
   \   00000D34   0x6812             LDR      R2,[R2, #+0]
   \   00000D36   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000D3A   0x6048             STR      R0,[R1, #+4]
   1174          GrayMAX[j+1]=GrayMAX[j];
   \   00000D3C   0x....             LDR.N    R0,??DataTable2_16
   \   00000D3E   0x....             LDR.N    R1,??DataTable2_3
   \   00000D40   0x6809             LDR      R1,[R1, #+0]
   \   00000D42   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000D46   0x....             LDR.N    R1,??DataTable2_16
   \   00000D48   0x....             LDR.N    R2,??DataTable2_3
   \   00000D4A   0x6812             LDR      R2,[R2, #+0]
   \   00000D4C   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   00000D50   0x6048             STR      R0,[R1, #+4]
   1175          
   1176          } 
   \   00000D52   0x....             LDR.N    R0,??DataTable2_3
   \   00000D54   0x6800             LDR      R0,[R0, #+0]
   \   00000D56   0x1E40             SUBS     R0,R0,#+1
   \   00000D58   0x....             LDR.N    R1,??DataTable2_3
   \   00000D5A   0x6008             STR      R0,[R1, #+0]
   \                     ??Dev_cal_63: (+1)
   \   00000D5C   0x....             LDR.N    R0,??DataTable2_3
   \   00000D5E   0x6800             LDR      R0,[R0, #+0]
   \   00000D60   0x2800             CMP      R0,#+0
   \   00000D62   0xD5E0             BPL.N    ??Dev_cal_64
   1177          
   1178          
   1179          
   1180          
   1181          
   1182          
   1183          
   1184          
   1185          
   1186          
   1187          LGrayMax=GrayMax-5;
   \   00000D64   0x....             LDR.N    R0,??DataTable2_14
   \   00000D66   0x6800             LDR      R0,[R0, #+0]
   \   00000D68   0x1F40             SUBS     R0,R0,#+5
   \   00000D6A   0x....             LDR.N    R1,??DataTable2_5
   \   00000D6C   0x6008             STR      R0,[R1, #+0]
   1188          
   1189          
   1190          if(LGrayMax<200)
   \   00000D6E   0x....             LDR.N    R0,??DataTable2_5
   \   00000D70   0x6800             LDR      R0,[R0, #+0]
   \   00000D72   0x28C8             CMP      R0,#+200
   \   00000D74   0xDA02             BGE.N    ??Dev_cal_65
   1191          LGrayMax=200;         
   \   00000D76   0x20C8             MOVS     R0,#+200
   \   00000D78   0x....             LDR.N    R1,??DataTable2_5
   \   00000D7A   0x6008             STR      R0,[R1, #+0]
   1192          
   1193          
   1194          }
   \                     ??Dev_cal_65: (+1)
   \   00000D7C   0x4770             BX       LR               ;; return
   1195          
   1196          
   1197          
   1198          
   1199          
   1200          
   1201          

   \                                 In section .bss, align 4
   1202          int add_midline;
   \                     add_midline:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   1203          int R;
   \                     R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   1204          int weight_max=80;
   \                     weight_max:
   \   00000000   0x00000050         DC32 80
   1205          
   1206          

   \                                 In section .bss, align 4
   1207          int Weight_Denominator=0;
   \                     Weight_Denominator:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   1208          int Weight_Molecular=0; 
   \                     Weight_Molecular:
   \   00000000                      DS8 4
   1209          //******************************************************************************      
   1210          //控制函数
   1211          //****************************************************************************** 

   \                                 In section .text, align 2, keep-with-next
   1212          void  Control()
   1213          
   1214          {
   \                     Control: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   1215          
   1216          Weight_Denominator=0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable3_13
   \   0000000A   0x6008             STR      R0,[R1, #+0]
   1217          Weight_Molecular=0; 
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable3_14
   \   00000012   0x6008             STR      R0,[R1, #+0]
   1218          
   1219          
   1220          
   1221          
   1222          
   1223          if(!single)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD153             BNE.N    ??Control_0
   1224          
   1225          {
   1226          if(L_edgeFlag[0]+R_edgeFlag[0]==2)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable3_16
   \   00000028   0x7809             LDRB     R1,[R1, #+0]
   \   0000002A   0x1808             ADDS     R0,R1,R0
   \   0000002C   0x2802             CMP      R0,#+2
   \   0000002E   0xD10C             BNE.N    ??Control_1
   1227          {         
   1228          midline = (Ledge[1] + Redge[1])/2;
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000034   0x6840             LDR      R0,[R0, #+4]
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   0000003A   0x6849             LDR      R1,[R1, #+4]
   \   0000003C   0x1808             ADDS     R0,R1,R0
   \   0000003E   0x2102             MOVS     R1,#+2
   \   00000040   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   00000048   0x6008             STR      R0,[R1, #+0]
   1229          }           
   1230          if((L_edgeFlag[0]==0)&&(R_edgeFlag[0]==1))
   \                     ??Control_1: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD111             BNE.N    ??Control_2
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x2801             CMP      R0,#+1
   \   0000005C   0xD10C             BNE.N    ??Control_2
   1231          { 
   1232          //BmaCnt=10;
   1233          // midline = Redge[1]-45;
   1234          midline = Redge[1]-len_show[2]/2;         
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000062   0x6840             LDR      R0,[R0, #+4]
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000068   0x7889             LDRB     R1,[R1, #+2]
   \   0000006A   0x2202             MOVS     R2,#+2
   \   0000006C   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000070   0x1A40             SUBS     R0,R0,R1
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   00000076   0x6008             STR      R0,[R1, #+0]
   1235          }    
   1236          if((R_edgeFlag[0]==0)&&(L_edgeFlag[0]==1))
   \                     ??Control_2: (+1)
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD111             BNE.N    ??Control_3
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0x2801             CMP      R0,#+1
   \   0000008A   0xD10C             BNE.N    ??Control_3
   1237          { 
   1238          //BmaCnt=10;
   1239          //midline = Ledge[1]+45;
   1240          midline = Ledge[1]+len_show[2]/2;  
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000090   0x6840             LDR      R0,[R0, #+4]
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000096   0x7889             LDRB     R1,[R1, #+2]
   \   00000098   0x2202             MOVS     R2,#+2
   \   0000009A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000009E   0x1808             ADDS     R0,R1,R0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   1241          }     
   1242          if((R_edgeFlag[0]==0)&&(L_edgeFlag[0]==0))
   \                     ??Control_3: (+1)
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD10A             BNE.N    ??Control_0
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD105             BNE.N    ??Control_0
   1243          {          
   1244          midline = (int)(save_midline[1]); 
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable3_18
   \   000000BE   0x7840             LDRB     R0,[R0, #+1]
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   000000C4   0x6008             STR      R0,[R1, #+0]
   1245          }
   1246          }
   1247          
   1248          //******************************************************************************
   1249          // 中值限幅
   1250          //****************************************************************************** 
   1251          
   1252          
   1253          
   1254          
   1255          
   1256          
   1257          
   1258          
   1259          
   1260          if(midline<15)
   \                     ??Control_0: (+1)
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x280F             CMP      R0,#+15
   \   000000CE   0xDA03             BGE.N    ??Control_4
   1261          {
   1262          midline=15;
   \   000000D0   0x200F             MOVS     R0,#+15
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   000000D6   0x6008             STR      R0,[R1, #+0]
   1263          }
   1264          if(midline>112)
   \                     ??Control_4: (+1)
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x2871             CMP      R0,#+113
   \   000000E0   0xDB03             BLT.N    ??Control_5
   1265          {
   1266          midline=112;
   \   000000E2   0x2070             MOVS     R0,#+112
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   000000E8   0x6008             STR      R0,[R1, #+0]
   1267          }   
   1268          
   1269          
   1270          
   1271          
   1272          
   1273          
   1274          
   1275          
   1276          
   1277          
   1278          for(j=7;j>=0;j--)  
   \                     ??Control_5: (+1)
   \   000000EA   0x2007             MOVS     R0,#+7
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable3_19
   \   000000F0   0x6008             STR      R0,[R1, #+0]
   \   000000F2   0xE013             B.N      ??Control_6
   1279          { 
   1280          save_midline[j+1]=save_midline[j];
   \                     ??Control_7: (+1)
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable3_18
   \   000000F8   0x.... 0x....      LDR.W    R1,??DataTable3_19
   \   000000FC   0x6809             LDR      R1,[R1, #+0]
   \   000000FE   0x5C08             LDRB     R0,[R1, R0]
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable3_18
   \   00000104   0x.... 0x....      LDR.W    R2,??DataTable3_19
   \   00000108   0x6812             LDR      R2,[R2, #+0]
   \   0000010A   0x1851             ADDS     R1,R2,R1
   \   0000010C   0x7048             STRB     R0,[R1, #+1]
   1281          }                
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable3_19
   \   00000112   0x6800             LDR      R0,[R0, #+0]
   \   00000114   0x1E40             SUBS     R0,R0,#+1
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable3_19
   \   0000011A   0x6008             STR      R0,[R1, #+0]
   \                     ??Control_6: (+1)
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable3_19
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0x2800             CMP      R0,#+0
   \   00000124   0xD5E6             BPL.N    ??Control_7
   1282          save_midline[0]=midline; 
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0x.... 0x....      LDR.W    R1,??DataTable3_18
   \   00000130   0x7008             STRB     R0,[R1, #+0]
   1283          
   1284          
   1285          
   1286          
   1287          
   1288          
   1289          for(j=0;j<4;j++)
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable3_19
   \   00000138   0x6008             STR      R0,[R1, #+0]
   \   0000013A   0xE03F             B.N      ??Control_8
   1290          {
   1291          
   1292          weight[j] = weight_max-(weight_max-weight_Min)*j/4; 
   \                     ??Control_9: (+1)
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   00000146   0x6809             LDR      R1,[R1, #+0]
   \   00000148   0x.... 0x....      LDR.W    R2,??DataTable3_21
   \   0000014C   0x6812             LDR      R2,[R2, #+0]
   \   0000014E   0x1A89             SUBS     R1,R1,R2
   \   00000150   0x.... 0x....      LDR.W    R2,??DataTable3_19
   \   00000154   0x6812             LDR      R2,[R2, #+0]
   \   00000156   0x4351             MULS     R1,R2,R1
   \   00000158   0x2204             MOVS     R2,#+4
   \   0000015A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000015E   0x1A40             SUBS     R0,R0,R1
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable3_22
   \   00000164   0x.... 0x....      LDR.W    R2,??DataTable3_19
   \   00000168   0x6812             LDR      R2,[R2, #+0]
   \   0000016A   0xF841 0x0022      STR      R0,[R1, R2, LSL #+2]
   1293          dir_error = save_midline[j]-Midline;                      
   \   0000016E   0x....             LDR.N    R0,??DataTable3_18
   \   00000170   0x....             LDR.N    R1,??DataTable3_19
   \   00000172   0x6809             LDR      R1,[R1, #+0]
   \   00000174   0x5C08             LDRB     R0,[R1, R0]
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   0000017A   0x6809             LDR      R1,[R1, #+0]
   \   0000017C   0x1A40             SUBS     R0,R0,R1
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable3_24
   \   00000182   0x6008             STR      R0,[R1, #+0]
   1294          Weight_Molecular += (dir_error)*weight[j];
   \   00000184   0x....             LDR.N    R0,??DataTable3_14
   \   00000186   0x6800             LDR      R0,[R0, #+0]
   \   00000188   0x....             LDR.N    R1,??DataTable3_24
   \   0000018A   0x6809             LDR      R1,[R1, #+0]
   \   0000018C   0x....             LDR.N    R2,??DataTable3_22
   \   0000018E   0x....             LDR.N    R3,??DataTable3_19
   \   00000190   0x681B             LDR      R3,[R3, #+0]
   \   00000192   0xF852 0x2023      LDR      R2,[R2, R3, LSL #+2]
   \   00000196   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000019A   0x....             LDR.N    R1,??DataTable3_14
   \   0000019C   0x6008             STR      R0,[R1, #+0]
   1295          Weight_Denominator += weight[j];
   \   0000019E   0x....             LDR.N    R0,??DataTable3_13
   \   000001A0   0x6800             LDR      R0,[R0, #+0]
   \   000001A2   0x....             LDR.N    R1,??DataTable3_22
   \   000001A4   0x....             LDR.N    R2,??DataTable3_19
   \   000001A6   0x6812             LDR      R2,[R2, #+0]
   \   000001A8   0xF851 0x1022      LDR      R1,[R1, R2, LSL #+2]
   \   000001AC   0x1808             ADDS     R0,R1,R0
   \   000001AE   0x....             LDR.N    R1,??DataTable3_13
   \   000001B0   0x6008             STR      R0,[R1, #+0]
   1296          }
   \   000001B2   0x....             LDR.N    R0,??DataTable3_19
   \   000001B4   0x6800             LDR      R0,[R0, #+0]
   \   000001B6   0x1C40             ADDS     R0,R0,#+1
   \   000001B8   0x....             LDR.N    R1,??DataTable3_19
   \   000001BA   0x6008             STR      R0,[R1, #+0]
   \                     ??Control_8: (+1)
   \   000001BC   0x....             LDR.N    R0,??DataTable3_19
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x2804             CMP      R0,#+4
   \   000001C2   0xDBBB             BLT.N    ??Control_9
   1297          
   1298          ess = Weight_Molecular/Weight_Denominator;
   \   000001C4   0x....             LDR.N    R0,??DataTable3_14
   \   000001C6   0x6800             LDR      R0,[R0, #+0]
   \   000001C8   0x....             LDR.N    R1,??DataTable3_13
   \   000001CA   0x6809             LDR      R1,[R1, #+0]
   \   000001CC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001D0   0x.... 0x....      BL       __aeabi_i2f
   \   000001D4   0x....             LDR.N    R1,??DataTable3_25
   \   000001D6   0x6008             STR      R0,[R1, #+0]
   1299          
   1300          
   1301          
   1302          long SteerDis[2] = 0;           //微分项a
   \   000001D8   0xA804             ADD      R0,SP,#+16
   \   000001DA   0x2100             MOVS     R1,#+0
   \   000001DC   0x2200             MOVS     R2,#+0
   \   000001DE   0xC006             STM      R0!,{R1,R2}
   \   000001E0   0x3808             SUBS     R0,R0,#+8
   1303          float TurnGyroDis[2] = 0;
   \   000001E2   0xA802             ADD      R0,SP,#+8
   \   000001E4   0x2100             MOVS     R1,#+0
   \   000001E6   0x2200             MOVS     R2,#+0
   \   000001E8   0xC006             STM      R0!,{R1,R2}
   \   000001EA   0x3808             SUBS     R0,R0,#+8
   1304          float TurnUda = 0.0;
   \   000001EC   0x2400             MOVS     R4,#+0
   1305          float TurnUd[2] = 0;      
   \   000001EE   0xA800             ADD      R0,SP,#+0
   \   000001F0   0x2100             MOVS     R1,#+0
   \   000001F2   0x2200             MOVS     R2,#+0
   \   000001F4   0xC006             STM      R0!,{R1,R2}
   \   000001F6   0x3808             SUBS     R0,R0,#+8
   1306          int TurnGyrodis = 0; 
   \   000001F8   0x2500             MOVS     R5,#+0
   1307          
   1308          TurnGyroDis[1] = TurnGyroDis[0];
   \   000001FA   0x9802             LDR      R0,[SP, #+8]
   \   000001FC   0x9003             STR      R0,[SP, #+12]
   1309          TurnUd[1] = TurnUd[0];
   \   000001FE   0x9800             LDR      R0,[SP, #+0]
   \   00000200   0x9001             STR      R0,[SP, #+4]
   1310          SteerDis[1] = SteerDis[0];
   \   00000202   0x9804             LDR      R0,[SP, #+16]
   \   00000204   0x9005             STR      R0,[SP, #+20]
   1311          
   1312          
   1313          // while(1)
   1314          {
   1315          TurnGyro = ad_once(ADC1,AD14,ADC_12bit);
   \   00000206   0x2201             MOVS     R2,#+1
   \   00000208   0x210E             MOVS     R1,#+14
   \   0000020A   0x2001             MOVS     R0,#+1
   \   0000020C   0x.... 0x....      BL       ad_once
   \   00000210   0x.... 0x....      BL       __aeabi_ui2f
   \   00000214   0x....             LDR.N    R1,??DataTable3_26
   \   00000216   0x6008             STR      R0,[R1, #+0]
   1316          }
   1317          TurnGyrodis = (int)((TurnGyro - TurnGyro_offset) * 0.33);
   \   00000218   0x....             LDR.N    R0,??DataTable3_26
   \   0000021A   0x6800             LDR      R0,[R0, #+0]
   \   0000021C   0x....             LDR.N    R1,??DataTable3_27
   \   0000021E   0x6809             LDR      R1,[R1, #+0]
   \   00000220   0x.... 0x....      BL       __aeabi_fsub
   \   00000224   0x.... 0x....      BL       __aeabi_f2d
   \   00000228   0x....             LDR.N    R2,??DataTable3_28  ;; 0x51eb851f
   \   0000022A   0x....             LDR.N    R3,??DataTable3_29  ;; 0x3fd51eb8
   \   0000022C   0x.... 0x....      BL       __aeabi_dmul
   \   00000230   0x.... 0x....      BL       __aeabi_d2iz
   \   00000234   0x0005             MOVS     R5,R0
   1318          
   1319          TurnUd[0] = -D_D* TurnGyrodis;
   \   00000236   0x0028             MOVS     R0,R5
   \   00000238   0x.... 0x....      BL       __aeabi_i2f
   \   0000023C   0x....             LDR.N    R1,??DataTable3_30
   \   0000023E   0x6809             LDR      R1,[R1, #+0]
   \   00000240   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000244   0x.... 0x....      BL       __aeabi_fmul
   \   00000248   0x9000             STR      R0,[SP, #+0]
   1320          
   1321          
   1322          R=(ess*ess+H*H)/(2*ess);
   \   0000024A   0x....             LDR.N    R0,??DataTable3_25
   \   0000024C   0x6801             LDR      R1,[R0, #+0]
   \   0000024E   0x....             LDR.N    R0,??DataTable3_25
   \   00000250   0x6800             LDR      R0,[R0, #+0]
   \   00000252   0x.... 0x....      BL       __aeabi_fmul
   \   00000256   0x0005             MOVS     R5,R0
   \   00000258   0x....             LDR.N    R0,??DataTable3_31
   \   0000025A   0x6800             LDR      R0,[R0, #+0]
   \   0000025C   0x....             LDR.N    R1,??DataTable3_31
   \   0000025E   0x6809             LDR      R1,[R1, #+0]
   \   00000260   0x4348             MULS     R0,R1,R0
   \   00000262   0x.... 0x....      BL       __aeabi_i2f
   \   00000266   0x0029             MOVS     R1,R5
   \   00000268   0x.... 0x....      BL       __aeabi_fadd
   \   0000026C   0x0005             MOVS     R5,R0
   \   0000026E   0x....             LDR.N    R0,??DataTable3_25
   \   00000270   0x6801             LDR      R1,[R0, #+0]
   \   00000272   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000276   0x.... 0x....      BL       __aeabi_fmul
   \   0000027A   0x0001             MOVS     R1,R0
   \   0000027C   0x0028             MOVS     R0,R5
   \   0000027E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000282   0x.... 0x....      BL       __aeabi_f2iz
   \   00000286   0x....             LDR.N    R1,??DataTable3_32
   \   00000288   0x6008             STR      R0,[R1, #+0]
   1323          
   1324          
   1325          
   1326          SteerEssOld = SteerEss;
   \   0000028A   0x....             LDR.N    R0,??DataTable3_33
   \   0000028C   0x6800             LDR      R0,[R0, #+0]
   \   0000028E   0x....             LDR.N    R1,??DataTable3_34
   \   00000290   0x6008             STR      R0,[R1, #+0]
   1327          
   1328          Turn_Kp_N=D_P*X_Correct[abs(ess)];
   \   00000292   0x....             LDR.N    R0,??DataTable3_25
   \   00000294   0x6800             LDR      R0,[R0, #+0]
   \   00000296   0x.... 0x....      BL       __aeabi_f2iz
   \   0000029A   0x.... 0x....      BL       abs
   \   0000029E   0x....             LDR.N    R1,??DataTable3_35
   \   000002A0   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   000002A4   0x....             LDR.N    R1,??DataTable3_36
   \   000002A6   0x6809             LDR      R1,[R1, #+0]
   \   000002A8   0x.... 0x....      BL       __aeabi_fmul
   \   000002AC   0x.... 0x....      BL       __aeabi_f2iz
   \   000002B0   0x....             LDR.N    R1,??DataTable3_37
   \   000002B2   0x6008             STR      R0,[R1, #+0]
   1329          
   1330          SteerEss =Turn_Kp_N* ess+ TurnUd[0];//Ka*speedmiddle*speedmiddle/R;
   \   000002B4   0x....             LDR.N    R0,??DataTable3_37
   \   000002B6   0x6800             LDR      R0,[R0, #+0]
   \   000002B8   0x.... 0x....      BL       __aeabi_i2f
   \   000002BC   0x....             LDR.N    R1,??DataTable3_25
   \   000002BE   0x6809             LDR      R1,[R1, #+0]
   \   000002C0   0x.... 0x....      BL       __aeabi_fmul
   \   000002C4   0x9900             LDR      R1,[SP, #+0]
   \   000002C6   0x.... 0x....      BL       __aeabi_fadd
   \   000002CA   0x.... 0x....      BL       __aeabi_f2iz
   \   000002CE   0x....             LDR.N    R1,??DataTable3_33
   \   000002D0   0x6008             STR      R0,[R1, #+0]
   1331          
   1332          
   1333          
   1334          
   1335          if(Elbowbendflagl)
   \   000002D2   0x....             LDR.N    R0,??DataTable3_38
   \   000002D4   0x6800             LDR      R0,[R0, #+0]
   \   000002D6   0x2800             CMP      R0,#+0
   \   000002D8   0xD047             BEQ.N    ??Control_10
   1336          {
   1337          //BmaCnt=1;
   1338          SteerEss=-SpecialPWM*Elbowbendflagl/(D_I/2);   
   \   000002DA   0x....             LDR.N    R0,??DataTable3_39
   \   000002DC   0x6800             LDR      R0,[R0, #+0]
   \   000002DE   0x4240             RSBS     R0,R0,#+0
   \   000002E0   0x....             LDR.N    R1,??DataTable3_38
   \   000002E2   0x6809             LDR      R1,[R1, #+0]
   \   000002E4   0x4348             MULS     R0,R1,R0
   \   000002E6   0x.... 0x....      BL       __aeabi_i2f
   \   000002EA   0x0004             MOVS     R4,R0
   \   000002EC   0x....             LDR.N    R0,??DataTable3_40
   \   000002EE   0x6800             LDR      R0,[R0, #+0]
   \   000002F0   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000002F4   0x.... 0x....      BL       __aeabi_fdiv
   \   000002F8   0x0001             MOVS     R1,R0
   \   000002FA   0x0020             MOVS     R0,R4
   \   000002FC   0x.... 0x....      BL       __aeabi_fdiv
   \   00000300   0x.... 0x....      BL       __aeabi_f2iz
   \   00000304   0x....             LDR.N    R1,??DataTable3_33
   \   00000306   0x6008             STR      R0,[R1, #+0]
   1339          if(Elbowbendflagl>(D_I/2))     
   \   00000308   0x....             LDR.N    R0,??DataTable3_38
   \   0000030A   0x6800             LDR      R0,[R0, #+0]
   \   0000030C   0x.... 0x....      BL       __aeabi_i2f
   \   00000310   0x0001             MOVS     R1,R0
   \   00000312   0x000C             MOVS     R4,R1
   \   00000314   0x....             LDR.N    R0,??DataTable3_40
   \   00000316   0x6800             LDR      R0,[R0, #+0]
   \   00000318   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000031C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000320   0x0021             MOVS     R1,R4
   \   00000322   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000326   0xD220             BCS.N    ??Control_10
   1340          SteerEss=-SpecialPWM*(D_I-Elbowbendflagl)/(D_I/2);   
   \   00000328   0x....             LDR.N    R0,??DataTable3_39
   \   0000032A   0x6800             LDR      R0,[R0, #+0]
   \   0000032C   0x4240             RSBS     R0,R0,#+0
   \   0000032E   0x.... 0x....      BL       __aeabi_i2f
   \   00000332   0x0004             MOVS     R4,R0
   \   00000334   0x....             LDR.N    R0,??DataTable3_38
   \   00000336   0x6800             LDR      R0,[R0, #+0]
   \   00000338   0x.... 0x....      BL       __aeabi_i2f
   \   0000033C   0x0001             MOVS     R1,R0
   \   0000033E   0x....             LDR.N    R0,??DataTable3_40
   \   00000340   0x6800             LDR      R0,[R0, #+0]
   \   00000342   0x.... 0x....      BL       __aeabi_fsub
   \   00000346   0x0021             MOVS     R1,R4
   \   00000348   0x.... 0x....      BL       __aeabi_fmul
   \   0000034C   0x0004             MOVS     R4,R0
   \   0000034E   0x....             LDR.N    R0,??DataTable3_40
   \   00000350   0x6800             LDR      R0,[R0, #+0]
   \   00000352   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000356   0x.... 0x....      BL       __aeabi_fdiv
   \   0000035A   0x0001             MOVS     R1,R0
   \   0000035C   0x0020             MOVS     R0,R4
   \   0000035E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000362   0x.... 0x....      BL       __aeabi_f2iz
   \   00000366   0x....             LDR.N    R1,??DataTable3_33
   \   00000368   0x6008             STR      R0,[R1, #+0]
   1341          }
   1342          
   1343          if(Elbowbendflagr)
   \                     ??Control_10: (+1)
   \   0000036A   0x....             LDR.N    R0,??DataTable3_41
   \   0000036C   0x6800             LDR      R0,[R0, #+0]
   \   0000036E   0x2800             CMP      R0,#+0
   \   00000370   0xD045             BEQ.N    ??Control_11
   1344          {
   1345          //BmaCnt=1;
   1346          SteerEss=SpecialPWM*Elbowbendflagr/(D_I/2);   
   \   00000372   0x....             LDR.N    R0,??DataTable3_39
   \   00000374   0x6800             LDR      R0,[R0, #+0]
   \   00000376   0x....             LDR.N    R1,??DataTable3_41
   \   00000378   0x6809             LDR      R1,[R1, #+0]
   \   0000037A   0x4348             MULS     R0,R1,R0
   \   0000037C   0x.... 0x....      BL       __aeabi_i2f
   \   00000380   0x0004             MOVS     R4,R0
   \   00000382   0x....             LDR.N    R0,??DataTable3_40
   \   00000384   0x6800             LDR      R0,[R0, #+0]
   \   00000386   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000038A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000038E   0x0001             MOVS     R1,R0
   \   00000390   0x0020             MOVS     R0,R4
   \   00000392   0x.... 0x....      BL       __aeabi_fdiv
   \   00000396   0x.... 0x....      BL       __aeabi_f2iz
   \   0000039A   0x....             LDR.N    R1,??DataTable3_33
   \   0000039C   0x6008             STR      R0,[R1, #+0]
   1347          if(Elbowbendflagr>(D_I/2))     
   \   0000039E   0x....             LDR.N    R0,??DataTable3_41
   \   000003A0   0x6800             LDR      R0,[R0, #+0]
   \   000003A2   0x.... 0x....      BL       __aeabi_i2f
   \   000003A6   0x0001             MOVS     R1,R0
   \   000003A8   0x000C             MOVS     R4,R1
   \   000003AA   0x....             LDR.N    R0,??DataTable3_40
   \   000003AC   0x6800             LDR      R0,[R0, #+0]
   \   000003AE   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000003B2   0x.... 0x....      BL       __aeabi_fdiv
   \   000003B6   0x0021             MOVS     R1,R4
   \   000003B8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003BC   0xD21F             BCS.N    ??Control_11
   1348          SteerEss=SpecialPWM*(D_I-Elbowbendflagr)/(D_I/2);   
   \   000003BE   0x....             LDR.N    R0,??DataTable3_39
   \   000003C0   0x6800             LDR      R0,[R0, #+0]
   \   000003C2   0x.... 0x....      BL       __aeabi_i2f
   \   000003C6   0x0004             MOVS     R4,R0
   \   000003C8   0x....             LDR.N    R0,??DataTable3_41
   \   000003CA   0x6800             LDR      R0,[R0, #+0]
   \   000003CC   0x.... 0x....      BL       __aeabi_i2f
   \   000003D0   0x0001             MOVS     R1,R0
   \   000003D2   0x....             LDR.N    R0,??DataTable3_40
   \   000003D4   0x6800             LDR      R0,[R0, #+0]
   \   000003D6   0x.... 0x....      BL       __aeabi_fsub
   \   000003DA   0x0021             MOVS     R1,R4
   \   000003DC   0x.... 0x....      BL       __aeabi_fmul
   \   000003E0   0x0004             MOVS     R4,R0
   \   000003E2   0x....             LDR.N    R0,??DataTable3_40
   \   000003E4   0x6800             LDR      R0,[R0, #+0]
   \   000003E6   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000003EA   0x.... 0x....      BL       __aeabi_fdiv
   \   000003EE   0x0001             MOVS     R1,R0
   \   000003F0   0x0020             MOVS     R0,R4
   \   000003F2   0x.... 0x....      BL       __aeabi_fdiv
   \   000003F6   0x.... 0x....      BL       __aeabi_f2iz
   \   000003FA   0x....             LDR.N    R1,??DataTable3_33
   \   000003FC   0x6008             STR      R0,[R1, #+0]
   1349          }
   1350          
   1351          
   1352          
   1353          //      BmaCnt=1;
   1354          //    SteerEss=(SpecialPWM/4)*(D_I-Elbowbendflagl)/(D_I/4)
   1355          //    if(Elbowbendflagl<(D_I/(3*4)))
   1356          //     SteerEss=(SpecialPWM/4)+(SpecialPWM*0.75)*(D_I*0.75-Elbowbendflagl)/(D_I/4);
   1357          //    if(Elbowbendflagl<(D_I/2))
   1358          //    SteerEss=SpecialPWM+(SpecialPWM*0.75)*(D_I*0.5-Elbowbendflagl)/(D_I/4);   
   1359          //    if(Elbowbendflagl<(D_I/4))     
   1360          //    SteerEss=SpecialPWM*0.75+0.25*SpecialPWM*(D_I*0.75-Elbowbendflagl)/(D_I/4); 
   1361          
   1362          
   1363          //if(Elbowbendflagl)
   1364          //{
   1365          //BmaCnt=1;
   1366          //
   1367          //if(Elbowbendflagl<Speed_Kd)
   1368          //
   1369          //SteerEss=-SpecialPWM*(Speed_Kd-Elbowbendflagl)/(Speed_Kd/2);
   1370          //
   1371          //if(Elbowbendflagl<(Speed_Kd/2))
   1372          //
   1373          //SteerEss=-SpecialPWM*Elbowbendflagl/(Speed_Kd/2);
   1374          //
   1375          //
   1376          //}
   1377          //
   1378          //if(Elbowbendflagr)
   1379          //{
   1380          //
   1381          //BmaCnt=1;
   1382          //
   1383          //if(Elbowbendflagr<Speed_Kd)
   1384          //
   1385          //SteerEss=SpecialPWM*(Speed_Kd-Elbowbendflagr)/(Speed_Kd/2);
   1386          //
   1387          //if(Elbowbendflagr<(Speed_Kd/2))
   1388          //
   1389          //SteerEss=SpecialPWM*Elbowbendflagr/(Speed_Kd/2);
   1390          //
   1391          //
   1392          //
   1393          //
   1394          //
   1395          //}
   1396          
   1397          
   1398          
   1399          
   1400          if(SteerEss<-15000)
   \                     ??Control_11: (+1)
   \   000003FE   0x....             LDR.N    R0,??DataTable3_33
   \   00000400   0x6800             LDR      R0,[R0, #+0]
   \   00000402   0x....             LDR.N    R1,??DataTable3_42  ;; 0xffffc568
   \   00000404   0x4288             CMP      R0,R1
   \   00000406   0xDA02             BGE.N    ??Control_12
   1401          {
   1402          SteerEss=-15000;
   \   00000408   0x....             LDR.N    R0,??DataTable3_42  ;; 0xffffc568
   \   0000040A   0x....             LDR.N    R1,??DataTable3_33
   \   0000040C   0x6008             STR      R0,[R1, #+0]
   1403          //BmaCnt=2; 
   1404          }
   1405          
   1406          if(SteerEss>15000)
   \                     ??Control_12: (+1)
   \   0000040E   0x....             LDR.N    R0,??DataTable3_33
   \   00000410   0x6800             LDR      R0,[R0, #+0]
   \   00000412   0xF643 0x2199      MOVW     R1,#+15001
   \   00000416   0x4288             CMP      R0,R1
   \   00000418   0xDB03             BLT.N    ??Control_13
   1407          {
   1408          SteerEss=15000;
   \   0000041A   0xF643 0x2098      MOVW     R0,#+15000
   \   0000041E   0x....             LDR.N    R1,??DataTable3_33
   \   00000420   0x6008             STR      R0,[R1, #+0]
   1409          //BmaCnt=2; 
   1410          
   1411          }
   1412          
   1413          for(j=7;j>=0;j--)
   \                     ??Control_13: (+1)
   \   00000422   0x2007             MOVS     R0,#+7
   \   00000424   0x....             LDR.N    R1,??DataTable3_19
   \   00000426   0x6008             STR      R0,[R1, #+0]
   \   00000428   0xE00F             B.N      ??Control_14
   1414          {
   1415          Ess[j+1]=Ess[j];
   \                     ??Control_15: (+1)
   \   0000042A   0x....             LDR.N    R0,??DataTable3_43
   \   0000042C   0x....             LDR.N    R1,??DataTable3_19
   \   0000042E   0x6809             LDR      R1,[R1, #+0]
   \   00000430   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000434   0x....             LDR.N    R1,??DataTable3_43
   \   00000436   0x....             LDR.N    R2,??DataTable3_19
   \   00000438   0x6812             LDR      R2,[R2, #+0]
   \   0000043A   0xEB11 0x0182      ADDS     R1,R1,R2, LSL #+2
   \   0000043E   0x6048             STR      R0,[R1, #+4]
   1416          }
   \   00000440   0x....             LDR.N    R0,??DataTable3_19
   \   00000442   0x6800             LDR      R0,[R0, #+0]
   \   00000444   0x1E40             SUBS     R0,R0,#+1
   \   00000446   0x....             LDR.N    R1,??DataTable3_19
   \   00000448   0x6008             STR      R0,[R1, #+0]
   \                     ??Control_14: (+1)
   \   0000044A   0x....             LDR.N    R0,??DataTable3_19
   \   0000044C   0x6800             LDR      R0,[R0, #+0]
   \   0000044E   0x2800             CMP      R0,#+0
   \   00000450   0xD5EB             BPL.N    ??Control_15
   1417          Ess[0]=ess;
   \   00000452   0x....             LDR.N    R0,??DataTable3_25
   \   00000454   0x6800             LDR      R0,[R0, #+0]
   \   00000456   0x.... 0x....      BL       __aeabi_f2iz
   \   0000045A   0x....             LDR.N    R1,??DataTable3_43
   \   0000045C   0x6008             STR      R0,[R1, #+0]
   1418          
   1419          
   1420          
   1421          }
   \   0000045E   0xB007             ADD      SP,SP,#+28
   \   00000460   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     i

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     FieldCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     Add_threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     i

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     j

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ADV

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     LGrayMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     CNT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     THreshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     Stopflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     L_edgeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     R_edgeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     GrayMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     GrayMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     GrayMIN

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     GrayMAX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     startl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     Startl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     midline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     yanLL

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     Ka

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x........         DC32     startr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     Ledge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     Startr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     yanRR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     Redge

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     len_show

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     SinglineEN

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     singleflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     single

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     singleL

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     singleR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     Singleflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     BmaCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     straightFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     Weight_Denominator

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     Weight_Molecular

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     L_edgeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     R_edgeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     midline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     save_midline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     j

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x........         DC32     weight_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     weight_Min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     weight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     Midline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     dir_error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     ess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     TurnGyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     TurnGyro_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x51EB851F         DC32     0x51eb851f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x3FD51EB8         DC32     0x3fd51eb8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x........         DC32     D_D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     H

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x........         DC32     R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \   00000000   0x........         DC32     SteerEss

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_34:
   \   00000000   0x........         DC32     SteerEssOld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_35:
   \   00000000   0x........         DC32     X_Correct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_36:
   \   00000000   0x........         DC32     D_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_37:
   \   00000000   0x........         DC32     Turn_Kp_N

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_38:
   \   00000000   0x........         DC32     Elbowbendflagl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_39:
   \   00000000   0x........         DC32     SpecialPWM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_40:
   \   00000000   0x........         DC32     D_I

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_41:
   \   00000000   0x........         DC32     Elbowbendflagr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_42:
   \   00000000   0xFFFFC568         DC32     0xffffc568

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_43:
   \   00000000   0x........         DC32     Ess

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   1422          
   1423          
   1424          
   1425          
   1426          
   1427          
   1428          
   1429          
   1430          
   1431          
   1432          
   1433          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   Control
        40   -> __aeabi_d2iz
        40   -> __aeabi_dmul
        40   -> __aeabi_f2d
        40   -> __aeabi_f2iz
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40   -> __aeabi_i2f
        40   -> __aeabi_ui2f
        40   -> abs
        40   -> ad_once
        40 __aeabi_cfcmple
       0   Dev_cal
      16   TSL1401_GetLine_Oneshot
        16   -> ad_once
        16   -> delay
       8   firstshot
         8   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_34
       4  ??DataTable3_35
       4  ??DataTable3_36
       4  ??DataTable3_37
       4  ??DataTable3_38
       4  ??DataTable3_39
       4  ??DataTable3_4
       4  ??DataTable3_40
       4  ??DataTable3_41
       4  ??DataTable3_42
       4  ??DataTable3_43
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       8  ?_0
       8  ?_1
       8  ?_2
     128  ADV
       4  Add_threshold
       4  BlackFlag
       4  BlackFlagcnt
       4  Blackflag
       4  BlackflagEN
       4  Blackflagl
       4  Blackflagr
       4  BlockFlag
       4  BlockL
       4  BlockR
       4  Blockflag
       4  Blockflagl
       4  Blockflagr
       4  BlocklEN
       4  BlockrEN
       4  BmaEN
       4  CCD_H
       4  CCD_Q
     800  CNT
      40  Cnt
    1122  Control
    3454  Dev_cal
       4  Elbowbendflag
       4  Elbowbendflagl
       4  Elbowbendflagr
       4  ElbowbendlEN
       4  ElbowbendrEN
       4  End
      40  Ess
      80  GrayMAX
      80  GrayMIN
       4  GrayMax
       1  GrayMaxMinflagL
       1  GrayMaxMinflagR
       4  GrayMaxPtrL
       4  GrayMaxPtrR
       4  GrayMaxl
       1  GrayMaxr
       4  GrayMin
       4  GrayMinPtrL
       4  GrayMinPtrR
       4  GrayMinl
       1  GrayMinr
       1  GraydownL
       1  GraydownL1
       1  GraydownR
       1  GraydownR1
       1  GrayleftedgeL
       1  GrayleftedgeR
      16  Kp_Ess
       4  LEDGE
       4  LGrayMax
       1  LGrayMaxl
       1  LGrayMaxr
      32  L_edgeFlag
     120  Ledge
       4  LighthouseEN
       4  Lthreshold
       4  Midline
       4  OledShowEN
       4  ProtectEN
       4  R
       4  REDGE
      32  R_edgeFlag
       4  RampEN
     120  Redge
       4  SingleFlag
       4  SinglineEN
       4  SpeedextraEN
      40  Startl
      40  Startr
       4  SteerEssEN
       4  Straight
     192  TSL1401_GetLine_Oneshot
       4  Turn_Kp_N
       4  Weight_Denominator
       4  Weight_Molecular
       4  WhiteEN
      40  X
     240  X_Correct
       4  Xcal_L
       4  Xcal_R
       4  YZ
      20  aa
       4  add_midline
       4  barrier_dss
       4  cnt
       4  ctt
       4  dir_error
       1  error_flag
       4  ess
       4  f
     128  firstshot
       4  i
       4  issue_threshold
       4  j
       4  len_real
       4  len_realcnt
       4  len_realsum
      12  len_show
      12  save_midline
       4  single
       4  singleL
       4  singleR
       4  singleflag
       4  singleflag1
       4  singleflag2
       4  startflag
       4  startl
       4  startr
       4  straight
      40  straightFlag
       4  straightflag
       4  threshold
      16  weight
       4  weight_max
       4  yanLL
       4  yanRR

 
 1 601 bytes in section .bss
   688 bytes in section .data
    24 bytes in section .rodata
 5 184 bytes in section .text
 
 5 184 bytes of CODE  memory
    24 bytes of CONST memory
 2 289 bytes of DATA  memory

Errors: none
Warnings: 24
